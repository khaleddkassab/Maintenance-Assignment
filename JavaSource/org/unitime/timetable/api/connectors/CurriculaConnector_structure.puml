@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "org.unitime.timetable.api.connectors.CurriculaConnector",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1905501234 { 
   	label="no qualified name"
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   noqualifiedname1905501234[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TextBoxEvents</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onKeyDown(event: KeyDownEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onKeyPress(event: KeyPressEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onKeyUp(event: KeyUpEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onValueChange(event: ValueChangeEvent&lt;String&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_286515267 { 
   	label=unitime
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1091941328 { 
   	label=timetable
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   AGHCourseDetailsProvider2037228697[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AGHCourseDetailsProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- downloadDetails(url: URL, courseUrl: URL, utCourse: CourseOffering): String</TD></TR>
<TR><TD ALIGN="LEFT" >- findClassificationBySessionSubjAreaAbbvCourseNbr(sessionId: Long, subject: String, courseNbr: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- findYears(session: AcademicSessionInfo, subject: String, courseNbr: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getApiUrl(session: AcademicSessionInfo, subject: String, courseNbr: String): URL</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseUrl(session: AcademicSessionInfo, subject: String, courseNbr: String): URL</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDetails(session: AcademicSessionInfo, subject: String, courseNbr: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ syllabusLink(year: Integer, term: String, classification: Integer): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractApiHelper79803438[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractApiHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCacheMode: CacheMode [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iContext: SessionContext [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iHibSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRequest: HttpServletRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iResponse: HttpServletResponse [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSessionId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ close()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOptinalParameter(name: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOptinalParameterBoolean(name: String, defaultValue: Boolean): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOptinalParameterInteger(name: String, defaultValue: Integer): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOptinalParameterLong(name: String, defaultValue: Long): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameter(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameterValues(name: String): String[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequiredParameter(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequiredParameterBoolean(name: String): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequiredParameterInteger(name: String): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequiredParameterLong(name: String): Long</TD></TR>
<TR><TD ALIGN="LEFT" ># guessAcademicSessionId(): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendError(code: int, message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendError(code: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendError(code: int, error: Throwable)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractAuthority876918435[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractAuthority</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQualifiers: List&lt;UserQualifier&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRights: Set&lt;Right&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRole: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: UserQualifier [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addQualifier(qualifier: UserQualifier)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addQualifier(qualifiable: Qualifiable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getQualifier(qualifiable: Qualifiable): UserQualifier</TD></TR>
<TR><TD ALIGN="LEFT" >+ getQualifiers(type: String): List&lt;? extends UserQualifier&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasQualifier(qualifiable: Qualifiable): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRight(right: Right): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractLockingServer1593966791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractLockingServer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLock: ReentrantReadWriteLock [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMultiLock: MultiLock [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingLocks: Map&lt;Long, Lock&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- getOfferingIdFromCourseName(courseName: String): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOfferingLocked(offeringId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># load(context: OnlineSectioningServerContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockAll(): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockOffering(offeringId: Long, studentIds: Collection&lt;Long&gt;, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockOffering(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockRequest(request: CourseRequestInterface, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockStudent(studentId: Long, offeringIds: Collection&lt;Long&gt;, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ readLock(): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ releaseAllOfferingLocks()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unlockOffering(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeLock(): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeLockIfNotHeld(): Lock</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractQualifier54601263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractQualifier</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Serializable [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- notNullAndEqual(o1: Object, o2: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractReport909408393[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractReport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iMode: Mode [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWriter: ReportWriter [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ close()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExtension(mode: Mode): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExtension(mode: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ headerPrinted()</TD></TR>
<TR><TD ALIGN="LEFT" >+ lastPage()</TD></TR>
<TR><TD ALIGN="LEFT" ># lpad(s: String, len: int): Cell</TD></TR>
<TR><TD ALIGN="LEFT" ># lpad(s: String, c: char, len: int): Cell</TD></TR>
<TR><TD ALIGN="LEFT" ># mpad(s: String, len: int): Cell</TD></TR>
<TR><TD ALIGN="LEFT" ># mpad(s: String, c: char, len: int): Cell</TD></TR>
<TR><TD ALIGN="LEFT" ># newPage()</TD></TR>
<TR><TD ALIGN="LEFT" >+ open(file: File)</TD></TR>
<TR><TD ALIGN="LEFT" >+ open(out: OutputStream)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHeader()</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHeader(newPage: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># printLine(line: Line)</TD></TR>
<TR><TD ALIGN="LEFT" ># printSeparator(cells: Cell...)</TD></TR>
<TR><TD ALIGN="LEFT" ># println()</TD></TR>
<TR><TD ALIGN="LEFT" ># println(line: Line...)</TD></TR>
<TR><TD ALIGN="LEFT" ># println(cells: Cell...)</TD></TR>
<TR><TD ALIGN="LEFT" ># rpad(s: String, len: int): Cell</TD></TR>
<TR><TD ALIGN="LEFT" ># rpad(s: String, c: char, len: int): Cell</TD></TR>
<TR><TD ALIGN="LEFT" ># rpad(c: Cell, len: int): Cell</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractServer1593966791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractServer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iActionFactory: OnlineSectioningActionFactory [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConfig: DataProperties [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistanceMetric: DistanceMetric [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExecutorQueue: Queue&lt;Runnable&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExecutors: List&lt;AsyncExecutor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLog: Log [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMasterThread: MasterAcquiringThread [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingsToPersistExpectedSpaces: HashSet&lt;CacheElement&lt;Long&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iProperties: Map&lt;String, Object&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkDeadline(courseId: Long, sectionTime: XTime, type: Deadline): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ createAction(clazz: Class&lt;X&gt;): X</TD></TR>
<TR><TD ALIGN="LEFT" >- estimate(mc: MemoryCounter, obj: Object): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(action: OnlineSectioningAction&lt;E&gt;, user: Entity): E</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(action: OnlineSectioningAction&lt;E&gt;, user: Entity, callback: ServerCallback&lt;E&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseId: Long, courseName: String): XCourseId</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseDeadlines(courseId: Long): CourseDeadlines</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseDetails(courseId: Long, provider: CourseDetailsProvider): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEnrollments(offeringId: Long): XEnrollments</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOfferingsToPersistExpectedSpaces(minimalAge: long): List&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(name: String, defaultValue: E): E</TD></TR>
<TR><TD ALIGN="LEFT" ># load(context: OnlineSectioningServerContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># loadOnMaster(context: OnlineSectioningServerContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ needPersistExpectedSpaces(offeringId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ persistExpectedSpaces(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" ># releaseCurrentHelper()</TD></TR>
<TR><TD ALIGN="LEFT" >+ releaseMasterLockIfHeld()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unload()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractSolver1792699557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractSolver&lt;V extends Variable&lt;V, T&gt;, T extends Value&lt;V, T&gt;, M extends Model&lt;V, T&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBestSolutionInfoBeforePassivation: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCurrentSolutionInfoBeforePassivation: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisposeListener: SolverDisposeListener [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIsPassivated: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastTimeStamp: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLoadedDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPassivationFolder: File [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPassivationPuid: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProgressBeforePassivation: Map [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWorkThread: Thread [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWorking: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   sLog: Log [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ activateIfNeeded(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># afterLoad()</TD></TR>
<TR><TD ALIGN="LEFT" ># afterSave()</TD></TR>
<TR><TD ALIGN="LEFT" ># afterValidate()</TD></TR>
<TR><TD ALIGN="LEFT" >+ backup(folder: File, puid: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># beforeStart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ bestSolutionInfo(): Map&lt;String, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ canPassivate(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" ># createCurrentSolutionBackup(anonymize: boolean, idconv: boolean): Document</TD></TR>
<TR><TD ALIGN="LEFT" ># createModel(properties: DataProperties): M</TD></TR>
<TR><TD ALIGN="LEFT" >+ currentSolution(): Solution&lt;V, T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ currentSolutionInfo(): Map&lt;String, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispose()</TD></TR>
<TR><TD ALIGN="LEFT" ># disposeNoInherit(unregister: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ exportXml(): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" ># finishBeforeSave()</TD></TR>
<TR><TD ALIGN="LEFT" ># getCustomValidator(solver: Solver&lt;V, T&gt;): ProblemSaver&lt;V, T, M&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getDatabaseLoader(model: M, assignment: Assignment&lt;V, T&gt;): ProblemLoader&lt;V, T, M&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getDatabaseSaver(solver: Solver&lt;V, T&gt;): ProblemSaver&lt;V, T, M&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLog(level: int, includeDate: boolean, fromStage: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProgressLog(level: Integer, fromStage: String, since: Date): List&lt;Message&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ importXml(data: byte[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ interrupt()</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(properties: DataProperties)</TD></TR>
<TR><TD ALIGN="LEFT" ># onFinish()</TD></TR>
<TR><TD ALIGN="LEFT" ># onStop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ passivate(folder: File, puid: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ passivateIfNeeded(folder: File, puid: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># readProperties(document: Document)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reload(properties: DataProperties)</TD></TR>
<TR><TD ALIGN="LEFT" >+ restore(folder: File, puid: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ restore(folder: File, puid: String, removeFiles: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ restoreBest()</TD></TR>
<TR><TD ALIGN="LEFT" ># restureCurrentSolutionFromBackup(document: Document)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save()</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveBest()</TD></TR>
<TR><TD ALIGN="LEFT" ># saveProperties(document: Document)</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ statusSolutionInfo(): Map&lt;String, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ timeFromLastUsed(): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ validate()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractSolverServer398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractSolverServer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iActive: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStartTime: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iUsageBase: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ refreshCourseSolution(solutionIds: Long...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshExamSolution(sessionId: Long, examTypeId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshInstructorSolution(solverGroupIds: Collection&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reset()</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractUserContext641976759[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractUserContext</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAuthorities: Set&lt;UserAuthority&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCurrentAuthority: UserAuthority [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProperties: Map&lt;String, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># addAuthority(authority: UserAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAuthorities(role: String, filter: Qualifiable...): List&lt;? extends UserAuthority&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAuthority(role: String, uniqueId: Long): UserAuthority</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAuthority(authority: String): UserAuthority</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(key: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(key: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(property: UserProperty): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAuthority(authority: UserAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAuthority(role: String, uniqueId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAuthority(authority: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasDepartment(departmentId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRole(role: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicArea629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicArea</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByAbbv(sessionId: Long, abbv: String): AcademicArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByAbbv(hibSession: Session, sessionId: Long, abbv: String): AcademicArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalId(sessionId: Long, externalId: String): AcademicArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalId(hibSession: Session, sessionId: Long, externalId: String): AcademicArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAcademicAreaList(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ isUsed(hibSession: Session): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicAreaDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicAreaDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicAreaHistoryDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicAreaHistoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicAreaImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicAreaImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicAreaInterface1351995911[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicAreaInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAreaAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAreaId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAreaName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(area: AcademicAreaInterface): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicAreas1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicAreas</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(area: AcademicArea, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(area: AcademicArea, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicClassification629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicClassification</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCode(sessionId: Long, code: String): AcademicClassification</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCode(hibSession: Session, sessionId: Long, code: String): AcademicClassification</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalId(sessionId: Long, externalId: String): AcademicClassification</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalId(hibSession: Session, sessionId: Long, externalId: String): AcademicClassification</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAcademicClassification(academicClass: String): AcademicClassification</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAcademicClassificationList(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ isUsed(hibSession: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAcademicClassifications(sessionId: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicClassificationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicClassificationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicClassificationImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicClassificationImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicClassificationInterface1351995911[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicClassificationInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClasfCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClasfId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClasfName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(clasf: AcademicClassificationInterface): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicClassifications1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicClassifications</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(clasf: AcademicClassification, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(clasf: AcademicClassification, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicSession918787286[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicSession</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFlags: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHint: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNextId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreviousId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelected: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clear(f: Flag)</TD></TR>
<TR><TD ALIGN="LEFT" >+ has(f: Flag): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicSessionDelete1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicSessionDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: Permission&lt;Session&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicSessionInfo1032738488[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicSessionInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCampus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePatternFirstDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDayOfWeekOffset: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultEndDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultInstructionalMethod: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultStartDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFreeTimePattern: BitSet [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectioningEnabled: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionBegin: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTerm: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWeekPattern: BitSet [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWkChange: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWkDrop: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWkEnroll: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iYear: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(a: AcademicSessionInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDatePatternFirstDay(s: Session): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFreeTimeBitSet(session: Session): BitSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ toCompactString(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(session: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicSessionInfo1924258583[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicSessionInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCampus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalCampus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalTerm: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTerm: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iYear: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(s: AcademicSessionInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ setExternalCampus(extCampus: String): AcademicSessionInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ setExternalTerm(extTerm: String): AcademicSessionInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicSessionInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicSessionInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicSessionInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicSessionInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanAddDepartmentalRoomFeature: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAddDepartmentalRoomGroup: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAddGlobalRoomFeature: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAddGlobalRoomGroup: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAddNonUniversity: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAddRoom: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicSessionSelectionBox531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicSessionSelectionBox</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllSessions: List&lt;AcademicSession&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iChangeHandlers: List&lt;AcademicSessionChangeHandler&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilter: AcademicSessionFilter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastSessionId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAcademicSessionChangeHandler(handler: AcademicSessionChangeHandler)</TD></TR>
<TR><TD ALIGN="LEFT" >+ fireAcademicSessionChanged()</TD></TR>
<TR><TD ALIGN="LEFT" ># next(interval: Interval): Interval</TD></TR>
<TR><TD ALIGN="LEFT" ># onInitializationFailure(caught: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" ># onInitializationSuccess(sessions: List&lt;AcademicSession&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># previous(interval: Interval): Interval</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectSession(sessionId: Long, callback: AsyncCallback&lt;Boolean&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectSession(sessionAbbreviation: String, callback: AsyncCallback&lt;Boolean&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># session(id: Long): AcademicSession</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicSessionSetupExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicSessionSetupExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- dayCode2days(dayCode: int): String</TD></TR>
<TR><TD ALIGN="LEFT" ># exportAcademicAreas(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportAcademicClassifications(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportDatePatterns(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportDegrees(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportDepartments(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportExaminationPeriods(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportMajors(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportManagers(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportMinors(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportSession(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportSolverGroups(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportStudentAccomodations(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportStudentGroups(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportSubjectAreas(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportTimePatterns(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
<TR><TD ALIGN="LEFT" >- startSlot2startTime(startSlot: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcademicSessionSetupImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcademicSessionSetupImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createOrUpdateSession(session: Session, root: Element, dateFormat: Format&lt;Date&gt;): Session</TD></TR>
<TR><TD ALIGN="LEFT" >+ days2code(daysOfWeek: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ importAcademicAreas(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importAcademicClassifications(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importDatePatterns(root: Element, session: Session, dateFormat: Format&lt;Date&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importDegrees(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importDepartments(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importExaminationPeriods(root: Element, session: Session, dateFormat: Format&lt;Date&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importMajors(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importManagers(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importMinors(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importSolverGroups(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importStudentAccomodations(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importStudentGroups(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importSubjectAreas(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ importTimePatterns(root: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ time2slot(time: int): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AddCourseOffering317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AddCourseOffering</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SubjectArea): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SubjectArea&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AddExamination1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AddExamination</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationStatus: PermissionExamination [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AddNonUnivLocation82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AddNonUnivLocation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AddRoom82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AddRoom</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AddSpecialUseRoom82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AddSpecialUseRoom</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AddSpecialUseRoomExternalRoom82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AddSpecialUseRoomExternalRoom</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: ExternalRoom): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;ExternalRoom&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdminBackend1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdminBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getTable(context: ApplicationContext, type: String): AdminTable</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdminExportToCSV1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdminExportToCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># cell(field: Field, record: Record, index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># export(data: SimpleEditInterface, helper: ExportHelper, hidden: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># getValue(field: Field, record: Record, index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" ># hasDetails(data: SimpleEditInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># header(data: SimpleEditInterface, field: Field): String</TD></TR>
<TR><TD ALIGN="LEFT" ># isParent(data: SimpleEditInterface, r: Record): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2time(slot: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Advisor629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Advisor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(advisor: Advisor): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalId(externalId: String, sessionId: Long): Advisor</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(instructorNameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ lookupDetails(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdvisorClassPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdvisorClassPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdvisorConfirmationExporter589151447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdvisorConfirmationExporter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdvisorCourseRequestDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdvisorCourseRequestDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdvisorCourseRequests539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdvisorCourseRequests</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdvisorCourseRequestsSubmit589151447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdvisorCourseRequestsSubmit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDetails: AdvisingStudentDetails [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): AdvisorCourseRequestSubmission</TD></TR>
<TR><TD ALIGN="LEFT" ># generatePdfConfirmation(ret: AdvisorCourseRequestSubmission, server: OnlineSectioningServer, helper: OnlineSectioningHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdvisorCourseRequestsValidate589151447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdvisorCourseRequestsValidate</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDetails: AdvisingStudentDetails [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CheckCoursesResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdvisorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdvisorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdvisorGetCourseRequests589151447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdvisorGetCourseRequests</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCheckExistingDemands: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCheckHolds: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkDemands(check: boolean): AdvisorGetCourseRequests</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkHolds(check: boolean): AdvisorGetCourseRequests</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CourseRequestInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># executeDB(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CourseRequestInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># fillCourseRequests(request: CourseRequestInterface, acrs: List&lt;AdvisorCourseRequest&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillCourseRequests(request: CourseRequestInterface, acrs: List&lt;XAdvisorRequest&gt;, server: OnlineSectioningServer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(id: Long): AdvisorGetCourseRequests</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequest(student: Student, hibSession: Session): CourseRequestInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequest(studentId: Long, hibSession: Session): CourseRequestInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequest(student: XStudent, server: OnlineSectioningServer, helper: OnlineSectioningHelper): CourseRequestInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdvisorInstrMthPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdvisorInstrMthPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AdvisorSectioningPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AdvisorSectioningPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Advisors1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Advisors</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(advisor: Advisor, context: SessionContext, hibSession: Session, studentIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># save(record: Record, context: SessionContext, hibSession: Session, studentIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(advisor: Advisor, record: Record, context: SessionContext, hibSession: Session, studentIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AllWSCHByDepartment1281202891[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AllWSCHByDepartment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createWeeklyStudentContactHoursByDepartmentReportFor(pointInTimeData: PointInTimeData, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># intializeHeader()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportDescription(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># weeklyClassHours(pitClass: PitClass): float</TD></TR>
<TR><TD ALIGN="LEFT" ># weeklyStudentClassHours(pitClass: PitClass): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AllWSCHForDepartmentByClass1281202891[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AllWSCHForDepartmentByClass</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   departmentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createWeeklyStudentContactHoursByDepartmentReportFor(pointInTimeData: PointInTimeData, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># intializeHeader()</TD></TR>
<TR><TD ALIGN="LEFT" ># parseParameters()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportDescription(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># weeklyClassHours(pitClass: PitClass): float</TD></TR>
<TR><TD ALIGN="LEFT" ># weeklyStudentClassHours(pitClass: PitClass): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AllWSCHForDepartmentByInstructor1281202891[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AllWSCHForDepartmentByInstructor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDepartmentIds: ArrayList&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createWeeklyStudentContactHoursByDepartmentReportFor(pointInTimeData: PointInTimeData, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># intializeHeader()</TD></TR>
<TR><TD ALIGN="LEFT" ># parseParameters()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportDescription(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># weeklyClassHours(pitClass: PitClass): float</TD></TR>
<TR><TD ALIGN="LEFT" ># weeklyStudentClassHours(pitClass: PitClass): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AllWSCHForDepartmentByInstructorPosition1281202891[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AllWSCHForDepartmentByInstructorPosition</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDepartmentIds: ArrayList&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createWeeklyStudentContactHoursByDepartmentReportFor(pointInTimeData: PointInTimeData, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># intializeHeader()</TD></TR>
<TR><TD ALIGN="LEFT" ># parseParameters()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportDescription(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># weeklyClassHours(pitClass: PitClass): float</TD></TR>
<TR><TD ALIGN="LEFT" ># weeklyStudentClassHours(pitClass: PitClass): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AndTerm2060480431[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AndTerm</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ match(m: TermMatcher): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(m: AmbigousTermMatcher): Boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AnonymousUserContext641976759[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AnonymousUserContext</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApiConnector79803438[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApiConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   apiToken: ApiToken [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># authenticateWithTokenIfNeeded(request: HttpServletRequest, response: HttpServletResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># createHelper(request: HttpServletRequest, response: HttpServletResponse): ApiHelper</TD></TR>
<TR><TD ALIGN="LEFT" >+ doDelete(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doDelete(request: HttpServletRequest, response: HttpServletResponse)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doGet(request: HttpServletRequest, response: HttpServletResponse)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPost(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPost(request: HttpServletRequest, response: HttpServletResponse)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPut(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPut(request: HttpServletRequest, response: HttpServletResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># revokeTokenAuthenticationIfNeeded(request: HttpServletRequest, response: HttpServletResponse)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApplicationConfig629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApplicationConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ configureLogging(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfig(key: String): ApplicationConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfigValue(key: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ toProperties(): Properties</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApplicationConfigDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApplicationConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApplicationProperties1829907366[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApplicationProperties</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clearConfigProperties()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearSessionProperties(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(key: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(sessionId: Long, key: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(property: ApplicationProperty): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(sessionId: Long, property: ApplicationProperty): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(key: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(sessionId: Long, key: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSessionProperties(sessionId: Long): Properties</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTempFile(prefix: String, ext: String): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ load()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reloadIfNeeded()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopListener()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApplyInstructorSurveyBackend1948231384[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApplyInstructorSurveyBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: InstructorSurveyApplyRequest, context: SessionContext): GwtRpcResponseNull</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApproveEnrollmentsAction91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApproveEnrollmentsAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApproval: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseIdsCanApprove: Collection&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApproveEventRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApproveEventRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iMeetings: TreeSet&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperation: Operation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addMeeting(meeting: MeetingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createRequest(operation: Operation, sessionId: Long, event: EventInterface, meetings: List&lt;MeetingInterface&gt;, message: String, emailConfirmation: boolean): ApproveEventRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AreaClasfMajor389194987[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AreaClasfMajor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iArea: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iClasf: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iConcentration: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDegree: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMajor: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iProgram: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWeight: Double [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(ac: AreaClasfMajor): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AriaSuggestArea179446374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AriaSuggestArea</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCurrentText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOracle: SuggestOracle [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOracleCallback: Callback [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPopupScroll: ScrollPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuggestionCallback: SuggestionCallback [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuggestionMenu: SuggestionMenu [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuggestionPopup: PopupPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTabPreventDefault: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iText: AriaTextArea [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- addEventsToTextBox()</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSelectionHandler(handler: SelectionHandler&lt;Suggestion&gt;): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >+ addValueChangeHandler(handler: ValueChangeHandler&lt;String&gt;): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >- fireSuggestionEvent(selectedSuggestion: Suggestion)</TD></TR>
<TR><TD ALIGN="LEFT" >+ hideSuggestionList()</TD></TR>
<TR><TD ALIGN="LEFT" >- moveSelectionDown(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- moveSelectionUp(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- refreshSuggestions()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showSuggestionList()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showSuggestions(text: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- status(suggestion: Suggestion): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ArrangeCreditUnitConfig629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ArrangeCreditUnitConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ creditAbbv(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ creditText(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ArrangeCreditUnitConfigDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ArrangeCreditUnitConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignClassInstructors1270204417[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignClassInstructors</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   classAssignmentService: AssignmentService&lt;ClassAssignmentProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   defaultTeachingResponsibilityId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addClassRecords(data: AssignClassInstructorsInterface, cls: Class_, isReadOnly: Boolean, indent: String, cx: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >- addRecordsForConfig(ioc: InstrOfferingConfig, data: AssignClassInstructorsInterface, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >- findMatchingInstructorForRecord(record: Record, classInstructors: HashSet&lt;ClassInstructor&gt;): ClassInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >- findMatchingInstructorIncludingResponsibilityForRecord(record: Record, classInstructors: HashSet&lt;ClassInstructor&gt;): ClassInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >- getFieldForColumn(dataColumn: DataColumn, ioc: InstrOfferingConfig, context: SessionContext): Field</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(cfgIdStr: String, context: SessionContext, hibSession: Session): AssignClassInstructorsInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasses(data: AssignClassInstructorsInterface, classes: Set&lt;Class_&gt;, indent: String, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >- matchesInstructor(record: Record, classInstructor: ClassInstructor): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- matchesInstructorIncludingResponsibility(record: Record, classInstructor: ClassInstructor): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAllInstructors(data: AssignClassInstructorsInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: AssignClassInstructorsInterface, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignClassInstructorsBackend1270204417[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignClassInstructorsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getTable(context: ApplicationContext): AssignClassInstructorsTable</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignClassInstructorsInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignClassInstructorsInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConfigId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseCoordinators: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iErrors: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFields: Field[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNextConfigId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPageName: PageName [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreviousConfigId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRecords: List&lt;Record&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSaveSuccessful: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowTimeAndRoom: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRecord(uniqueId: Long, deletable: boolean): Record</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecord(uniqueId: Long): Record</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRecord(uniqueId: Long): Record</TD></TR>
<TR><TD ALIGN="LEFT" >+ indexOf(name: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertEmptyRecord(pos: int): Record</TD></TR>
<TR><TD ALIGN="LEFT" >+ moveRecord(row: int, before: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignInstructors2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignInstructors</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstrOfferingConfig): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstrOfferingConfig&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignInstructorsClass2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignInstructorsClass</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Class_&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignedClasses676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignedClasses</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignedClassesBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignedClassesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCrosslistedNames(table: TableInterface, showClassSuffix: boolean, showConfigNames: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(value: int): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(value: double): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: AssignedClassesRequest, context: SessionContext): AssignedClassesResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrder(time: TimeInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAllSubjects(subjects: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignedClassesFilterBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignedClassesFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: AssignedClassesFilterRequest, context: SessionContext): AssignedClassesFilterResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignedClassesFilterRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignedClassesFilterRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignedClassesFilterResponse926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignedClassesFilterResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPreferences: List&lt;PreferenceInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPreference(preference: PreferenceInterface)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignedClassesRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignedClassesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: FilterInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignedClassesResponse926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignedClassesResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPageMessages: List&lt;PageMessage&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPageMessage(message: PageMessage)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignedExaminations1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignedExaminations</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Assignment629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Assignment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iAssignmentInfoCache: Hashtable [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBreakTime: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iConstraintInfoCache: Hashtable [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPlacement: Placement [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSlotsPerMtg: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeLocation: TimeLocation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ cleastAssignmentInfoCache()</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateCommittedEvent(event: ClassEvent, createNoRoomMeetings: boolean): ClassEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfo(name: String): TimetableInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassName(showSuffix: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConstraintInfo(name: String): TimetableInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConstraintInfoTable(name: String): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConstraintInfos(name: String): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDistance(a1: Assignment, a2: Assignment): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ isInConflict(other: Assignment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isInConflict(a1: Assignment, a2: Assignment, useDistances: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ overlaps(another: Assignment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shareDays(another: Assignment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shareHours(another: Assignment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shareWeeks(another: Assignment): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentChangesBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentChangesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: AssignmentChangesRequest, context: SessionContext): AssignmentChangesResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentChangesRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentChangesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iType: ChangesType [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentChangesResponse1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentChangesResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iChanges: List&lt;AssignmentInfo&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addChange(change: AssignmentInfo)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentHistory676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentHistory</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentHistoryBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentHistoryBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ dispNumber(value: int): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(value: double): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: AssignmentHistoryRequest, context: SessionContext): AssignmentHistoryResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentHistoryFilterBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentHistoryFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: AssignmentHistoryFilterRequest, context: SessionContext): AssignmentHistoryFilterResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentHistoryFilterRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentHistoryFilterRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentHistoryFilterResponse926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentHistoryFilterResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentHistoryRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentHistoryRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: FilterInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iBuilding: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDatePattern: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDayOfWeek: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iEndTime: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFirstDate: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLastDate: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLocation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStartTime: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentInfo1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConflicts: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIndex: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructor: InstructorInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: TeachingRequestInfo [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addConflict(conflict: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflicts(separator: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentInfoDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentInfoDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AssignmentPreferenceInfo1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AssignmentPreferenceInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBestNormalizedTimePreference: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBestRoomPreference: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBtbInstructorPreference: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePatternPref: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeptBalancPenalty: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroupConstraintPref: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHasInitialSameRoom: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHasInitialSameTime: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInitialAssignment: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIsInitial: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxDeptBalancPenalty: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxSpreadPenalty: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinRoomSize: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNormalizedTimePreference: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrCommitedStudentConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrDistanceStudentConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrHardStudentConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrPlacementsNoConf: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrRoomLocations: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrSameRoomPlacementsNoConf: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrSameTimePlacementsNoConf: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrStudentConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrTimeLocations: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPerturbationPenalty: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomPreference: Map&lt;Long, Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSpreadPenalty: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentGroupComment: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentGroupPercent: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimePreference: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTooBigRoomPreference: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUselessHalfHours: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ combineRoomPreference(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomPreference(roomId: Long): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ sumRoomPreference(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AtomTerm2060480431[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AtomTerm</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAttr: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBody: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ hasAttribute(attribute: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(m: TermMatcher): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(m: AmbigousTermMatcher): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameAttribute(t: AtomTerm): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttachmentType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttachmentType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(a: AttachmentType): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByReference(hibSession: Session, reference: String): AttachmentType</TD></TR>
<TR><TD ALIGN="LEFT" >+ listTypes(flag: int): List&lt;AttachmentType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ listTypes(flags: VisibilityFlag...): List&lt;AttachmentType&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttachmentTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttachmentTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttachmentTypeInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttachmentTypeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iImage: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTooltip: boolean [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttachmentTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttachmentTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: AttachmentType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># getVisibility(record: Record): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: AttachmentType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttributeInterface1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttributeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanAssign: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeType: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanDelete: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEdit: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: DepartmentInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: TreeSet&lt;InstructorInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParentName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: AttributeTypeInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addInstructor(instructor: InstructorInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canAssign(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canChangeType(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canDelete(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canEdit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(a: AttributeInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructor(id: Long): InstructorInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasInstructor(id: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AttributeTypeInterface1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AttributeTypeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConjunctive: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequired: boolean [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AvgPrefMix380494733[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AvgPrefMix</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCnt: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPref: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPref(prologPref: String, count: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BackTracker779606258[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BackTracker</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doBack(request: HttpServletRequest, response: HttpServletResponse): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ encodeURL(url: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBackButton(request: HttpServletRequest, nrBackSteps: int, name: String, title: String, accessKey: String, style: String, clazz: String, backType: String, backId: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBackList(session: HttpSession): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBackTree(request: HttpServletRequest): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGwtBack(request: HttpServletRequest, nrBackSteps: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasBack(request: HttpServletRequest, nrBackSteps: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ markForBack(request: HttpServletRequest, uri: String, title: String, back: boolean, clear: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ markForBack(context: SessionContext, uri: String, title: String, back: boolean, clear: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Backend1875904956[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Backend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   unitimeBusySessions: Tracker [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: IsSessionBusyRpcRequest, context: SessionContext): GwtRpcResponseBoolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAcademicArea595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAcademicArea</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicAreaAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPosMajors: Set&lt;PosMajor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPosMinors: Set&lt;PosMinor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToposMajors(posMajor: PosMajor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToposMinors(posMinor: PosMinor)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAcademicAreaDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAcademicAreaDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;AcademicArea&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAcademicAreaHistoryDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAcademicAreaHistoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAcademicClassificationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAcademicClassificationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;AcademicClassification&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAdvisor595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAdvisor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRole: Roles [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudents: Set&lt;Student&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTostudents(student: Student)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAdvisorClassPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAdvisorClassPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClazz(hibSession: Session, clazzId: Long): List&lt;AdvisorClassPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAdvisorCourseRequestDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAdvisorCourseRequestDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseOffering(hibSession: Session, courseOfferingId: Long): List&lt;AdvisorCourseRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByFreeTime(hibSession: Session, freeTimeId: Long): List&lt;AdvisorCourseRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;AdvisorCourseRequest&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAdvisorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAdvisorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByRole(hibSession: Session, roleId: Long): List&lt;Advisor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Advisor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAdvisorInstrMthPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAdvisorInstrMthPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByInstructionalMethod(hibSession: Session, instructionalMethodId: Long): List&lt;AdvisorInstrMthPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAdvisorSectioningPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAdvisorSectioningPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseRequest(hibSession: Session, courseRequestId: Long): List&lt;AdvisorSectioningPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseApplicationConfig595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseApplicationConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iKey: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseApplicationConfigDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseApplicationConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseArrangeCreditUnitConfig595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseArrangeCreditUnitConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseArrangeCreditUnitConfigDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseArrangeCreditUnitConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAssignmentDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAssignmentDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClazz(hibSession: Session, clazzId: Long): List&lt;Assignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDatePattern(hibSession: Session, datePatternId: Long): List&lt;Assignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySolution(hibSession: Session, solutionId: Long): List&lt;Assignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByTimePattern(hibSession: Session, timePatternId: Long): List&lt;Assignment&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAssignmentInfoDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAssignmentInfoDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAssignment(hibSession: Session, assignmentId: Long): List&lt;AssignmentInfo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAttachmentType595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAttachmentType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iVisibility: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseAttachmentTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseAttachmentTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseBuilding595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseBuilding</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoordinateX: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoordinateY: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseBuildingAbbreviationHistoryDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseBuildingAbbreviationHistoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseBuildingDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseBuildingDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Building&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseBuildingPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseBuildingPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByBuilding(hibSession: Session, buildingId: Long): List&lt;BuildingPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCampusDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCampusDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Campus&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseChangeLog595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseChangeLog</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDepartment: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDetail: byte[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iManager: TimetableManager [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iObjectTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iObjectType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iObjectUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperationString: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSourceString: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectArea: SubjectArea [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseChangeLogDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseChangeLogDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;ChangeLog&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByManager(hibSession: Session, managerId: Long): List&lt;ChangeLog&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;ChangeLog&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySubjectArea(hibSession: Session, subjectAreaId: Long): List&lt;ChangeLog&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseClassDurationTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseClassDurationTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseClassEventDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseClassEventDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClazz(hibSession: Session, clazzId: Long): List&lt;ClassEvent&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseClassInstructorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseClassInstructorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClassInstructing(hibSession: Session, classInstructingId: Long): List&lt;ClassInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByInstructor(hibSession: Session, instructorId: Long): List&lt;ClassInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByResponsibility(hibSession: Session, responsibilityId: Long): List&lt;ClassInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByTeachingRequest(hibSession: Session, teachingRequestId: Long): List&lt;ClassInstructor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseClassWaitListDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseClassWaitListDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClazz(hibSession: Session, clazzId: Long): List&lt;ClassWaitList&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCourseRequest(hibSession: Session, courseRequestId: Long): List&lt;ClassWaitList&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;ClassWaitList&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseClass_595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseClass_</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignments: Set&lt;Assignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCancelled: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iChildClasses: Set&lt;Class_&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassInstructors: Set&lt;ClassInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassSuffix: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCommittedAssignment: Assignment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iControllingDept: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePattern: DatePattern [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisplayInstructor: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnabledForStudentScheduling: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExpectedCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFundingDept: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLmsInfo: LearningManagementSystemInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iManagingDept: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxExpectedCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNbrRooms: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParentClass: Class_ [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomRatio: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSchedulePrintNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSchedulingSubpart: SchedulingSubpart [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectionNumberCache: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotLimitDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentEnrollments: Set&lt;StudentClassEnrollment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTeachingRequests: Set&lt;TeachingClassRequest&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueIdRolledForwardFrom: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToassignments(assignment: Assignment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTochildClasses(class_: Class_)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToclassInstructors(classInstructor: ClassInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTostudentEnrollments(studentClassEnrollment: StudentClassEnrollment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToteachingRequests(teachingClassRequest: TeachingClassRequest)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseClass_DAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseClass_DAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDatePattern(hibSession: Session, datePatternId: Long): List&lt;Class_&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByFundingDept(hibSession: Session, fundingDeptId: Long): List&lt;Class_&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByLmsInfo(hibSession: Session, lmsInfoId: Long): List&lt;Class_&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByManagingDept(hibSession: Session, managingDeptId: Long): List&lt;Class_&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByParentClass(hibSession: Session, parentClassId: Long): List&lt;Class_&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySchedulingSubpart(hibSession: Session, schedulingSubpartId: Long): List&lt;Class_&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseClusterDiscoveryDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseClusterDiscoveryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseConstraintInfoDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseConstraintInfoDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseContactCategoryDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseContactCategoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseCatalog595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseCatalog</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApprovalType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditFormat: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditUnitType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFixedMinimumCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFractionalCreditAllowed: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaximumCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPermanentId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreviousCourseNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreviousSubject: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubject: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubparts: Set&lt;CourseSubpartCredit&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTosubparts(courseSubpartCredit: CourseSubpartCredit)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseCatalogDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseCatalogDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;CourseCatalog&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseCreditFormatDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseCreditFormatDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseCreditTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseCreditTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseCreditUnitConfig595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseCreditUnitConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseCreditFormat: CourseCreditFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseOwner: CourseOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditType: CourseCreditType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditUnitType: CourseCreditUnitType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefinesCreditAtCourseLevel: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubpartOwner: SchedulingSubpart [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseCreditUnitConfigDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseCreditUnitConfigDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseCreditFormat(hibSession: Session, courseCreditFormatId: Long): List&lt;CourseCreditUnitConfig&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCourseOwner(hibSession: Session, courseOwnerId: Long): List&lt;CourseCreditUnitConfig&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCreditType(hibSession: Session, creditTypeId: Long): List&lt;CourseCreditUnitConfig&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCreditUnitType(hibSession: Session, creditUnitTypeId: Long): List&lt;CourseCreditUnitConfig&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySubpartOwner(hibSession: Session, subpartOwnerId: Long): List&lt;CourseCreditUnitConfig&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseCreditUnitTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseCreditUnitTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseDemandDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseDemandDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByFreeTime(hibSession: Session, freeTimeId: Long): List&lt;CourseDemand&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;CourseDemand&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByWaitListSwapWithCourseOffering(hibSession: Session, waitListSwapWithCourseOfferingId: Long): List&lt;CourseDemand&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseEvent595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRelatedCourses: Set&lt;RelatedCourseInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReqAttendance: Boolean [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTorelatedCourses(relatedCourseInfo: RelatedCourseInfo)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseEventDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseHistoryDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseHistoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseOffering595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseOffering</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAlternativeOffering: CourseOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConsentType: OfferingConsentType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNbr: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseType: CourseType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditConfigs: Set&lt;CourseCreditUnitConfig&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDemand: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDemandOffering: CourseOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDemandOfferingType: DemandOfferingType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisabledOverrides: Set&lt;OverrideType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFundingDept: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionalOffering: InstructionalOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIsControl: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNbrExpectedStudents: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPermId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProjectedDemand: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReservation: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iScheduleBookNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotProjectedDemand: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotProjectedDemandDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectArea: SubjectArea [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreaAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueIdRolledForwardFrom: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTocreditConfigs(courseCreditUnitConfig: CourseCreditUnitConfig)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTodisabledOverrides(overrideType: OverrideType)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseOfferingDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseOfferingDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAlternativeOffering(hibSession: Session, alternativeOfferingId: Long): List&lt;CourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByConsentType(hibSession: Session, consentTypeId: Long): List&lt;CourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCourseType(hibSession: Session, courseTypeId: Long): List&lt;CourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDemandOffering(hibSession: Session, demandOfferingId: Long): List&lt;CourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDemandOfferingType(hibSession: Session, demandOfferingTypeId: Long): List&lt;CourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByFundingDept(hibSession: Session, fundingDeptId: Long): List&lt;CourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByInstructionalOffering(hibSession: Session, instructionalOfferingId: Long): List&lt;CourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySubjectArea(hibSession: Session, subjectAreaId: Long): List&lt;CourseOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseOfferingImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseOfferingImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   assignmentHelper: MakeAssignmentsForClassEvents [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   canShareRoomType: DistributionType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   changeCount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   courseNumbersMustBeUnique: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   defaultMaxNbrRooms: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   examPeriodChanged: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   existingClasses: HashSet&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   existingCourseOfferings: HashSet&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   existingInstructionalOfferings: HashSet&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   includeExams: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   incremental: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   itypes: HashMap&lt;String, ItypeDesc&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   itypesBySisRef: HashMap&lt;String, ItypeDesc&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   meetsWithType: DistributionType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   requiredPrefLevel: PreferenceLevel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   rootElementName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   subjectAreas: HashMap&lt;String, SubjectArea&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   timePatterns: HashMap&lt;String, TimePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   useCanShareRoomElement: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   useMeetsWithElement: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- addDistributionPref(classIds: Vector&lt;String&gt;, clazz: Class_, distributionType: DistributionType)</TD></TR>
<TR><TD ALIGN="LEFT" >- addUpdateClassEvent(c: Class_, meetingTime: TimeObject, rooms: Vector&lt;Room&gt;, locations: Vector&lt;NonUniversityLocation&gt;, tp: TimePattern, dp: DatePattern): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- addUpdateClassEvent(c: Class_, meetings: Vector&lt;Meeting&gt;, tp: TimePattern, dp: DatePattern): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- createPatternString(startDates: Vector&lt;Calendar&gt;, endDates: Vector&lt;Calendar&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteClass(c: Class_)</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteClassInstructor(ci: ClassInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteCourseOffering(co: CourseOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteDistributionPref(dp: DistributionPref)</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteInstrOffrConfig(ioc: InstrOfferingConfig)</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteInstructionalOffering(io: InstructionalOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteSchedulingSubpart(ss: SchedulingSubpart)</TD></TR>
<TR><TD ALIGN="LEFT" ># deleteUnmatchedClasses()</TD></TR>
<TR><TD ALIGN="LEFT" ># deleteUnmatchedCourseOfferings()</TD></TR>
<TR><TD ALIGN="LEFT" ># deleteUnmatchedInstructionalOfferings()</TD></TR>
<TR><TD ALIGN="LEFT" >- doAddUpdate(element: Element, io: InstructionalOffering, action: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementCanShareRoom(element: Element, c: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementClass(element: Element, ioc: InstrOfferingConfig, parentClass: Class_, allExistingClasses: HashSet&lt;Class_&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementCourse(element: Element, io: InstructionalOffering, action: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementCourseCredit(element: Element, co: CourseOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementDates(element: Element): HashMap&lt;String, Vector&lt;Calendar&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- elementExam(element: Element, io: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementInstrOffrConfig(element: Element, io: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementInstructor(element: Element, c: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementInstructor(element: Element, exam: Exam, offering: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementLocation(element: Element, c: Class_): Vector&lt;NonUniversityLocation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- elementMeetings(element: Element, c: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementMeetsWith(element: Element, c: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># elementOffering(element: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementRoom(element: Element, c: Class_): Vector&lt;Room&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- elementSubpart(element: Element, ioc: InstrOfferingConfig, parentSubpart: SchedulingSubpart, allExistingSubparts: HashSet&lt;SchedulingSubpart&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementSubpartCredit(element: Element, ss: SchedulingSubpart): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- elementTime(element: Element): TimeObject</TD></TR>
<TR><TD ALIGN="LEFT" >- findByDeptCode(deptCode: String, sessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" >- findClassForExternalUniqueId(externalUniqueId: String): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >- findClassForUniqueId(uniqueId: Long): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >- findCourseOffrForUniqueId(uniqueId: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- findCrsOffrForExternalId(externalId: String, sessionId: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- findCrsOffrForSubjCrs(subjectAbbv: String, crsNbr: String, sessionId: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- findCrsOffrForSubjCrsTitle(subjectAbbv: String, crsNbr: String, title: String, sessionId: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- findDatePattern(startDates: Vector&lt;Calendar&gt;, endDates: Vector&lt;Calendar&gt;, c: Class_): DatePattern</TD></TR>
<TR><TD ALIGN="LEFT" >- findDepartmentalInstructorWithExternalUniqueId(externalId: String, department: Department): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >- findExistingCourseOffering(courseOffering: CourseOffering, sessionId: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- findInstrOffrForExternalId(externalId: String, sessionId: Long): InstructionalOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- findInstrOffrForUniqueId(uniqueId: Long): InstructionalOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- findItypeForString(itypeRef: String): ItypeDesc</TD></TR>
<TR><TD ALIGN="LEFT" >- findNonUniversityLocation(id: String, name: String, dept: Department): NonUniversityLocation</TD></TR>
<TR><TD ALIGN="LEFT" >- findRoom(id: String, building: String, roomNbr: String): Room</TD></TR>
<TR><TD ALIGN="LEFT" >- findStaffMember(id: String, department: Department): Staff</TD></TR>
<TR><TD ALIGN="LEFT" >- findTimePatternForMeetingInfo(clazz: Class_, timeObject: TimeObject): TimePattern</TD></TR>
<TR><TD ALIGN="LEFT" >- getCalendarDateString(calendar: Calendar): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getCalendarForDate(date: String): Calendar</TD></TR>
<TR><TD ALIGN="LEFT" ># getCourses(element: Element): ArrayList&lt;ImportCourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- getDateString(date: Date): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getExamOwners(examElement: Element, offering: InstructionalOffering): List&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- getMeetings(startDate: Date, stopDate: Date, pattern: String, meetingTime: TimeObject, rooms: Vector&lt;Room&gt;, locations: Vector&lt;NonUniversityLocation&gt;): Vector&lt;Meeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- getMeetings(dp: DatePattern, meetingTime: TimeObject, rooms: Vector&lt;Room&gt;, locations: Vector&lt;NonUniversityLocation&gt;): Vector&lt;Meeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># handleCustomClassChildElements(classElement: Element, ioc: InstrOfferingConfig, clazz: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># handleCustomCourseChildElements(courseOffering: CourseOffering, courseOfferingElement: Element): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># handleCustomInstrOffrConfigChildElements(instrOfferingConfig: InstrOfferingConfig, instrOfferingConfigElement: Element): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- handleDistributionPrefElement(element: Element, c: Class_, elementName: String, distributionType: DistributionType): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># initializeAssignmentHelper()</TD></TR>
<TR><TD ALIGN="LEFT" ># initializeCanShareRoom(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># initializeDateTimeFormats(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># initializeLoad(rootElement: Element, rootElementName: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># initializeMeetsWith(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># initializeSessionData(rootElement: Element, rootElementName: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># initializeTrimLeadingZeros()</TD></TR>
<TR><TD ALIGN="LEFT" >- isMatchingDistPref(dp: DistributionPref, classExternalIds: Vector&lt;String&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- isSameCourseOffering(originalCourseOffering: CourseOffering, newCourseOffering: CourseOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- isSameCreditConfig(originalCourseCreditUnitConfig: CourseCreditUnitConfig, courseCreditUnitConfig: CourseCreditUnitConfig): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- isSameMeeting(originalMeeting: Meeting, newMeeting: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- loadCanShareRoomDistributionType()</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingClasses(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingCourseOfferings(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingInstructionalOfferings(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadItypes()</TD></TR>
<TR><TD ALIGN="LEFT" >- loadMeetsWithDistributionType()</TD></TR>
<TR><TD ALIGN="LEFT" ># loadOfferings(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadRequiredPrefLevel()</TD></TR>
<TR><TD ALIGN="LEFT" ># loadSetupData()</TD></TR>
<TR><TD ALIGN="LEFT" >- loadSubjectAreas(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadTimePatterns(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># logXmlFileCreateInformation(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupClass(offering: InstructionalOffering, id: String, type: String, suffix: String): Class_</TD></TR>
<TR><TD ALIGN="LEFT" ># postLoadAction()</TD></TR>
<TR><TD ALIGN="LEFT" ># preLoadAction()</TD></TR>
<TR><TD ALIGN="LEFT" >+ str2Slot(timeString: String, printOffset: Integer): Integer</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseRequestDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseRequestDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseDemand(hibSession: Session, courseDemandId: Long): List&lt;CourseRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCourseOffering(hibSession: Session, courseOfferingId: Long): List&lt;CourseRequest&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseRequestOptionDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseRequestOptionDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseRequest(hibSession: Session, courseRequestId: Long): List&lt;CourseRequestOption&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseReservationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseReservationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourse(hibSession: Session, courseId: Long): List&lt;CourseReservation&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseSubpartCreditDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseSubpartCreditDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseCatalog(hibSession: Session, courseCatalogId: Long): List&lt;CourseSubpartCredit&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseType595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCourseTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCourseTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCurriculum595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCurriculum</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAcademicArea: AcademicArea [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassifications: Set&lt;CurriculumClassification&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMajors: Set&lt;PosMajor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMultipleMajors: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToclassifications(curriculumClassification: CurriculumClassification)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTomajors(posMajor: PosMajor)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCurriculumClassificationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCurriculumClassificationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAcademicClassification(hibSession: Session, academicClassificationId: Long): List&lt;CurriculumClassification&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCurriculum(hibSession: Session, curriculumId: Long): List&lt;CurriculumClassification&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCurriculumCourseDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCurriculumCourseDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClassification(hibSession: Session, classificationId: Long): List&lt;CurriculumCourse&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCourse(hibSession: Session, courseId: Long): List&lt;CurriculumCourse&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCurriculumCourseGroupDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCurriculumCourseGroupDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCurriculum(hibSession: Session, curriculumId: Long): List&lt;CurriculumCourseGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCurriculumDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCurriculumDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAcademicArea(hibSession: Session, academicAreaId: Long): List&lt;Curriculum&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;Curriculum&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCurriculumOverrideReservationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCurriculumOverrideReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCurriculumProjectionRuleDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCurriculumProjectionRuleDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAcademicArea(hibSession: Session, academicAreaId: Long): List&lt;CurriculumProjectionRule&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByAcademicClassification(hibSession: Session, academicClassificationId: Long): List&lt;CurriculumProjectionRule&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByMajor(hibSession: Session, majorId: Long): List&lt;CurriculumProjectionRule&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseCurriculumReservationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseCurriculumReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDatePatternDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDatePatternDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;DatePattern&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDatePatternPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDatePatternPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDatePattern(hibSession: Session, datePatternId: Long): List&lt;DatePatternPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDegreeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDegreeDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Degree&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDemandOfferingType595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDemandOfferingType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDemandOfferingTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDemandOfferingTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDepartment595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDepartment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowEvents: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowReqDistribution: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowReqRoom: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowReqTime: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowStudentScheduling: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePatterns: Set&lt;DatePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeptCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistributionPrefPriority: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalFundingDept: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalManager: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalMgrAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalMgrLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalStatusTypes: Set&lt;ExternalDepartmentStatusType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInheritInstructorPreferences: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: Set&lt;DepartmentalInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomDepts: Set&lt;RoomDept&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomSharingColor: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolverGroup: SolverGroup [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatusType: DepartmentStatusType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreas: Set&lt;SubjectArea&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimePatterns: Set&lt;TimePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimetableManagers: Set&lt;TimetableManager&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTodatePatterns(datePattern: DatePattern)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToexternalStatusTypes(externalDepartmentStatusType: ExternalDepartmentStatusType)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToinstructors(departmentalInstructor: DepartmentalInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToroomDepts(roomDept: RoomDept)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTosubjectAreas(subjectArea: SubjectArea)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTotimePatterns(timePattern: TimePattern)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTotimetableManagers(timetableManager: TimetableManager)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDepartmentDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDepartmentDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Department&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySolverGroup(hibSession: Session, solverGroupId: Long): List&lt;Department&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByStatusType(hibSession: Session, statusTypeId: Long): List&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDepartmentRoomFeatureDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDepartmentRoomFeatureDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;DepartmentRoomFeature&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDepartmentStatusType595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDepartmentStatusType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApply: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOrd: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDepartmentStatusTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDepartmentStatusTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDepartmentalInstructor595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDepartmentalInstructor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignments: Set&lt;Assignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAttributes: Set&lt;InstructorAttribute&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCareerAcct: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClasses: Set&lt;ClassInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExams: Set&lt;Exam&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIgnoreToFar: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxLoad: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingCoordinators: Set&lt;OfferingCoordinator&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPositionType: PositionType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRole: Roles [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTeachingPreference: PreferenceLevel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUnavailableDays: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUnavailableOffset: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToassignments(assignment: Assignment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToattributes(instructorAttribute: InstructorAttribute)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToclasses(classInstructor: ClassInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToexams(exam: Exam)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToofferingCoordinators(offeringCoordinator: OfferingCoordinator)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDepartmentalInstructorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDepartmentalInstructorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;DepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPositionType(hibSession: Session, positionTypeId: Long): List&lt;DepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByRole(hibSession: Session, roleId: Long): List&lt;DepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByTeachingPreference(hibSession: Session, teachingPreferenceId: Long): List&lt;DepartmentalInstructor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDistributionObjectDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDistributionObjectDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDistributionPref(hibSession: Session, distributionPrefId: Long): List&lt;DistributionObject&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPrefGroup(hibSession: Session, prefGroupId: Long): List&lt;DistributionObject&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDistributionPref595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDistributionPref</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDistributionObjects: Set&lt;DistributionObject&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistributionType: DistributionType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGrouping: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueIdRolledForwardFrom: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTodistributionObjects(distributionObject: DistributionObject)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDistributionPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDistributionPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDistributionType(hibSession: Session, distributionTypeId: Long): List&lt;DistributionPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDistributionType595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDistributionType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowedPref: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: Set&lt;Department&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDescr: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamPref: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorPref: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequirementId: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSequencingRequired: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iVisible: Boolean [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTodepartments(department: Department)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseDistributionTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseDistributionTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseEvent595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAdditionalContacts: Set&lt;EventContact&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartmentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamStatus: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExpirationDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainContact: EventContact [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetings: Set&lt;Meeting&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: Set&lt;EventNote&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestedServices: Set&lt;EventServiceProvider&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSponsoringOrganization: SponsoringOrganization [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToadditionalContacts(eventContact: EventContact)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTomeetings(meeting: Meeting)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTonotes(eventNote: EventNote)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTorequestedServices(eventServiceProvider: EventServiceProvider)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseEventContact595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseEventContact</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmailAddress: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPhone: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseEventContactDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseEventContactDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseEventDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseEventDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByMainContact(hibSession: Session, mainContactId: Long): List&lt;Event&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySponsoringOrganization(hibSession: Session, sponsoringOrganizationId: Long): List&lt;Event&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseEventDateMappingDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseEventDateMappingDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;EventDateMapping&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseEventNoteDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseEventNoteDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByEvent(hibSession: Session, eventId: Long): List&lt;EventNote&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseEventServiceProviderDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseEventServiceProviderDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;EventServiceProvider&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;EventServiceProvider&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExactTimeMinsDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExactTimeMinsDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExam595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExam</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignedPeriod: ExamPeriod [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignedPreference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignedRooms: Set&lt;Location&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAvgPeriod: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConflicts: Set&lt;ExamConflict&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamSize: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamType: ExamType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: Set&lt;DepartmentalInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLength: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxNbrRooms: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwners: Set&lt;ExamOwner&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPrintOffset: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSeatingType: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatusType: DepartmentStatusType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueIdRolledForwardFrom: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToassignedRooms(location: Location)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToconflicts(examConflict: ExamConflict)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToinstructors(departmentalInstructor: DepartmentalInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToowners(examOwner: ExamOwner)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamConflictDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamConflictDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAssignedPeriod(hibSession: Session, assignedPeriodId: Long): List&lt;Exam&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExamType(hibSession: Session, examTypeId: Long): List&lt;Exam&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Exam&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamEventDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamEventDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByExam(hibSession: Session, examId: Long): List&lt;ExamEvent&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamLocationPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamLocationPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByExamPeriod(hibSession: Session, examPeriodId: Long): List&lt;ExamLocationPref&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByLocation(hibSession: Session, locationId: Long): List&lt;ExamLocationPref&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPrefLevel(hibSession: Session, prefLevelId: Long): List&lt;ExamLocationPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamOwner595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamOwner</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourse: CourseOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExam: Exam [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerType: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamOwnerDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamOwnerDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourse(hibSession: Session, courseId: Long): List&lt;ExamOwner&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExam(hibSession: Session, examId: Long): List&lt;ExamOwner&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamPeriod595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamPeriod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDateOffset: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventStartOffset: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventStopOffset: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamType: ExamType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLength: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPrefLevel: PreferenceLevel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartSlot: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamPeriodDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamPeriodDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByExamType(hibSession: Session, examTypeId: Long): List&lt;ExamPeriod&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPrefLevel(hibSession: Session, prefLevelId: Long): List&lt;ExamPeriod&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;ExamPeriod&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamPeriodPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamPeriodPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByExamPeriod(hibSession: Session, examPeriodId: Long): List&lt;ExamPeriodPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamStatus595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamStatus</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iManagers: Set&lt;TimetableManager&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: DepartmentStatusType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: ExamType [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTomanagers(timetableManager: TimetableManager)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamStatusDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamStatusDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByStatus(hibSession: Session, statusId: Long): List&lt;ExamStatus&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamType595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iHighlightInEvents: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExamTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExamTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveXml(fileName: String, session: Session, parameters: Properties)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(session: Session, parameters: Properties): Document</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExternalBuilding595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExternalBuilding</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoordinateX: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoordinateY: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisplayName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: Set&lt;ExternalRoom&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTorooms(externalRoom: ExternalRoom)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExternalBuildingDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExternalBuildingDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;ExternalBuilding&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExternalDepartmentStatusTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExternalDepartmentStatusTypeDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByStatusType(hibSession: Session, statusTypeId: Long): List&lt;ExternalDepartmentStatusType&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExternalRoom595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExternalRoom</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iArea: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBuilding: ExternalBuilding [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassification: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoordinateX: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoordinateY: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisplayName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIsInstructional: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomDepartments: Set&lt;ExternalRoomDepartment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomFeatures: Set&lt;ExternalRoomFeature&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomType: RoomType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToroomDepartments(externalRoomDepartment: ExternalRoomDepartment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToroomFeatures(externalRoomFeature: ExternalRoomFeature)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExternalRoomDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExternalRoomDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByBuilding(hibSession: Session, buildingId: Long): List&lt;ExternalRoom&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByRoomType(hibSession: Session, roomTypeId: Long): List&lt;ExternalRoom&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExternalRoomDepartment595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExternalRoomDepartment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignmentType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartmentCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPercent: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoom: ExternalRoom [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExternalRoomDepartmentDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExternalRoomDepartmentDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByRoom(hibSession: Session, roomId: Long): List&lt;ExternalRoomDepartment&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseExternalRoomFeatureDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseExternalRoomFeatureDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByRoom(hibSession: Session, roomId: Long): List&lt;ExternalRoomFeature&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseFinalExamEventDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseFinalExamEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseFixedCreditUnitConfig595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseFixedCreditUnitConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFixedUnits: Float [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseFixedCreditUnitConfigDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseFixedCreditUnitConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseFreeTimeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseFreeTimeDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;FreeTime&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseGlobalRoomFeature595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseGlobalRoomFeature</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSisReference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSisValue: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseGlobalRoomFeatureDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseGlobalRoomFeatureDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;GlobalRoomFeature&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseGroupOverrideReservationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseGroupOverrideReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseHashedQueryDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseHashedQueryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseHistoryDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseHistoryDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;History&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iManager: TimetableManager [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># findDefaultManager(): TimetableManager</TD></TR>
<TR><TD ALIGN="LEFT" ># getOptionalBooleanAttribute(element: Element, attributeName: String): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># getOptionalBooleanAttribute(element: Element, attributeName: String, defaultValue: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># getOptionalIntegerAttribute(element: Element, attributeName: String): Integer</TD></TR>
<TR><TD ALIGN="LEFT" ># getOptionalLongAttribute(element: Element, attributeName: String): Long</TD></TR>
<TR><TD ALIGN="LEFT" ># getOptionalStringAttribute(element: Element, attributeName: String): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getRequiredBooleanAttribute(element: Element, attributeName: String, elementName: String): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># getRequiredIntegerAttribute(element: Element, attributeName: String, elementName: String): Integer</TD></TR>
<TR><TD ALIGN="LEFT" ># getRequiredLongAttribute(element: Element, attributeName: String, elementName: String): Long</TD></TR>
<TR><TD ALIGN="LEFT" ># getRequiredStringAttribute(element: Element, attributeName: String, elementName: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(fileName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(inputStream: InputStream)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># trim(text: String, name: String, maxLength: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseIndividualOverrideReservationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseIndividualOverrideReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseIndividualReservationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseIndividualReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstrOfferingConfigDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstrOfferingConfigDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClassDurationType(hibSession: Session, classDurationTypeId: Long): List&lt;InstrOfferingConfig&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByInstructionalMethod(hibSession: Session, instructionalMethodId: Long): List&lt;InstrOfferingConfig&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByInstructionalOffering(hibSession: Session, instructionalOfferingId: Long): List&lt;InstrOfferingConfig&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructionalMethodDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructionalMethodDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructionalOffering595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructionalOffering</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iByReservationOnly: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseOfferings: Set&lt;CourseOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDemand: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstrOfferingConfigs: Set&lt;InstrOfferingConfig&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstrOfferingPermId: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastWeekToChange: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastWeekToDrop: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastWeekToEnroll: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotOffered: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingCoordinators: Set&lt;OfferingCoordinator&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReservations: Set&lt;Reservation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotLimitDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTeachingRequests: Set&lt;TeachingRequest&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueIdRolledForwardFrom: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitlistMode: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTocourseOfferings(courseOffering: CourseOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToinstrOfferingConfigs(instrOfferingConfig: InstrOfferingConfig)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToofferingCoordinators(offeringCoordinator: OfferingCoordinator)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToreservations(reservation: Reservation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToteachingRequests(teachingRequest: TeachingRequest)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructionalOfferingDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructionalOfferingDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorAttribute595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorAttribute</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iChildAttributes: Set&lt;InstructorAttribute&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: Set&lt;DepartmentalInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParentAttribute: InstructorAttribute [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: InstructorAttributeType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTochildAttributes(instructorAttribute: InstructorAttribute)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToinstructors(departmentalInstructor: DepartmentalInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorAttributeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorAttributeDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;InstructorAttribute&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByParentAttribute(hibSession: Session, parentAttributeId: Long): List&lt;InstructorAttribute&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;InstructorAttribute&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByType(hibSession: Session, typeId: Long): List&lt;InstructorAttribute&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorAttributePrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorAttributePrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAttribute(hibSession: Session, attributeId: Long): List&lt;InstructorAttributePref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorAttributeTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorAttributeTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorCoursePrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorCoursePrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourse(hibSession: Session, courseId: Long): List&lt;InstructorCoursePref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorCourseRequirement595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorCourseRequirement</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourse: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseOffering: CourseOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorSurvey: InstructorSurvey [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: Set&lt;InstructorCourseRequirementNote&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTonotes(instructorCourseRequirementNote: InstructorCourseRequirementNote)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorCourseRequirementDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorCourseRequirementDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseOffering(hibSession: Session, courseOfferingId: Long): List&lt;InstructorCourseRequirement&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByInstructorSurvey(hibSession: Session, instructorSurveyId: Long): List&lt;InstructorCourseRequirement&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorCourseRequirementNoteDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorCourseRequirementNoteDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorCourseRequirementTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorCourseRequirementTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByInstructor(hibSession: Session, instructorId: Long): List&lt;InstructorPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorSurvey595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorSurvey</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApplied: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAppliedDeptCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iChanged: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iChangedBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseRequirements: Set&lt;InstructorCourseRequirement&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubmitted: Date [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTocourseRequirements(instructorCourseRequirement: InstructorCourseRequirement)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseInstructorSurveyDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseInstructorSurveyDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;InstructorSurvey&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseItypeDesc595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseItypeDesc</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBasic: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDesc: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iItype: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOrganized: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParent: ItypeDesc [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSis_ref: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseItypeDescDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseItypeDescDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByParent(hibSession: Session, parentId: Integer): List&lt;ItypeDesc&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseJointEnrollmentDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseJointEnrollmentDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClass1(hibSession: Session, class1Id: Long): List&lt;JointEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByClass2(hibSession: Session, class2Id: Long): List&lt;JointEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySolution(hibSession: Session, solutionId: Long): List&lt;JointEnrollment&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseLastLikeCourseDemandDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseLastLikeCourseDemandDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;LastLikeCourseDemand&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySubjectArea(hibSession: Session, subjectAreaId: Long): List&lt;LastLikeCourseDemand&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseLearningCommunityReservationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseLearningCommunityReservationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourse(hibSession: Session, courseId: Long): List&lt;LearningCommunityReservation&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseLearningManagementSystemInfoDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseLearningManagementSystemInfoDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;LearningManagementSystemInfo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseLocation595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseLocation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iArea: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignments: Set&lt;Assignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBreakTime: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoordinateX: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoordinateY: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisplayName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventAvailability: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventDepartment: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventStatus: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamPreferences: Set&lt;ExamLocationPref&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamTypes: Set&lt;ExamType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFeatures: Set&lt;RoomFeature&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIgnoreRoomCheck: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIgnoreTooFar: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iManagerIds: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPattern: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPermanentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomDepts: Set&lt;RoomDept&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomGroups: Set&lt;RoomGroup&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShareNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToassignments(assignment: Assignment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToexamPreferences(examLocationPref: ExamLocationPref)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToexamTypes(examType: ExamType)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTofeatures(roomFeature: RoomFeature)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToroomDepts(roomDept: RoomDept)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToroomGroups(roomGroup: RoomGroup)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseLocationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseLocationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByEventDepartment(hibSession: Session, eventDepartmentId: Long): List&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseLocationPictureDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseLocationPictureDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByType(hibSession: Session, typeId: Long): List&lt;LocationPicture&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseManagerRoleDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseManagerRoleDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByRole(hibSession: Session, roleId: Long): List&lt;ManagerRole&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByTimetableManager(hibSession: Session, timetableManagerId: Long): List&lt;ManagerRole&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseManagerSettingsDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseManagerSettingsDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByKey(hibSession: Session, keyId: Long): List&lt;ManagerSettings&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByManager(hibSession: Session, managerId: Long): List&lt;ManagerSettings&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseMapTileCacheDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseMapTileCacheDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseMeetingDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseMeetingDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByEvent(hibSession: Session, eventId: Long): List&lt;Meeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseMessageLogDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseMessageLogDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseMidtermExamEventDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseMidtermExamEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseNonUniversityLocationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseNonUniversityLocationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByRoomType(hibSession: Session, roomTypeId: Long): List&lt;NonUniversityLocation&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseNonUniversityLocationPicture595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseNonUniversityLocationPicture</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLocation: NonUniversityLocation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseNonUniversityLocationPictureDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseNonUniversityLocationPictureDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByLocation(hibSession: Session, locationId: Long): List&lt;NonUniversityLocationPicture&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseOfferingConsentType595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseOfferingConsentType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseOfferingConsentTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseOfferingConsentTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseOfferingCoordinatorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseOfferingCoordinatorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByInstructor(hibSession: Session, instructorId: Long): List&lt;OfferingCoordinator&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByOffering(hibSession: Session, offeringId: Long): List&lt;OfferingCoordinator&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByResponsibility(hibSession: Session, responsibilityId: Long): List&lt;OfferingCoordinator&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByTeachingRequest(hibSession: Session, teachingRequestId: Long): List&lt;OfferingCoordinator&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseOnlineSectioningLogDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseOnlineSectioningLogDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;OnlineSectioningLog&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseOverrideReservationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseOverrideReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseOverrideType595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseOverrideType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseOverrideTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseOverrideTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePeriodicTaskDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePeriodicTaskDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByOwner(hibSession: Session, ownerId: Long): List&lt;PeriodicTask&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByScript(hibSession: Session, scriptId: Long): List&lt;PeriodicTask&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;PeriodicTask&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitClass595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitClass</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassSuffix: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClazz: Class_ [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iControllingDept: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePattern: DatePattern [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnabledForStudentScheduling: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFundingDept: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iManagingDept: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNbrRooms: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitChildClasses: Set&lt;PitClass&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitClassEvents: Set&lt;PitClassEvent&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitClassInstructors: Set&lt;PitClassInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitParentClass: PitClass [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitSchedulingSubpart: PitSchedulingSubpart [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectionNumber: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentEnrollments: Set&lt;PitStudentClassEnrollment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimePattern: TimePattern [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueIdRolledForwardFrom: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTopitChildClasses(pitClass: PitClass)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTopitClassEvents(pitClassEvent: PitClassEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTopitClassInstructors(pitClassInstructor: PitClassInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTostudentEnrollments(pitStudentClassEnrollment: PitStudentClassEnrollment)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitClassDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitClassDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClazz(hibSession: Session, clazzId: Long): List&lt;PitClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDatePattern(hibSession: Session, datePatternId: Long): List&lt;PitClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByFundingDept(hibSession: Session, fundingDeptId: Long): List&lt;PitClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByManagingDept(hibSession: Session, managingDeptId: Long): List&lt;PitClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitParentClass(hibSession: Session, pitParentClassId: Long): List&lt;PitClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitSchedulingSubpart(hibSession: Session, pitSchedulingSubpartId: Long): List&lt;PitClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByTimePattern(hibSession: Session, timePatternId: Long): List&lt;PitClass&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitClassEvent595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitClassEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEventName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitClass: PitClass [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitClassMeetings: Set&lt;PitClassMeeting&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTopitClassMeetings(pitClassMeeting: PitClassMeeting)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitClassEventDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitClassEventDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByPitClass(hibSession: Session, pitClassId: Long): List&lt;PitClassEvent&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitClassInstructorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitClassInstructorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByPitClassInstructing(hibSession: Session, pitClassInstructingId: Long): List&lt;PitClassInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitDepartmentalInstructor(hibSession: Session, pitDepartmentalInstructorId: Long): List&lt;PitClassInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByResponsibility(hibSession: Session, responsibilityId: Long): List&lt;PitClassInstructor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitClassMeeting595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitClassMeeting</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCalculatedMinPerMtg: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocationPermanentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetingDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitClassEvent: PitClassEvent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitClassMeetingUtilPeriods: Set&lt;PitClassMeetingUtilPeriod&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartOffset: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartPeriod: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStopOffset: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStopPeriod: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimePatternMinPerMtg: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTopitClassMeetingUtilPeriods(pitClassMeetingUtilPeriod: PitClassMeetingUtilPeriod)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitClassMeetingDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitClassMeetingDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByPitClassEvent(hibSession: Session, pitClassEventId: Long): List&lt;PitClassMeeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitClassMeetingUtilPeriodDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitClassMeetingUtilPeriodDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByPitClassMeeting(hibSession: Session, pitClassMeetingId: Long): List&lt;PitClassMeetingUtilPeriod&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitCourseOfferingDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitCourseOfferingDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseOffering(hibSession: Session, courseOfferingId: Long): List&lt;PitCourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCourseType(hibSession: Session, courseTypeId: Long): List&lt;PitCourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitInstructionalOffering(hibSession: Session, pitInstructionalOfferingId: Long): List&lt;PitCourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySubjectArea(hibSession: Session, subjectAreaId: Long): List&lt;PitCourseOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitDepartmentalInstructor595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitDepartmentalInstructor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCareerAcct: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartmentalInstructor: DepartmentalInstructor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitClassesInstructing: Set&lt;PitClassInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPointInTimeData: PointInTimeData [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPositionType: PositionType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTopitClassesInstructing(pitClassInstructor: PitClassInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitDepartmentalInstructorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitDepartmentalInstructorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;PitDepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDepartmentalInstructor(hibSession: Session, departmentalInstructorId: Long): List&lt;PitDepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPointInTimeData(hibSession: Session, pointInTimeDataId: Long): List&lt;PitDepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPositionType(hibSession: Session, positionTypeId: Long): List&lt;PitDepartmentalInstructor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitInstrOfferingConfig595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitInstrOfferingConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassDurationType: ClassDurationType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstrOfferingConfig: InstrOfferingConfig [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionalMethod: InstructionalMethod [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitInstructionalOffering: PitInstructionalOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSchedulingSubparts: Set&lt;PitSchedulingSubpart&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueIdRolledForwardFrom: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUnlimitedEnrollment: Boolean [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToschedulingSubparts(pitSchedulingSubpart: PitSchedulingSubpart)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitInstrOfferingConfigDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitInstrOfferingConfigDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClassDurationType(hibSession: Session, classDurationTypeId: Long): List&lt;PitInstrOfferingConfig&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByInstrOfferingConfig(hibSession: Session, instrOfferingConfigId: Long): List&lt;PitInstrOfferingConfig&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByInstructionalMethod(hibSession: Session, instructionalMethodId: Long): List&lt;PitInstrOfferingConfig&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitInstructionalOffering(hibSession: Session, pitInstructionalOfferingId: Long): List&lt;PitInstrOfferingConfig&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitInstructionalOffering595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitInstructionalOffering</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDemand: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstrOfferingPermId: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionalOffering: InstructionalOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitCourseOfferings: Set&lt;PitCourseOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitInstrOfferingConfigs: Set&lt;PitInstrOfferingConfig&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitOfferingCoordinators: Set&lt;PitOfferingCoordinator&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPointInTimeData: PointInTimeData [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueIdRolledForwardFrom: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTopitCourseOfferings(pitCourseOffering: PitCourseOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTopitInstrOfferingConfigs(pitInstrOfferingConfig: PitInstrOfferingConfig)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTopitOfferingCoordinators(pitOfferingCoordinator: PitOfferingCoordinator)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitInstructionalOfferingDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitInstructionalOfferingDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByInstructionalOffering(hibSession: Session, instructionalOfferingId: Long): List&lt;PitInstructionalOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPointInTimeData(hibSession: Session, pointInTimeDataId: Long): List&lt;PitInstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitOfferingCoordinatorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitOfferingCoordinatorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByPitDepartmentalInstructor(hibSession: Session, pitDepartmentalInstructorId: Long): List&lt;PitOfferingCoordinator&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitInstructionalOffering(hibSession: Session, pitInstructionalOfferingId: Long): List&lt;PitOfferingCoordinator&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByResponsibility(hibSession: Session, responsibilityId: Long): List&lt;PitOfferingCoordinator&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitSchedulingSubpart595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitSchedulingSubpart</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditType: CourseCreditType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditUnitType: CourseCreditUnitType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iItype: ItypeDesc [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinutesPerWk: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitChildSubparts: Set&lt;PitSchedulingSubpart&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitClasses: Set&lt;PitClass&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitInstrOfferingConfig: PitInstrOfferingConfig [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitParentSubpart: PitSchedulingSubpart [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSchedulingSubpart: SchedulingSubpart [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSchedulingSubpartSuffixCache: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentAllowOverlap: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueIdRolledForwardFrom: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTopitChildSubparts(pitSchedulingSubpart: PitSchedulingSubpart)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTopitClasses(pitClass: PitClass)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitSchedulingSubpartDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitSchedulingSubpartDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCreditType(hibSession: Session, creditTypeId: Long): List&lt;PitSchedulingSubpart&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCreditUnitType(hibSession: Session, creditUnitTypeId: Long): List&lt;PitSchedulingSubpart&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByItype(hibSession: Session, itypeId: Integer): List&lt;PitSchedulingSubpart&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitInstrOfferingConfig(hibSession: Session, pitInstrOfferingConfigId: Long): List&lt;PitSchedulingSubpart&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitParentSubpart(hibSession: Session, pitParentSubpartId: Long): List&lt;PitSchedulingSubpart&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySchedulingSubpart(hibSession: Session, schedulingSubpartId: Long): List&lt;PitSchedulingSubpart&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitStudent595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitStudent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitAcadAreaMajorClassifications: Set&lt;PitStudentAcadAreaMajorClassification&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitAcadAreaMinorClassifications: Set&lt;PitStudentAcadAreaMinorClassification&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPitClassEnrollments: Set&lt;PitStudentClassEnrollment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPointInTimeData: PointInTimeData [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: Student [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTopitAcadAreaMajorClassifications(pitStudentAcadAreaMajorClassification: PitStudentAcadAreaMajorClassification)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTopitAcadAreaMinorClassifications(pitStudentAcadAreaMinorClassification: PitStudentAcadAreaMinorClassification)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTopitClassEnrollments(pitStudentClassEnrollment: PitStudentClassEnrollment)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitStudentAcadAreaMajorClassificationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitStudentAcadAreaMajorClassificationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAcademicArea(hibSession: Session, academicAreaId: Long): List&lt;PitStudentAcadAreaMajorClassification&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByAcademicClassification(hibSession: Session, academicClassificationId: Long): List&lt;PitStudentAcadAreaMajorClassification&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByConcentration(hibSession: Session, concentrationId: Long): List&lt;PitStudentAcadAreaMajorClassification&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByMajor(hibSession: Session, majorId: Long): List&lt;PitStudentAcadAreaMajorClassification&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitStudent(hibSession: Session, pitStudentId: Long): List&lt;PitStudentAcadAreaMajorClassification&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitStudentAcadAreaMinorClassificationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitStudentAcadAreaMinorClassificationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAcademicArea(hibSession: Session, academicAreaId: Long): List&lt;PitStudentAcadAreaMinorClassification&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByAcademicClassification(hibSession: Session, academicClassificationId: Long): List&lt;PitStudentAcadAreaMinorClassification&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByMinor(hibSession: Session, minorId: Long): List&lt;PitStudentAcadAreaMinorClassification&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitStudent(hibSession: Session, pitStudentId: Long): List&lt;PitStudentAcadAreaMinorClassification&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitStudentClassEnrollmentDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitStudentClassEnrollmentDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByPitClass(hibSession: Session, pitClassId: Long): List&lt;PitStudentClassEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitCourseOffering(hibSession: Session, pitCourseOfferingId: Long): List&lt;PitStudentClassEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPitStudent(hibSession: Session, pitStudentId: Long): List&lt;PitStudentClassEnrollment&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePitStudentDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePitStudentDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByPointInTimeData(hibSession: Session, pointInTimeDataId: Long): List&lt;PitStudent&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;PitStudent&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePointInTimeDataDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePointInTimeDataDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;PointInTimeData&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePointInTimeDataReports1281202891[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePointInTimeDataReports</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   data: ArrayList&lt;String[]&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   header: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   parameterValues: HashMap&lt;Parameter, ArrayList&lt;Object&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   parameters: ArrayList&lt;Parameter&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pointInTimeDataUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   standardMinutesInReportingHour: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   standardWeeksInReportingTerm: Float [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># addDataRow(row: ArrayList&lt;String&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(parameterValues: HashMap&lt;Parameter, String&gt;, hibSession: Session): ArrayList&lt;String[]&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># findAllPitClassesForPitInstructionalOfferingId(pointInTimeData: PointInTimeData, pitOfferingId: Long, hibSession: Session): List&lt;PitClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># findAllPitInstructionalOfferingUniqueIdsForDepartment(pointInTimeData: PointInTimeData, departmentId: Long, hibSession: Session): List&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># intializeHeader()</TD></TR>
<TR><TD ALIGN="LEFT" >- outputReport(): ArrayList&lt;String[]&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># parseParameters()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportDescription(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># runReport(hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePosMajor595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePosMajor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicAreas: Set&lt;AcademicArea&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConcentrations: Set&lt;PosMajorConcentration&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToacademicAreas(academicArea: AcademicArea)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToconcentrations(posMajorConcentration: PosMajorConcentration)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePosMajorConcentrationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePosMajorConcentrationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByMajor(hibSession: Session, majorId: Long): List&lt;PosMajorConcentration&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePosMajorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePosMajorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;PosMajor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePosMinorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePosMinorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;PosMinor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePositionTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePositionTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePreferenceDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePreferenceDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByOwner(hibSession: Session, ownerId: Long): List&lt;Preference&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPrefLevel(hibSession: Session, prefLevelId: Long): List&lt;Preference&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePreferenceGroup595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePreferenceGroup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDistributionObjects: Set&lt;DistributionObject&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferences: Set&lt;Preference&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTodistributionObjects(distributionObject: DistributionObject)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTopreferences(preference: Preference)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePreferenceGroupDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePreferenceGroupDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasePreferenceLevelDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasePreferenceLevelDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseProgramDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseProgramDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Program&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseQueryLog595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseQueryLog</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iException: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeSpent: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUid: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUri: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseQueryLogDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseQueryLogDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRefTableEntryDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRefTableEntryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRelatedCourseInfo595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRelatedCourseInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourse: CourseOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEvent: CourseEvent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerType: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRelatedCourseInfoDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRelatedCourseInfoDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourse(hibSession: Session, courseId: Long): List&lt;RelatedCourseInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByEvent(hibSession: Session, eventId: Long): List&lt;RelatedCourseInfo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseReservationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseReservationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByInstructionalOffering(hibSession: Session, instructionalOfferingId: Long): List&lt;Reservation&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRolesDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRolesDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoom595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoom</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowedServices: Set&lt;EventServiceProvider&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBuilding: Building [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBuildingAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassification: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParentRoom: Room [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPartitions: Set&lt;Room&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPictures: Set&lt;RoomPicture&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomType: RoomType [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToallowedServices(eventServiceProvider: EventServiceProvider)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTopartitions(room: Room)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTopictures(roomPicture: RoomPicture)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByBuilding(hibSession: Session, buildingId: Long): List&lt;Room&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByParentRoom(hibSession: Session, parentRoomId: Long): List&lt;Room&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByRoomType(hibSession: Session, roomTypeId: Long): List&lt;Room&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomDeptDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomDeptDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;RoomDept&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByRoom(hibSession: Session, roomId: Long): List&lt;RoomDept&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomFeatureDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomFeatureDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByFeatureType(hibSession: Session, featureTypeId: Long): List&lt;RoomFeature&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomFeaturePrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomFeaturePrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByRoomFeature(hibSession: Session, roomFeatureId: Long): List&lt;RoomFeaturePref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomFeatureTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomFeatureTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomGroup595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomGroup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultGroup: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGlobal: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: Set&lt;Location&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTorooms(location: Location)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomGroupDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomGroupDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;RoomGroup&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;RoomGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomGroupPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomGroupPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByRoomGroup(hibSession: Session, roomGroupId: Long): List&lt;RoomGroupPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomPictureDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomPictureDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByLocation(hibSession: Session, locationId: Long): List&lt;RoomPicture&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByRoom(hibSession: Session, roomId: Long): List&lt;RoomPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseRoomTypeOptionDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseRoomTypeOptionDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSavedHQL595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSavedHQL</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: Set&lt;SavedHQLParameter&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToparameters(savedHQLParameter: SavedHQLParameter)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSavedHQLDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSavedHQLDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSavedHQLParameterDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSavedHQLParameterDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSchedulingSubpart595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSchedulingSubpart</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAutoSpreadInTime: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iChildSubparts: Set&lt;SchedulingSubpart&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClasses: Set&lt;Class_&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditConfigs: Set&lt;CourseCreditUnitConfig&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePattern: DatePattern [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstrOfferingConfig: InstrOfferingConfig [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iItype: ItypeDesc [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinutesPerWk: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParentSubpart: SchedulingSubpart [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSchedulingSubpartSuffixCache: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentAllowOverlap: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueIdRolledForwardFrom: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTochildSubparts(schedulingSubpart: SchedulingSubpart)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToclasses(class_: Class_)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTocreditConfigs(courseCreditUnitConfig: CourseCreditUnitConfig)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSchedulingSubpartDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSchedulingSubpartDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDatePattern(hibSession: Session, datePatternId: Long): List&lt;SchedulingSubpart&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByInstrOfferingConfig(hibSession: Session, instrOfferingConfigId: Long): List&lt;SchedulingSubpart&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByItype(hibSession: Session, itypeId: Integer): List&lt;SchedulingSubpart&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByParentSubpart(hibSession: Session, parentSubpartId: Long): List&lt;SchedulingSubpart&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseScriptDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseScriptDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseScriptParameterDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseScriptParameterDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSectioningInfoDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSectioningInfoDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClazz(hibSession: Session, clazzId: Long): List&lt;SectioningInfo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSectioningSolutionLogDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSectioningSolutionLogDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByOwner(hibSession: Session, ownerId: Long): List&lt;SectioningSolutionLog&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;SectioningSolutionLog&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSession595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSession</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicInitiative: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAcademicTerm: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAcademicYear: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBuildings: Set&lt;Building&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassesEndDateTime: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultClassDurationType: ClassDurationType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultDatePattern: DatePattern [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultInstructionalMethod: InstructionalMethod [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultSectioningStatus: StudentSectioningStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: Set&lt;Department&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventBeginDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventEndDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamBeginDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHolidays: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionalOfferings: Set&lt;InstructionalOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastWeekToChange: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastWeekToDrop: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastWeekToEnroll: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: Set&lt;Location&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionBeginDateTime: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionEndDateTime: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatusType: DepartmentStatusType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreas: Set&lt;SubjectArea&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTobuildings(building: Building)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTodepartments(department: Department)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToinstructionalOfferings(instructionalOffering: InstructionalOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTorooms(location: Location)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTosubjectAreas(subjectArea: SubjectArea)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSessionConfig595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSessionConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iKey: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSessionConfigDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSessionConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSessionDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSessionDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDefaultClassDurationType(hibSession: Session, defaultClassDurationTypeId: Long): List&lt;Session&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDefaultDatePattern(hibSession: Session, defaultDatePatternId: Long): List&lt;Session&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDefaultInstructionalMethod(hibSession: Session, defaultInstructionalMethodId: Long): List&lt;Session&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDefaultSectioningStatus(hibSession: Session, defaultSectioningStatusId: Long): List&lt;Session&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByStatusType(hibSession: Session, statusTypeId: Long): List&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSettingsDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSettingsDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSolutionDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSolutionDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByOwner(hibSession: Session, ownerId: Long): List&lt;Solution&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSolutionInfoDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSolutionInfoDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySolution(hibSession: Session, solutionId: Long): List&lt;SolutionInfo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSolverGroupDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSolverGroupDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;SolverGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSolverInfoDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSolverInfoDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDefinition(hibSession: Session, definitionId: Long): List&lt;SolverInfo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSolverInfoDefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSolverInfoDefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSolverParameterDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSolverParameterDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDefinition(hibSession: Session, definitionId: Long): List&lt;SolverParameter&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSolverParameterDefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSolverParameterDefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByGroup(hibSession: Session, groupId: Long): List&lt;SolverParameterDef&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSolverParameterGroupDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSolverParameterGroupDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSolverPredefinedSettingDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSolverPredefinedSettingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSpecialEventDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSpecialEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSponsoringOrganizationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSponsoringOrganizationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStaff595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStaff</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCampus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDept: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPositionType: PositionType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStaffDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStaffDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByPositionType(hibSession: Session, positionTypeId: Long): List&lt;Staff&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStandardEventNoteDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStandardEventNoteDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStandardEventNoteDepartmentDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStandardEventNoteDepartmentDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;StandardEventNoteDepartment&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStandardEventNoteGlobalDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStandardEventNoteGlobalDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStandardEventNoteSessionDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStandardEventNoteSessionDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;StandardEventNoteSession&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudent595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAccomodations: Set&lt;StudentAccomodation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAdvisorCourseRequests: Set&lt;AdvisorCourseRequest&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAdvisors: Set&lt;Advisor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAreaClasfMajors: Set&lt;StudentAreaClassificationMajor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAreaClasfMinors: Set&lt;StudentAreaClassificationMinor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassEndDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassEnrollments: Set&lt;StudentClassEnrollment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassStartDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseDemands: Set&lt;CourseDemand&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFreeTimeCategory: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroups: Set&lt;StudentGroup&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastLikeCourseDemands: Set&lt;LastLikeCourseDemand&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: Set&lt;StudentNote&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverrideExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverrideIntent: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverrideMaxCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverrideStatus: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverrideTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPin: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPinReleased: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iScheduleEmailedDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSchedulePreference: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectioningStatus: StudentSectioningStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitlists: Set&lt;WaitList&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToaccomodations(studentAccomodation: StudentAccomodation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToadvisorCourseRequests(advisorCourseRequest: AdvisorCourseRequest)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToadvisors(advisor: Advisor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToareaClasfMajors(studentAreaClassificationMajor: StudentAreaClassificationMajor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToareaClasfMinors(studentAreaClassificationMinor: StudentAreaClassificationMinor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToclassEnrollments(studentClassEnrollment: StudentClassEnrollment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTocourseDemands(courseDemand: CourseDemand)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTogroups(studentGroup: StudentGroup)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTolastLikeCourseDemands(lastLikeCourseDemand: LastLikeCourseDemand)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTonotes(studentNote: StudentNote)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTowaitlists(waitList: WaitList)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentAccomodationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentAccomodationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;StudentAccomodation&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentAreaClassificationMajorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentAreaClassificationMajorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAcademicArea(hibSession: Session, academicAreaId: Long): List&lt;StudentAreaClassificationMajor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByAcademicClassification(hibSession: Session, academicClassificationId: Long): List&lt;StudentAreaClassificationMajor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCampus(hibSession: Session, campusId: Long): List&lt;StudentAreaClassificationMajor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByConcentration(hibSession: Session, concentrationId: Long): List&lt;StudentAreaClassificationMajor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDegree(hibSession: Session, degreeId: Long): List&lt;StudentAreaClassificationMajor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByMajor(hibSession: Session, majorId: Long): List&lt;StudentAreaClassificationMajor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByProgram(hibSession: Session, programId: Long): List&lt;StudentAreaClassificationMajor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;StudentAreaClassificationMajor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentAreaClassificationMinorDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentAreaClassificationMinorDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAcademicArea(hibSession: Session, academicAreaId: Long): List&lt;StudentAreaClassificationMinor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByAcademicClassification(hibSession: Session, academicClassificationId: Long): List&lt;StudentAreaClassificationMinor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByMinor(hibSession: Session, minorId: Long): List&lt;StudentAreaClassificationMinor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;StudentAreaClassificationMinor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentClassEnrollmentDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentClassEnrollmentDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClazz(hibSession: Session, clazzId: Long): List&lt;StudentClassEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCourseOffering(hibSession: Session, courseOfferingId: Long): List&lt;StudentClassEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCourseRequest(hibSession: Session, courseRequestId: Long): List&lt;StudentClassEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;StudentClassEnrollment&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentClassPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentClassPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClazz(hibSession: Session, clazzId: Long): List&lt;StudentClassPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySectioningStatus(hibSession: Session, sectioningStatusId: Long): List&lt;Student&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Student&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentEnrollmentDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentEnrollmentDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByClazz(hibSession: Session, clazzId: Long): List&lt;StudentEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySolution(hibSession: Session, solutionId: Long): List&lt;StudentEnrollment&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentEnrollmentMessageDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentEnrollmentMessageDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseDemand(hibSession: Session, courseDemandId: Long): List&lt;StudentEnrollmentMessage&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentGroupDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentGroupDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;StudentGroup&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByType(hibSession: Session, typeId: Long): List&lt;StudentGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentGroupReservationDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentGroupReservationDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByGroup(hibSession: Session, groupId: Long): List&lt;StudentGroupReservation&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentGroupTypeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentGroupTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentInstrMthPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentInstrMthPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByInstructionalMethod(hibSession: Session, instructionalMethodId: Long): List&lt;StudentInstrMthPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentNoteDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentNoteDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;StudentNote&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentSectHistoryDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentSectHistoryDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;StudentSectHistory&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentSectioningPrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentSectioningPrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseRequest(hibSession: Session, courseRequestId: Long): List&lt;StudentSectioningPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentSectioningQueueDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentSectioningQueueDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseStudentSectioningStatusDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseStudentSectioningStatusDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByFallBackStatus(hibSession: Session, fallBackStatusId: Long): List&lt;StudentSectioningStatus&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;StudentSectioningStatus&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSubjectArea595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSubjectArea</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseOfferings: Set&lt;CourseOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFundingDept: Department [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionalOfferings: Set&lt;InstructionalOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreaAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTocourseOfferings(courseOffering: CourseOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToinstructionalOfferings(instructionalOffering: InstructionalOffering)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSubjectAreaDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSubjectAreaDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByDepartment(hibSession: Session, departmentId: Long): List&lt;SubjectArea&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByFundingDept(hibSession: Session, fundingDeptId: Long): List&lt;SubjectArea&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;SubjectArea&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseSubjectHistoryDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseSubjectHistoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTaskExecutionDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTaskExecutionDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByTask(hibSession: Session, taskId: Long): List&lt;TaskExecution&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTaskParameterDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTaskParameterDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTeachingClassRequestDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTeachingClassRequestDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByTeachingClass(hibSession: Session, teachingClassId: Long): List&lt;TeachingClassRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByTeachingRequest(hibSession: Session, teachingRequestId: Long): List&lt;TeachingClassRequest&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTeachingRequest595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTeachingRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignCoordinator: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignedInstructors: Set&lt;DepartmentalInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassRequests: Set&lt;TeachingClassRequest&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNbrInstructors: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOffering: InstructionalOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPercentShare: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResponsibility: TeachingResponsibility [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSameCommonPart: PreferenceLevel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSameCoursePreference: PreferenceLevel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTeachingLoad: Float [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToassignedInstructors(departmentalInstructor: DepartmentalInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToclassRequests(teachingClassRequest: TeachingClassRequest)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTeachingRequestDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTeachingRequestDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByOffering(hibSession: Session, offeringId: Long): List&lt;TeachingRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByResponsibility(hibSession: Session, responsibilityId: Long): List&lt;TeachingRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySameCommonPart(hibSession: Session, sameCommonPartId: Long): List&lt;TeachingRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySameCoursePreference(hibSession: Session, sameCoursePreferenceId: Long): List&lt;TeachingRequest&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTeachingResponsibilityDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTeachingResponsibilityDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTimePattern595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTimePattern</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBreakTime: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDays: Set&lt;TimePatternDays&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: Set&lt;Department&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinPerMtg: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrMeetings: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSlotsPerMtg: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimes: Set&lt;TimePatternTime&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iVisible: Boolean [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTodays(timePatternDays: TimePatternDays)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTodepartments(department: Department)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTotimes(timePatternTime: TimePatternTime)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTimePatternDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTimePatternDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;TimePattern&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTimePatternDaysDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTimePatternDaysDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTimePatternTimeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTimePatternTimeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTimePref595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTimePref</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPreference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimePattern: TimePattern [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTimePrefDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTimePrefDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByTimePattern(hibSession: Session, timePatternId: Long): List&lt;TimePref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTimetableManager595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTimetableManager</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: Set&lt;Department&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmailAddress: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iManagerRoles: Set&lt;ManagerRole&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSettings: Set&lt;ManagerSettings&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolverGroups: Set&lt;SolverGroup&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTodepartments(department: Department)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTomanagerRoles(managerRole: ManagerRole)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTosettings(managerSettings: ManagerSettings)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTosolverGroups(solverGroup: SolverGroup)</TD></TR>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTimetableManagerDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTimetableManagerDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTravelTime595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTravelTime</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDistance: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocation1Id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocation2Id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseTravelTimeDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseTravelTimeDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;TravelTime&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseUnavailableEventDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseUnavailableEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseUser595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseUser</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPassword: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUsername: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseUserDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseUserDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseUserDataDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseUserDataDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseVariableFixedCreditUnitConfig595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseVariableFixedCreditUnitConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iMaxUnits: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinUnits: Float [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDebugString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseVariableFixedCreditUnitConfigDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseVariableFixedCreditUnitConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseVariableRangeCreditUnitConfigDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseVariableRangeCreditUnitConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BaseWaitListDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BaseWaitListDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByCourseDemand(hibSession: Session, courseDemandId: Long): List&lt;WaitList&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCourseOffering(hibSession: Session, courseOfferingId: Long): List&lt;WaitList&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByEnrolledCourse(hibSession: Session, enrolledCourseId: Long): List&lt;WaitList&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByStudent(hibSession: Session, studentId: Long): List&lt;WaitList&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySwapCourseOffering(hibSession: Session, swapCourseOfferingId: Long): List&lt;WaitList&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BinaryFileApiHelper79803438[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BinaryFileApiHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getRequest(requestType: Type): P</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BlobRoomAvailabilityService1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BlobRoomAvailabilityService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequestSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResponseSql: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># receiveResponse(): Document</TD></TR>
<TR><TD ALIGN="LEFT" ># sendRequest(request: Document)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BoilerConnectEmail479650501[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BoilerConnectEmail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iAction: Builder [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iEmail: Email [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iOperation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRecipientEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRecipientName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iReplyToEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iReplyToName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSuffix: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAttachment(name: String, data: DataHandler)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecipient(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecipientBCC(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecipientCC(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addReplyTo(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ send()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BtbInstructorConstraintInfo1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BtbInstructorConstraintInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iInstructorId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iPreference: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ load(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BtbInstructorInfo1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BtbInstructorInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAnother: ClassAssignmentDetails [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOther: ClassAssignmentDetails [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPref: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BufferedPrinter2109884156[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BufferedPrinter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLines: List&lt;String[]&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPrinter: Printer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ close()</TD></TR>
<TR><TD ALIGN="LEFT" >+ flush()</TD></TR>
<TR><TD ALIGN="LEFT" >+ hideColumn(col: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHeader(fields: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printLine(fields: String...)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Builder847107251[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Builder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   bitField0_: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   externalId_: Object [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name_: Object [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   parameterBuilder_: RepeatedFieldBuilderV3&lt;Property, Builder, PropertyOrBuilder&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   parameter_: List&lt;Property&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type_: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   uniqueId_: long [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAllParameter(values: Iterable&lt;? extends Property&gt;): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParameter(value: Property): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParameter(index: int, value: Property): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParameter(builderForValue: Builder): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParameter(index: int, builderForValue: Builder): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParameterBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParameterBuilder(index: int): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRepeatedField(field: FieldDescriptor, value: Object): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ build(): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ buildPartial(): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearExternalId(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearField(field: FieldDescriptor): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearName(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearOneof(oneof: OneofDescriptor): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearParameter(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearType(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearUniqueId(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >- ensureParameterIsMutable()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameter(index: int): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameterBuilder(index: int): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameterOrBuilder(index: int): PropertyOrBuilder</TD></TR>
<TR><TD ALIGN="LEFT" ># internalGetFieldAccessorTable(): FieldAccessorTable</TD></TR>
<TR><TD ALIGN="LEFT" >- maybeForceBuilderInitialization()</TD></TR>
<TR><TD ALIGN="LEFT" >+ mergeFrom(other: Message): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ mergeFrom(other: Entity): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ mergeFrom(input: CodedInputStream, extensionRegistry: ExtensionRegistryLite): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ mergeUnknownFields(unknownFields: UnknownFieldSet): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeParameter(index: int): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setExternalId(value: String): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setExternalIdBytes(value: ByteString): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setField(field: FieldDescriptor, value: Object): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setName(value: String): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setNameBytes(value: ByteString): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setParameter(index: int, value: Property): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setParameter(index: int, builderForValue: Builder): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setRepeatedField(field: FieldDescriptor, index: int, value: Object): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setType(value: EntityType): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setUniqueId(value: long): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ setUnknownFields(unknownFields: UnknownFieldSet): Builder</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Building629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Building</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- checkBuildingDelete(bldg: Building): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List&lt;Building&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByBldgAbbv(bldgAbbv: String, sessionId: Long): Building</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByBldgAbbv(hibSession: Session, sessionId: Long, bldgAbbv: String): Building</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalIdAndSession(externalId: String, session: Session): Building</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalIdAndSession(externalId: String, sessionId: Long): Building</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByName(name: String, sessionId: Long): Building</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameBuildingInSession(newSession: Session): Building</TD></TR>
<TR><TD ALIGN="LEFT" >- updateBldgInfo(bldg: Building, extBldg: ExternalBuilding): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateBuildings(sessionId: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingAbbreviationHistoryDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingAbbreviationHistoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingAdd82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingAdd</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingCheckCanDeleteBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingCheckCanDeleteBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: BuildingCheckCanDeleteRequest, context: SessionContext): GwtRpcResponseBoolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingCheckCanDeleteRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingCheckCanDeleteRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBuildingId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingDelete82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionRoomDelete: Permission&lt;Room&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Building): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Building&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingEdit82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Building): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Building&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingExportPdf82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingExportPdf</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEdit: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iX: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iY: Double [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingList82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingRoomImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingRoomImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ importBuildings(element: Element, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- importDepts(element: Element, room: ExternalRoom)</TD></TR>
<TR><TD ALIGN="LEFT" >- importFeatures(element: Element, room: ExternalRoom)</TD></TR>
<TR><TD ALIGN="LEFT" >- importRoom(element: Element, building: ExternalBuilding)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingUpdateData82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingUpdateData</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingsConntector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingsConntector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doDelete(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPost(helper: ApiHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BuildingsDataResponse759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuildingsDataResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBuildings: List&lt;BuildingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAdd: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanExportPDF: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanUpdateData: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEllipsoid: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addBuilding(building: BuildingInterface)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CBSAssignment700504266[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CBSAssignment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iBreakTime: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iClassId: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iConstraint: CBSConstraint [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCounter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDatePatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDatePatternName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDays: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iInstructorName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLength: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPref: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomNames: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomPrefs: List&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStartSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iTimePref: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iVarName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Counter): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ incCounter(value: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(element: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CBSConstraint700504266[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CBSConstraint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iAssignments: HashSet&lt;CBSAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCounter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iId: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPref: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iType: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iValue: CBSValue [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iVariables: HashSet&lt;CBSVariable&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assignments(): Set&lt;CBSAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Counter): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ incCounter(value: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(element: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ value(): CBSValue</TD></TR>
<TR><TD ALIGN="LEFT" >+ variables(): Set&lt;CBSVariable&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CBSNode1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CBSNode</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHTML: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLink: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNodes: List&lt;CBSNode&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPref: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelection: SelectedAssignment [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addNode(node: CBSNode)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CBSValue700504266[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CBSValue</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iAssignments: HashSet&lt;CBSAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iBreakTime: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iConstraints: HashSet&lt;CBSConstraint&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCounter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDatePatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDatePatternName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDays: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iInstructorName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLength: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomNames: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomPrefs: List&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStartSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iTimePref: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iVariable: CBSVariable [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assignments(): Set&lt;CBSAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Counter): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ constraints(): Set&lt;CBSConstraint&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ incCounter(value: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(element: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ variable(): CBSVariable</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CBSVariable700504266[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CBSVariable</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iClassId: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iConstraint: CBSConstraint [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCounter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPref: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iValues: Set&lt;CBSValue&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Counter): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ incCounter(value: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(element: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ values(): Set&lt;CBSValue&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CSVPrinter2109884156[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CSVPrinter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCheckLast: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDelimiter: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHiddenColumns: Set&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastLine: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOut: PrintWriter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuotation: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ close()</TD></TR>
<TR><TD ALIGN="LEFT" >+ flush()</TD></TR>
<TR><TD ALIGN="LEFT" >+ hideColumn(col: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHeader(fields: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printLine(fields: String...)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CacheElement1202051522[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CacheElement</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAvailability: Map&lt;Long, TreeSet&lt;TimeBlock&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExcludeType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorAvailability: Map&lt;String, TreeSet&lt;TimeBlock&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTime: TimeFrame [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimestamp: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- add(m: Meeting, class2eventDateMap: Class2EventDateMap)</TD></TR>
<TR><TD ALIGN="LEFT" >- add(m: Meeting, instructorExternalId: String, class2eventDateMap: Class2EventDateMap)</TD></TR>
<TR><TD ALIGN="LEFT" >- addAll(meetings: List&lt;Meeting&gt;, class2eventDateMap: Class2EventDateMap)</TD></TR>
<TR><TD ALIGN="LEFT" >- addAllInstructors(meetings: List&lt;Object[]&gt;, class2eventDateMap: Class2EventDateMap)</TD></TR>
<TR><TD ALIGN="LEFT" >+ cover(time: TimeFrame): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ exclude(type: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(roomPermId: Long, excludeType: String): TreeSet&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(instructorExternalId: String, excludeType: String): TreeSet&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(class2eventDateMap: Class2EventDateMap, sessionId: Long, includeInstructors: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CacheElement1487510725[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CacheElement</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iActive: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAvailability: Hashtable&lt;Room, HashSet&lt;TimeBlock&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCampus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDirty: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastAccess: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastUpdate: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTerm: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTime: TimeFrame [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimestamp: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iYear: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ cover(time: TimeFrame): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ deactivate()</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(room: Room, excludeType: String): HashSet&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ markActive()</TD></TR>
<TR><TD ALIGN="LEFT" >+ markDirty()</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(availability: Hashtable&lt;Room, HashSet&lt;TimeBlock&gt;&gt;, timestamp: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CachedClassAssignmentProxy1792699557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CachedClassAssignmentProxy</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignmentInfoTable: Hashtable [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignmentTable: Hashtable [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProxy: ClassAssignmentProxy [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getAssignment(classId: Long): Assignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(clazz: Class_): Assignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfo(classId: Long): AssignmentPreferenceInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfo(clazz: Class_): AssignmentPreferenceInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfoTable(classesOrClassIds: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentTable(classesOrClassIds: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflictingTimeBlocks(classId: Long): Set&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflicts(classId: Long): Set&lt;Assignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasConflicts(offeringId: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CalendarExport91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CalendarExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassIds: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFts: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCalendar(server: OnlineSectioningServer, helper: OnlineSectioningHelper, student: XStudent): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >- printFreeTime(dpFirstDate: Date, weekCode: BitSet, days: String, start: int, len: int, ical: ICalendar)</TD></TR>
<TR><TD ALIGN="LEFT" >- printSection(server: OnlineSectioningServer, course: XCourse, section: XSection, ical: ICalendar)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CalendarUtils1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CalendarUtils</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ date2dayOfYear(sessionYear: int, meetingDate: Date): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ dateOfYear2date(sessionYear: int, dayOfYear: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDate(date: String, dateFormat: String): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ isValidDate(date: String, dateFormat: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Campus629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Campus</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Campus&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CampusDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CampusDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Campuses1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Campuses</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(campus: Campus, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(campus: Campus, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CanUseHardDistributionPrefs317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CanUseHardDistributionPrefs</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: PreferenceGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;PreferenceGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CanUseHardPeriodPrefs317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CanUseHardPeriodPrefs</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: PreferenceGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;PreferenceGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CanUseHardRoomPrefs317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CanUseHardRoomPrefs</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: PreferenceGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;PreferenceGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CanUseHardTimePrefs317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CanUseHardTimePrefs</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: PreferenceGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;PreferenceGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CancelSpecialRegistrationRequest836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CancelSpecialRegistrationRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequestId: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ChameleonUserContext641976759[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChameleonUserContext</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOriginalUser: UserContext [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ChangeGradeModesRequest836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChangeGradeModesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iChanges: List&lt;SpecialRegistrationGradeModeChange&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCreditChanges: List&lt;SpecialRegistrationCreditChange&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCurrentCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addChange(change: SpecialRegistrationGradeModeChange)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addChange(change: SpecialRegistrationCreditChange)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getChange(sectionId: String): SpecialRegistrationGradeModeChange</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditChange(sectionId: String): SpecialRegistrationCreditChange</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasCreditChanges(approval: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasGradeModeChanges(approval: boolean): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ChangeGradeModesResponse836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChangeGradeModesResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCancelRequestIds: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGradeModes: GradeModes [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequests: List&lt;RetrieveSpecialRegistrationResponse&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCancelRequestId(id: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCreditHour(sectionId: String, creditHour: Float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addGradeMode(sectionId: String, code: String, label: String, honors: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRequest(request: RetrieveSpecialRegistrationResponse)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditHour(section: ClassAssignment): Float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGradeMode(section: ClassAssignment): GradeMode</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRequest(requestId: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isToBeCancelled(requestId: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ChangeLog629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChangeLog</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addChange(hibSession: Session, context: SessionContext, object: Object, objectTitle: String, source: Source, operation: Operation, subjArea: SubjectArea, dept: Department)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addChange(hibSession: Session, manager: TimetableManager, session: Session, object: Object, source: Source, operation: Operation, subjArea: SubjectArea, dept: Department)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addChange(hibSession: Session, contect: SessionContext, object: Object, source: Source, operation: Operation, subjArea: SubjectArea, dept: Department)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addChange(hibSession: Session, manager: TimetableManager, session: Session, object: Object, objectTitle: String, source: Source, operation: Operation, subjArea: SubjectArea, dept: Department)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(obj: ChangeLog): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findLastChange(object: Object): ChangeLog</TD></TR>
<TR><TD ALIGN="LEFT" >+ findLastChange(object: Object, source: Source): ChangeLog</TD></TR>
<TR><TD ALIGN="LEFT" >+ findLastChange(objectType: String, objectUniqueId: Number): ChangeLog</TD></TR>
<TR><TD ALIGN="LEFT" >+ findLastChange(objectType: String, objectUniqueId: Number, source: Source): ChangeLog</TD></TR>
<TR><TD ALIGN="LEFT" >+ findLastChange(objectType: String, objectUniqueIds: Collection&lt;Long&gt;, source: Source): ChangeLog</TD></TR>
<TR><TD ALIGN="LEFT" >+ findLastNChanges(object: Object, n: int): List&lt;ChangeLog&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findLastNChanges(object: Object, source: Source, n: int): List&lt;ChangeLog&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findLastNChanges(sessionId: Long, managerId: Long, subjAreaId: Long, departmentId: Long, n: int): List&lt;ChangeLog&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ChangeLogDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChangeLogDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ChangePassword1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChangePassword</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ChangeStudentGroup91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChangeStudentGroup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iGroupId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRemove: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Collection&lt;Long&gt;): ChangeStudentGroup</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ChangeStudentPreferences91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChangeStudentPreferences</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPreferences: StudentSchedulingPreferencesInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): ChangeStudentPreferences</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Collection&lt;Long&gt;): ChangeStudentPreferences</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ChangeStudentStatus91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChangeStudentStatus</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ changeStatus(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Collection&lt;Long&gt;): ChangeStudentStatus</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Check2045803708[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Check</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: CourseRequestInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CourseRequestInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CheckAssignmentAction1584910327[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CheckAssignmentAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignment: Collection&lt;ClassAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(server: OnlineSectioningServer, helper: OnlineSectioningHelper, errors: Set&lt;ErrorMessage&gt;): List&lt;EnrollmentRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;EnrollmentRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): CheckAssignmentAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CheckCourses209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CheckCourses</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCustomValidation: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMatcher: CourseMatcher [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: CourseRequestInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CheckCoursesResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ forRequest(request: CourseRequestInterface): CheckCourses</TD></TR>
<TR><TD ALIGN="LEFT" >+ lookup(server: OnlineSectioningServer, student: XStudent, course: RequestedCourse): XCourseId</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CheckCoursesResponse85005764[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CheckCoursesResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConfirmationSetup: Map&lt;Integer, String[]&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditWarning: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iErrorMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCreditNeeded: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCreditOverrideStatus: RequestedCourseStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessages: Set&lt;CourseMessage&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCheckBox(message: String, confirm: Integer, order: Integer): CourseMessage</TD></TR>
<TR><TD ALIGN="LEFT" >+ addConfirmation(message: String, confirm: Integer, order: Integer): CourseMessage</TD></TR>
<TR><TD ALIGN="LEFT" >+ addError(courseId: Long, course: String, code: String, message: String): CourseMessage</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMessage(message: CourseMessage)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMessage(courseId: Long, course: String, code: String, message: String, confirm: Integer, order: int): CourseMessage</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMessage(courseId: Long, course: String, code: String, message: String, confirm: Integer): CourseMessage</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfirmationNoButton(confirm: int, defaultTitle: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfirmationNoButtonTitle(confirm: int, defaultTitle: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfirmationTitle(confirm: int, defaultTitle: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfirmationYesButton(confirm: int, defaultTitle: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfirmationYesButtonTitle(confirm: int, defaultTitle: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfirmations(confirm: int, delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMessage(courseName: String, delim: String, exclude: String...): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMessageWithColor(courseName: String, delim: String, exclude: String...): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMessages(courseName: String): List&lt;CourseMessage&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMessages(confirm: int): List&lt;CourseMessage&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStatus(courseName: String): RequestedCourseStatus</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasMessage(courseName: String, code: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isConfirm(courseName: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isError(courseName: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CheckCriticalCourses126119667[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CheckCriticalCourses</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Long...): CheckCriticalCourses</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Collection&lt;Long&gt;): CheckCriticalCourses</TD></TR>
<TR><TD ALIGN="LEFT" ># isCritical(cd: CourseDemand, critical: CriticalCourses): int</TD></TR>
<TR><TD ALIGN="LEFT" ># isCritical(cr: XCourseRequest, critical: CriticalCourses): int</TD></TR>
<TR><TD ALIGN="LEFT" ># isCritical(cr: XAdvisorRequest, critical: CriticalCourses): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># recheckStudent(server: OnlineSectioningServer, helper: OnlineSectioningHelper, studentId: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CheckEligibility209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CheckEligibility</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCheck: EligibilityCheck [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCustomCheck: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPermissionCanEnroll: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPermissionCanRequirePreferences: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): EligibilityCheck</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): CheckEligibility</TD></TR>
<TR><TD ALIGN="LEFT" >+ includeCustomCheck(customCheck: boolean): CheckEligibility</TD></TR>
<TR><TD ALIGN="LEFT" ># logCheck(action: Builder, check: EligibilityCheck)</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CheckEnrollmentConsistencyAction91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CheckEnrollmentConsistencyAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CheckOfferingAction91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CheckOfferingAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOfferingIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSkipStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(server: OnlineSectioningServer, student: XStudent, offering: XOffering, request: XCourseRequest): ReschedulingReason</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkOffering(server: OnlineSectioningServer, helper: OnlineSectioningHelper, offering: XOffering, recheckOfferingIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forOfferings(offeringIds: Long...): CheckOfferingAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ forOfferings(offeringIds: Collection&lt;Long&gt;): CheckOfferingAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Long...): CheckOfferingAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Collection&lt;Long&gt;): CheckOfferingAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ isCheckNeeded(server: OnlineSectioningServer, helper: OnlineSectioningHelper, oldEnrollment: XEnrollment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isCheckNeeded(server: OnlineSectioningServer, helper: OnlineSectioningHelper, oldEnrollment: XEnrollment, newEnrollment: XEnrollment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ skipStudents(studentIds: Long...): CheckOfferingAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ skipStudents(studentIds: Collection&lt;Long&gt;): CheckOfferingAction</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Class2EventDateMap240174637[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Class2EventDateMap</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClass2EventDates: Map&lt;String, Date&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDateFormat: SimpleDateFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEvent2ClassDates: Map&lt;String, Date&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addMapping(classDate: Date, eventDate: Date)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassDate(eventDate: Date): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEventDate(classDate: Date): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasClassDate(classDate: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasEventDate(eventDate: Date): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignment676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeededLimitedEdit: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Class_&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignment779165909[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAlternative: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAvailable: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBackToBackDistance: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBackToBackRooms: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBreakTime: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanWaitList: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCancelled: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseAssigned: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNbr: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCredit: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditHour: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditMax: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditMin: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePattern: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDays: ArrayList&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistanceConflict: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDummy: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrolledDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iError: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExpected: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGradeMode: GradeMode [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHasAlternatives: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInfo: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructing: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructoEmails: ArrayList&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructos: ArrayList&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLength: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: int[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverlapNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParentSection: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPin: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: ArrayList&lt;IdValue&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSaved: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSection: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSpecRegOperation: SpecialRegistrationOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSpecRegStatus: SpecialRegistrationStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStart: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubject: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubpart: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubpartId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTeachingAssigment: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWarn: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDay(day: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addError(error: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInfo(info: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructoEmail(instructorEmail: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructor(instructor: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addNote(note: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addNote(note: String, separator: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRoom(id: Long, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addWarn(warn: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ equalsIgnoreCase(requestedCourse: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ equalsIgnoreCase(requestedCourse: RequestedCourse): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseNbr(includeTitle: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDaysString(shortDays: String[], separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDaysString(shortDays: String[]): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndString(useAmPm: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndStringAria(useAmPm: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorWithEmails(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructors(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOverlapAndNote(overlapStyle: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRooms(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSelection(required: boolean): Preference</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartString(useAmPm: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartStringAria(useAmPm: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimeString(shortDays: String[], useAmPm: boolean, arrangeHours: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimeStringAria(longDays: String[], useAmPm: boolean, arrangeHours: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ guessCreditCount(): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignmentChanged91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignmentChanged</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forClasses(classIds: Long...): ClassAssignmentChanged</TD></TR>
<TR><TD ALIGN="LEFT" >+ forClasses(classIds: Collection&lt;Long&gt;): ClassAssignmentChanged</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignmentDetails1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignmentDetails</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignedObjectives: Map&lt;String, Double&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignedRoom: List&lt;RoomInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignedTime: TimeInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBtbInstructorConflicts: List&lt;BtbInstructorInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanUnassign: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClass: ClassInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConflict: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistributionConflicts: List&lt;DistributionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInitialRoom: List&lt;RoomInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInitialTime: TimeInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructor: List&lt;InstructorInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iObjectives: Map&lt;String, Double&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoom: List&lt;RoomInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: List&lt;RoomInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentConflicts: List&lt;StudentConflictInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTime: TimeInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimes: List&lt;TimeInfo&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addBtbInstructorConflict(conf: BtbInstructorInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDistributionConflict(conf: DistributionInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRoom(room: RoomInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStudentConflict(conf: StudentConflictInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTime(time: TimeInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ countDistributionConflicts(): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ countStudentConflicts(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignedObjective(name: String): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getObjective(name: String): double</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignmentDetails624236337[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignmentDetails</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignedAssignmentInfo: AssignmentPreferenceInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignedRoom: RoomInfo[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignedTime: TimeInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignmentInfo: AssignmentPreferenceInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBtbInstructorInfos: Vector [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClass: ClassInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroupConstraintInfos: Vector [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInitialRoom: RoomInfo[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInitialTime: TimeInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructor: InstructorInfo[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoom: RoomInfo[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: RoomInfos [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentConflicts: Vector [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTime: TimeInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimes: TimeInfos [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ createClassAssignmentDetails(context: SessionContext, solver: SolverProxy, classId: Long, includeConstraints: boolean): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ createClassAssignmentDetailsFromAssignment(context: SessionContext, assignmentId: Long, includeConstraints: boolean): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(number: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(prefix: String, number: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(n1: int, n2: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(n1: double, n2: double): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(number: double): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(prefix: String, number: double): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumberNoHtml(number: double): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumberNoHtml(prefix: String, number: double): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumberShort(rem: boolean, n1: int, n2: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumberShort(rem: boolean, n1: double, n2: double): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumberShort(rem: boolean, prefix: String, n1: double, n2: double): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispPref(oldPref: String, newPref: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispRoom(oldRoom: RoomInfo, newRoom: RoomInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispRoom2(oldRoom: RoomInfo, newRoom: RoomInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispRoomNoHtml(oldRoom: RoomInfo, newRoom: RoomInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispTime(oldTime: TimeInfo, newTime: TimeInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispTime2(oldTime: TimeInfo, newTime: TimeInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispTimeNoHtml(oldTime: TimeInfo, newTime: TimeInfo): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignmentDetailsBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignmentDetailsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   classAssignmentService: AssignmentService&lt;ClassAssignmentProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createClassAssignmentDetails(context: SuggestionsContext, solver: Solver, lecture: Lecture, includeDomain: boolean, includeConstraints: boolean): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ createClassAssignmentDetails(context: SuggestionsContext, solver: Solver, lecture: Lecture, placement: Placement, includeDomain: boolean, includeConstraints: boolean): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ createClassAssignmentDetailsFromAssignment(context: SuggestionsContext, assignmentId: Long, includeConstraints: boolean): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ createClassAssignmentDetailsFromAssignment(context: SuggestionsContext, assignment: Assignment, includeConstraints: boolean): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ createClassAssignmentDetailsFromClass(context: SuggestionsContext, clazz: Class_): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: ClassAssignmentDetailsRequest, context: SessionContext): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ toGroupConstraintInfo(info: GroupConstraintInfo): GroupConstraintInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ toJenrlInfo(info: JenrlInfo): JenrlInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignmentDetailsRequest1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignmentDetailsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignments: List&lt;SelectedAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAssignment(a: SelectedAssignment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAssignment(classId: Long): SelectedAssignment</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignmentInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignmentInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iLead: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPercentShare: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iResponsibility: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignmentService1058021598[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignmentService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   sessionContext: SessionContext [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignments676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignments</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignmentsExportCsv676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignmentsExportCsv</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassAssignmentsExportPdf676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassAssignmentsExportPdf</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassCancel317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassCancel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Class_&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassComparator1628636464[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassComparator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   compareBy: short [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   subjectUID: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compare(c1: Comparable, c2: Comparable): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compare(c1: Class_, c2: Class_): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareInstructors(i1: List&lt;DepartmentalInstructor&gt;, i2: List&lt;DepartmentalInstructor&gt;): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ isParentSameIType(s1: SchedulingSubpart, s2: SchedulingSubpart): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassCourseComparator1628636464[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassCourseComparator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iClassAssignmentProxy: ClassAssignmentProxy [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iKeepSubpart: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSortyBy: SortBy [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compare(o1: Object, o2: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareByParentChildSameIType(co: CourseOffering, c1: Class_, c2: Class_): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareClasses(co1: CourseOffering, co2: CourseOffering, c1: Class_, c2: Class_): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareComparable(c1: Comparable, c2: Comparable): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareCourses(co1: CourseOffering, co2: CourseOffering): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareInstructors(c1: Class_, c2: Class_): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareSubparts(s1: SchedulingSubpart, s2: SchedulingSubpart): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(sortBy: SortBy): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSortBy(name: String): SortBy</TD></TR>
<TR><TD ALIGN="LEFT" >+ isParent(s1: SchedulingSubpart, s2: SchedulingSubpart): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isParentSameIType(s1: SchedulingSubpart, s2: SchedulingSubpart): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassDelete317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Class_): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassDeleteNoEnrollmentCheck317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassDeleteNoEnrollmentCheck</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Class_&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassDetail317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Class_&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassDurationType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassDurationType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(t: ClassDurationType): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(): List&lt;ClassDurationType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllVisible(include: ClassDurationType): Set&lt;ClassDurationType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByReference(reference: String, hibSession: Session): ClassDurationType</TD></TR>
<TR><TD ALIGN="LEFT" >+ findDefaultType(sessionId: Long, hibSession: Session): ClassDurationType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassDurationTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassDurationTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassEdit317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Class_&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassEditClearPreferences317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassEditClearPreferences</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassEvent629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassEvent</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassEventDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCourse: List&lt;CourseInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMeetings: List&lt;AssignmentInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSectionNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSubpart: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassInfo1355163399[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConfigId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudents: List&lt;StudentInfo&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ countStudentsWeight(): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(element: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassInfo1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrRooms: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOrd: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPref: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomCap: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(ci: ClassInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ nrRooms(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassInfoConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassInfoConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># firstDate(dp: DatePattern, dayCode: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># lastDate(dp: DatePattern, dayCode: int): Date</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassInstructor629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassInstructor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: ClassInstructor): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ nameFirstNameFirst(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ nameLastNameFirst(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassInstructorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassInstructorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassWaitListDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassWaitListDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Class_629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Class_</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEvent: ClassEvent [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assignCommited(assignment: ClassAssignmentInfo, user: UserContext, hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ buildAssignedRoomHtml(proxy: ClassAssignmentProxy): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ buildAssignedTimeHtml(proxy: ClassAssignmentProxy): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ buildInstructorHtml(nameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ canBeDeleted(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canShareInstructor(other: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canShareInstructor(other: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canShareRoom(other: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canShareRoom(other: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancelEvent(user: UserContext, hibSession: Session, cancelled: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ classInstructorPrefsOfType(type: Class): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ cloneWithPreferences(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >- combinePreferences(instrPrefs1: Set&lt;Preference&gt;, instrPrefs2: Set&lt;Preference&gt;): Set&lt;Preference&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- combinePreferences(type: Class, subpartPrefs: Set, instrPrefs: Set): Set</TD></TR>
<TR><TD ALIGN="LEFT" >- combinePreferences(type: Class, classPrefs: Set, subpartPrefs: Set, instrPrefs: Set): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteAllDependentObjects(hibSession: Session, updateClass: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteAllDistributionPreferences(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteAllDistributionPreferences(hibSession: Session, updateClass: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteAssignments(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteClassInstructors(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteObjectsFromCollection(hibSession: Session, s: Collection)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteTeachingRequests(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveDatePattern(): DatePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveDistributionPreferences(owningDept: Department): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveNbrInstructors(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectivePreferences(type: Class, leadInstructors: Vector, fixDurationInTimePreferences: boolean): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectivePreferences(type: Class, fixDurationInTimePreferences: boolean): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveTeachingLoad(): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveTimePatternHtml(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(hibSession: Session, sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllForControllingSubjectArea(subjectAreaAbbv: String, sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllForControllingSubjectArea(subjectAreaAbbv: String, sessionId: Long, hibSession: Session): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalId(sessionId: Long, externalId: String): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByIdRolledForwardFrom(sessionId: Long, uniqueIdRolledForwardFrom: Long): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >- fixDurationInTimePreferences(prefs: Set): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassLabel(course: CourseOffering, includeSuffix: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassLabel(course: CourseOffering, includeSuffix: boolean, includeConfigName: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassLabel(includeSuffix: boolean, includeConfigName: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassLabel(includeSuffix: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassLabel(hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassLabel(courseOffering: CourseOffering): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassLabelWithTitle(courseOffering: CourseOffering): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassLimit(assignment: Assignment): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassLimit(proxy: ClassAssignmentProxy): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassLimit(offering: CourseOffering): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassPrefLabel(co: CourseOffering): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassSuffix(courseOffering: CourseOffering): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCredit(courseOffering: CourseOffering): Float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExternalId(courseOffering: CourseOffering): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNextClass(context: SessionContext, right: Right): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNextClass(context: SessionContext, cmp: Comparator, right: Right): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreviousClass(context: SessionContext, right: Right): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreviousClass(context: SessionContext, cmp: Comparator, right: Right): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSectionNumber(hibSession: Session): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSectionNumber(save: boolean): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSectionNumber(hibSession: Session, save: boolean): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSectionNumberString(hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSharedPreferences(classId: Long, subpartId: Long, preferences: String[], types: String[]): List&lt;DistributionPref&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- hasChildClass(r: Reservation): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasClass(r: Reservation): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- htmlForTimePatterns(patterns: Set): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ instructorHtml(instructorNameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ instructorText(instructorNameFormat: String, separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isParentOf(clazz: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isToIgnoreStudentConflictsWith(other: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeClassInstructor(classInstr: ClassInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" >- removeDepartmentalPreferences(prefs: Set): Set</TD></TR>
<TR><TD ALIGN="LEFT" >- removeNeutralPreferences(prefs: Set): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ timePatternHtml(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ unassignCommited(user: UserContext, hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" >- weakenHardPreferences(prefs: Set): Set</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Class_DAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Class_DAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Classes317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Classes</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassesExportPDF317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassesExportPDF</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClearHibernateCacheBackend1801756021[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClearHibernateCacheBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ClearHibernateCacheRequest, context: SessionContext): ClearHibernateCacheResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClearHibernateCacheRequest427737907[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClearHibernateCacheRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClearHibernateCacheResponse427737907[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClearHibernateCacheResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Client546593469[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Client</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPageLoadingTimer: Timer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addGwtPageChangedHandler(h: GwtPageChangedHandler)</TD></TR>
<TR><TD ALIGN="LEFT" >+ callGwtOnLoadIfExists()</TD></TR>
<TR><TD ALIGN="LEFT" >+ fireGwtPageChanged(event: GwtPageChangeEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getElementsByName(name: String): NodeList&lt;Element&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ init(page: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initComponentAsync(panel: RootPanel, comp: Components)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initPageAsync(page: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onModuleLoad()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onModuleLoadDeferred()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reloadMenu()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClusterDiscoveryDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClusterDiscoveryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CommitedClassAssignmentProxy1792699557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CommitedClassAssignmentProxy</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getAssignment(classId: Long): Assignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(clazz: Class_): Assignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfo(classId: Long): AssignmentPreferenceInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfo(clazz: Class_): AssignmentPreferenceInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfoTable(classesOrClassIds: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentTable(classesOrClassIds: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflictingTimeBlocks(classId: Long): Set&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflicts(classId: Long): Set&lt;Assignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasConflicts(offeringId: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CompositeTerm2060480431[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CompositeTerm</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iTerms: List&lt;Term&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(t: Term)</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAttribute(attribute: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(t: Term)</TD></TR>
<TR><TD ALIGN="LEFT" ># terms(): List&lt;Term&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ComputeConflictTableBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ComputeConflictTableBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ computeConfTable(context: SuggestionsContext, solver: TimetableSolver, request: ComputeConflictTableRequest): List&lt;ClassAssignmentDetails&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># createConflict(context: SuggestionsContext, solver: Solver, lecture: Lecture, time: TimeLocation): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: ComputeConflictTableRequest, context: SessionContext): GwtRpcResponseList&lt;ClassAssignmentDetails&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ComputeConflictTableRequest1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ComputeConflictTableRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ComputeSuggestionsBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ComputeSuggestionsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ComputeSuggestionsRequest, context: SessionContext): SuggestionsResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ComputeSuggestionsBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ComputeSuggestionsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- backtrack(context: SuggestionsContext, solver: TimetableSolver, suggestions: Suggestions, query: Query, startTime: long, initialLectures: List&lt;Lecture&gt;, resolvedLectures: List&lt;Long&gt;, conflictsToResolve: Map&lt;Lecture, Placement&gt;, initialAssignments: Map&lt;Lecture, Placement&gt;, depth: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeSuggestions(context: SuggestionsContext, solver: TimetableSolver, request: ComputeSuggestionsRequest): Suggestions</TD></TR>
<TR><TD ALIGN="LEFT" ># containsCommited(model: TimetableModel, values: Collection): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: ComputeSuggestionsRequest, context: SessionContext): Suggestions</TD></TR>
<TR><TD ALIGN="LEFT" ># getBound(query: Query, suggestions: Suggestions, solver: TimetableSolver, conflictsToResolve: Map&lt;Lecture, Placement&gt;): double</TD></TR>
<TR><TD ALIGN="LEFT" ># isBetter(suggestion: Suggestion, solver: TimetableSolver): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># match(query: Query, suggestions: Suggestions, placement: Placement): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- placements(context: SuggestionsContext, solver: TimetableSolver, suggestions: Suggestions, query: Query, startTime: long, lecture: Lecture, resolvedLectures: List&lt;Long&gt;, conflictsToResolve: Map&lt;Lecture, Placement&gt;, initialAssignments: Map&lt;Lecture, Placement&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># values(query: Query, suggestions: Suggestions, solver: TimetableSolver, lecture: Lecture): TreeSet&lt;PlacementValue&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ComputeSuggestionsRequest1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ComputeSuggestionsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowBreakHard: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignments: List&lt;SelectedAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepth: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilter: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPlacements: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSameRoom: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSameTime: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeLimit: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAssignment(a: SelectedAssignment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAssignment(classId: Long): SelectedAssignment</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ComputeSuggestionsRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ComputeSuggestionsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignments: List&lt;AssignmentInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iComputeDomain: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iComputeSuggestions: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxDepth: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxDomain: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxResults: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedIndex: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedInstructorId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedRequestId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeout: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAssignment(assignment: AssignmentInfo)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Concentrations1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Concentrations</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(conc: PosMajorConcentration, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(conc: PosMajorConcentration, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConflictBasedStatisticsBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConflictBasedStatisticsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- assignmentNode(assignment: CBSAssignment): CBSNode</TD></TR>
<TR><TD ALIGN="LEFT" >- constraintNode(constraint: CBSConstraint): CBSNode</TD></TR>
<TR><TD ALIGN="LEFT" ># convert(variables: Collection&lt;CBSVariable&gt;, classId: Long, variableOriented: boolean, limit: double): GwtRpcResponseList&lt;CBSNode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: ConflictBasedStatisticsRequest, context: SessionContext): GwtRpcResponseList&lt;CBSNode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAllSubjects(subjects: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- valueNode(value: CBSValue): CBSNode</TD></TR>
<TR><TD ALIGN="LEFT" >- variableNode(variable: CBSVariable): CBSNode</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConflictBasedStatisticsRequest1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConflictBasedStatisticsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iVariableOriented: boolean [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConflictStatistics676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConflictStatistics</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConflictStatisticsFilterBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConflictStatisticsFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ConflictStatisticsFilterRequest, context: SessionContext): ConflictStatisticsFilterResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConflictStatisticsFilterRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConflictStatisticsFilterRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConflictStatisticsFilterResponse926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConflictStatisticsFilterResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPageMessages: List&lt;PageMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProperties: SuggestionProperties [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPageMessage(message: PageMessage)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConflictStatisticsInfo1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConflictStatisticsInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iVariables: Map&lt;Long, CBSVariable&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- assignmentLeafItem(out: PrintWriter, assignment: CBSAssignment, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- combine(a: int, b: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >- constraintMenuItem(out: PrintWriter, menuId: String, constraint: CBSConstraint, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- end_item(out: PrintWriter)</TD></TR>
<TR><TD ALIGN="LEFT" >+ filter(counters: Collection&lt;E&gt;, limit: double): List&lt;E&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCBS(classId: Long): CBSVariable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflictStatisticsSubInfo(variables: List): ConflictStatisticsInfo</TD></TR>
<TR><TD ALIGN="LEFT" >- leaf_item(out: PrintWriter, name: String, description: String, page: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(solver: Solver&lt;Lecture, Placement&gt;, cbs: ConflictStatistics)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(solver: Solver&lt;Lecture, Placement&gt;, cbs: ConflictStatistics, classId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- menu_item(out: PrintWriter, id: String, name: String, description: String, page: String, isCollapsed: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ merge(info: ConflictStatisticsInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(jsp: JspWriter, limit: double, type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(out: PrintWriter, limit: double, type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(jsp: JspWriter, limit: double[], type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(out: PrintWriter, limit: double[], type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(jsp: JspWriter, classId: Long, limit: double, type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(out: PrintWriter, classId: Long, limit: double, type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(jsp: JspWriter, classId: Long, limit: double[], type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(out: PrintWriter, classId: Long, limit: double[], type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtmlHeader(jsp: JspWriter)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtmlHeader(out: PrintWriter, style: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ transpose(variables: Collection&lt;CBSVariable&gt;, classId: Long): Collection&lt;CBSConstraint&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- unassignedVariableMenuItem(out: PrintWriter, menuId: String, variable: CBSVariable, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- unassignmentMenuItem(out: PrintWriter, menuId: String, value: CBSValue, clickable: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConsentApproval539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConsentApproval</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: CourseOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;CourseOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Constants1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Constants</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ arrayToStr(array: Object[], encloseBy: String, separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ curriculaToInitialCase(text: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ filterXSS(str: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayOfWeek(date: Date): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDefaultExamStartOffset(examType: ExamType): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDefaultExamStopOffset(examType: ExamType): int</TD></TR>
<TR><TD ALIGN="LEFT" >- getExamOffset(value: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPositiveFloat(str: String, defaultValue: float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPositiveInteger(str: String, defaultValue: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ isInteger(str: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isNumber(str: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ leftPad(value: Object, width: int, pad: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ pad(direction: int, value: Object, width: int, pad: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ rightPad(value: Object, width: int, pad: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ showCrsOffrAsFullText(user: UserContext): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ showPrintNoteAsFullText(user: UserContext): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2str(slot: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ sort(data: String, separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ toHour(slot: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ toInitialCase(str: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ toInitialCase(str: String, delimiters: char[]): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ toMinute(slot: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ toTime(minutesSinceMidnight: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConstraintInfoDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConstraintInfoDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ContactCategories1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ContactCategories</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(cc: ContactCategory, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(cc: ContactCategory, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ContactCategoryDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ContactCategoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ContactInterface4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ContactInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFormattedName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPhone: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResponsibility: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResponsibilityAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(c: ContactInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFormattedName(includeResponsibility: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(messages: GwtMessages, includeResponsibility: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(messages: GwtMessages): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CopyInstructorSurveyBackend1948231384[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CopyInstructorSurveyBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: InstructorSurveyCopyRequest, context: SessionContext): InstructorSurveyData</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Counter1875904956[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Counter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iValue: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ decrement()</TD></TR>
<TR><TD ALIGN="LEFT" >+ increment()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Course21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Course</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCustoms: Map&lt;Long, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clearCustomFields()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCustomField(f: CustomField): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCustomField(id: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasCustomField(f: CustomField): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCatalogDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCatalogDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCatalogImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCatalogImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- loadCredits(course: Element, catalog: CourseCatalog)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditFormat629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditFormat</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCourseCreditForReference(referenceString: String): CourseCreditFormat</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseCreditForUniqueId(uniqueId: Long): CourseCreditFormat</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditFormatDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditFormatDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditFormatInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditFormatInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReference: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditFormats1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditFormats</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(credit: CourseCreditFormat, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(credit: CourseCreditFormat, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCourseCreditTypeForReference(referenceString: String): CourseCreditType</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseCreditTypeForUniqueId(uniqueId: Long): CourseCreditType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditTypeInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditTypeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(credit: CourseCreditType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(credit: CourseCreditType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditUnitConfig629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditUnitConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># baseClone(newCreditConfig: CourseCreditUnitConfig)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ createCreditUnitConfigOfFormat(creditFormat: String, creditType: String, creditUnitType: String, units: Float, maxUnits: Float, fractionalIncrementsAllowed: Boolean, creditAtCourseLevel: Boolean): CourseCreditUnitConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ createCreditUnitConfigOfFormat(creditFormat: String, creditType: Long, creditUnitType: Long, units: Float, maxUnits: Float, fractionalIncrementsAllowed: Boolean, creditAtCourseLevel: Boolean): CourseCreditUnitConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ createCreditUnitConfigOfFormat(creditFormat: String, creditType: CourseCreditType, creditUnitType: CourseCreditUnitType, units: Float, maxUnits: Float, fractionalIncrementsAllowed: Boolean, creditAtCourseLevel: Boolean): CourseCreditUnitConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ creditAbbv(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ creditText(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditUnitConfigDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditUnitConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditUnitType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditUnitType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCourseCreditUnitTypeForReference(referenceString: String): CourseCreditUnitType</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseCreditUnitTypeForUniqueId(uniqueId: Long): CourseCreditUnitType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditUnitTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditUnitTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditUnitTypeInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditUnitTypeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseCreditUnits1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseCreditUnits</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(credit: CourseCreditUnitType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(credit: CourseCreditUnitType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseDemand629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseDemand</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveNoSub(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveWaitList(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(hibSession: Session, sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseRequest(courseOfferingId: Long): CourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEnrolled(checkSectionSwap: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWaitListOrNoSub(wlMode: WaitListMode): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ updatePreferences(request: CourseRequest, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseDemandDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseDemandDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseDetail21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDetail: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseDetailsBackend1801756021[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseDetailsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: CourseDetailsRpcRequest, context: SessionContext): CourseDetailsRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseDetails(session: AcademicSessionInfo, subject: String, courseNbr: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseUrl(session: AcademicSessionInfo, subject: String, courseNbr: String): URL</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseDetailsRpcRequest1382796139[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseDetailsRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseDetailsRpcResponse1382796139[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseDetailsRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDetails: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLink: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseEvent629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseEvent</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseEventDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseHistoryDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseHistoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iClassExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iClassSuffix: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iControl: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCourseNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCourseTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCredit: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iResponsibility: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSubjectArea: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iType: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseInfo1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(course: CourseInfo): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseInfoMatcher1932076738[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseInfoMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConsentToDoCourse: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInfo: XCourse [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLookup: CourseLookup [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iServer: OnlineSectioningServer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ info(): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ server(): OnlineSectioningServer</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseInterface1351995911[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCurriculumCourses: List&lt;CurriculumCourseInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroups: TreeSet&lt;CurriculumCourseGroupInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addGroup(group: CurriculumCourseGroupInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(course: CourseInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >- firstClassification(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCurriculumCourse(idx: int): CurriculumCourseInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGroup(name: String): CurriculumCourseGroupInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGroup(groupId: Long): CurriculumCourseGroupInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- highestClassification(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseLookup1932076738[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseLookup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLookups: Map&lt;String, Set&lt;Long&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionInfo [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCourses(term: String): Set&lt;Long&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseMessage85005764[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseMessage</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConfirm: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourse: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iError: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOrder: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: RequestedCourseStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuggestions: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addSuggestion(suggestion: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># compare(x: int, y: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(m: CourseMessage): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ setStatus(status: RequestedCourseStatus): CourseMessage</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseNumbersSuggestionsBackend1801756021[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseNumbersSuggestionsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SuggestionRpcRequest, context: SessionContext): GwtRpcResponseList&lt;SuggestionInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOffering629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOffering</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addNew(subjAreaId: Long, courseNbr: String): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalId(sessionId: Long, externalId: String): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByIdRolledForwardFrom(sessionId: Long, uniqueIdRolledForwardFrom: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByName(name: String, sessionId: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySessionSubjAreaAbbvCourseNbr(acadSessionId: Long, subjAreaAbbv: String, courseNbr: String): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySessionSubjAreaAbbvCourseNbrTitle(acadSessionId: Long, subjAreaAbbv: String, courseNbr: String, title: String): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySessionSubjAreaIdCourseNbr(acadSessionId: Long, subjAreaId: Long, courseNbr: String): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySubjectAreaCourseNbr(sessionId: Long, subjectAreaAbbv: String, courseNbr: String): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySubjectCourseNbrInstrOffUniqueId(subjectAreaAbbv: String, courseNbr: String, instrOffrUniqueId: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByUniqueId(uniqueId: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassEnrollments(s: Student): List&lt;StudentClassEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getControllingCourses(sessionId: Long): Vector</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingCheckExists1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingCheckExists</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIsEdit: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreaId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingCheckExistsBackend1624300373[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingCheckExistsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: CourseOfferingCheckExists, context: SessionContext): CourseOfferingCheckExistsInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingCheckExistsInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingCheckExistsInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iResponseText: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingCheckPermissions1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingCheckPermissions</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjAreaId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingCheckPermissionsBackend1624300373[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingCheckPermissionsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: CourseOfferingCheckPermissions, context: SessionContext): CourseOfferingPermissionsInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingConstantsBackend1624300373[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingConstantsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   logger: Logger [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: CourseOfferingConstantsRequest, context: SessionContext): CourseOfferingConstantsInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingConstantsInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingConstantsInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   prefRowsAdded: Integer [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingConstantsRequest1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingConstantsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIsEdit: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjAreaId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingDeleteFromCrossList317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingDeleteFromCrossList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: CourseOffering): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingDeleteFromCrossListNoEnrollmentCheck317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingDeleteFromCrossListNoEnrollmentCheck</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: CourseOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;CourseOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingException1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingException</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iClassEvents: Map&lt;Long, ClassEvent&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDefaultMaxNbrRooms: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExams: Hashtable&lt;Long, TreeSet&lt;Exam&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExportAssignments: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExportGroupInfos: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMeetingLocations: Map&lt;Long, Location&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- dayCode2days(dayCode: int): String</TD></TR>
<TR><TD ALIGN="LEFT" ># exportArrHours(classElement: Element, clazz: Class_, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportAssignment(classElement: Element, assignment: Assignment, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportClass(classElement: Element, clazz: Class_, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportConfig(configElement: Element, config: InstrOfferingConfig, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportCourse(courseElement: Element, course: CourseOffering, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportCredit(creditElement: Element, credit: CourseCreditUnitConfig, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportDatePattern(classElement: Element, dp: DatePattern, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportEvent(classElement: Element, event: Event, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportExam(offeringElement: Element, offering: InstructionalOffering, exam: Exam, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportGroupInfos(classElement: Element, assignment: Assignment, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportInstructionalOffering(offeringsElement: Element, offering: InstructionalOffering, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportInstructor(instructorElement: Element, instructor: ClassInstructor, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportInstructor(instructorElement: Element, instructor: DepartmentalInstructor, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportRequiredRooms(classElement: Element, clazz: Class_, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportRooms(classElement: Element, assignment: Assignment, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportSubpart(subpartElement: Element, subpart: SchedulingSubpart, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportTimeLocation(classElement: Element, assignment: Assignment, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
<TR><TD ALIGN="LEFT" >- startSlot2startTime(startSlot: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >- timeLocation2endTime(time: TimeLocation): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># handleCustomClassChildElements(classElement: Element, ioc: InstrOfferingConfig, clazz: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># handleCustomCourseChildElements(courseOffering: CourseOffering, courseOfferingElement: Element): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># handleCustomInstrOffrConfigChildElements(instrOfferingConfig: InstrOfferingConfig, instrOfferingConfigElement: Element): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># postLoadAction()</TD></TR>
<TR><TD ALIGN="LEFT" ># preLoadAction()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAlternativeCourseOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iByReservationOnly: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEdit: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCatalogLinkLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCatalogLinkLocation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConsent: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConsentText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoordinators: List&lt;CoordinatorInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNbr: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseTypeId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditFormat: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditType: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditUnitType: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDemand: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDemandOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDemandOfferingText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEffectiveFundingDepartmentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iErrorMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFractionalIncrementsAllowed: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFundingDepartmentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstrOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIoNotOffered: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIsControl: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastWeekToChange: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastWeekToDrop: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastWeekToEnroll: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxUnits: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNbrExpectedStudents: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverrides: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPermId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProjectedDemand: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReservation: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iScheduleBookNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSendCoordinators: List&lt;CoordinatorInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreaAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreaId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUnits: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitList: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCoordinator(coordinator: CoordinatorInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseOverride(override: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSendCoordinator(coordinator: CoordinatorInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearCourseOverrides()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearInstructors()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingPermissionsInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingPermissionsInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanAddCourseOffering: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEditCourseOffering: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEditCourseOfferingCoordinators: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEditCourseOfferingNote: Boolean [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingPropertiesBackend1624300373[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingPropertiesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   logger: Logger [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: CourseOfferingPropertiesRequest, context: SessionContext): CourseOfferingPropertiesInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- setupCourseOfferings(context: SessionContext, filter: CourseFilter): List&lt;CourseOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingPropertiesInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingPropertiesInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowAlternativeCourseOfferings: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAltCourseOfferings: List&lt;CourseOfferingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEditExternalIds: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanShowExternalIds: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseCreditFormats: List&lt;CourseCreditFormatInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseCreditTypes: List&lt;CourseCreditTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseCreditUnitTypes: List&lt;CourseCreditUnitTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseDemands: List&lt;CourseOfferingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNbrInfo: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNbrRegex: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseOfferingMustBeUnique: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseOfferingNumberUpperCase: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseTypes: List&lt;CourseTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseUrlProvider: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoursesFundingDepartmentsEnabled: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultTeachingResponsibilityId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFundingDepartments: List&lt;DepartmentInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionalOfferingId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: List&lt;InstructorInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingConsentTypes: List&lt;OfferingConsentTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverrideTypes: List&lt;OverrideTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResponsibilities: List&lt;ResponsibilityInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreaEffectiveFundingDept: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreas: List&lt;SubjectAreaInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListDefault: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitLists: List&lt;WaitListInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   prefRowsAdded: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   weekStartDayOfWeek: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   wkChangeDefault: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   wkDropDefault: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   wkEnrollDefault: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAltCourseOffering(altCourseOffering: CourseOfferingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseCreditFormat(courseCreditFormat: CourseCreditFormatInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseCreditType(courseCreditType: CourseCreditTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseCreditUnitType(courseCreditUnitType: CourseCreditUnitTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseDemands(courseDemands: CourseOfferingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseType(courseType: CourseTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFundingDepartment(fundingDepartment: DepartmentInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructor(instructor: InstructorInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addOfferingConsentType(offeringConsentType: OfferingConsentTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addOverrideType(overrideType: OverrideTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addResponsibility(responsibility: ResponsibilityInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSubjectArea(subjectArea: SubjectAreaInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addWaitList(waitListItem: WaitListInterface)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingPropertiesRequest1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingPropertiesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIsEdit: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjAreaId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseOfferingReservationImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseOfferingReservationImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># fetchCourseOffering(courseNumber: String, subjectAreaId: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" ># fetchSubjectArea(subject: String, sessionId: Long): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseQuery1541604099[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseQuery</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ select(select: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectCourses(select: String, request: FilterRpcRequest): QueryInstance</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseRequest629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clearCourseRequestOption(type: OptionType)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseRequestOption(type: OptionType): CourseRequestOption</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateCourseRequestOption(type: OptionType, option: Builder)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updatePreferences(rc: RequestedCourse, hibSession: Session): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseRequestDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseRequestDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseRequestInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseRequestInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowRoomConf: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowTimeConf: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAlternatives: ArrayList&lt;Request&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConfirmations: List&lt;CourseMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourses: ArrayList&lt;Request&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditWarning: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeadlineConf: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iErrorMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastCourse: RequestedCourse [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLinkedConf: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCreditOverride: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCreditOverrideExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCreditOverrideStatus: RequestedCourseStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCreditOverrideTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMode: WaitListMode [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNoChange: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPinReleased: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPopupMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestorNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestorNoteSuggestions: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSaved: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSpecRegDashboardUrl: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUpdateLastRequest: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListChecks: CheckCoursesResponse [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- __getRequestPriority(course: Object): RequestPriority</TD></TR>
<TR><TD ALIGN="LEFT" >+ addConfirmation(message: CourseMessage)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addConfirmationError(courseId: Long, course: String, code: String, message: String, status: RequestedCourseStatus, order: Integer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addConfirmationMessage(courseId: Long, course: String, code: String, message: String, status: RequestedCourseStatus, order: Integer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addConfirmationMessage(courseId: Long, course: String, code: String, message: String, order: Integer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addConfirmations(confirmations: Collection&lt;CourseMessage&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourse(course: RequestedCourse): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseCriticalFirst(request: Request)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRequestorNoteSuggestion(suggestion: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ applyAdvisorRequests(req: CourseRequestInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ areDeadlineConflictsAllowed(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ areLinkedConflictsAllowed(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ areSpaceConflictsAllowed(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ areTimeConflictsAllowed(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canWaitList(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ dropCourse(course: RequestedCourse): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAlternative(index: int): Request</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfirmation(courseName: String, delim: String, exclude: String...): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfirmations(courseName: String): List&lt;CourseMessage&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(index: int): Request</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCredit(advisorWaitListedCourseIds: Set&lt;Long&gt;): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditRange(advisorWaitListedCourseIds: Set&lt;Long&gt;): float[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestPriority(course: CourseAssignment): RequestPriority</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestPriority(course: DegreeCourseInterface): RequestPriority</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestPriority(course: RequestedCourse): RequestPriority</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStatus(courseName: String): RequestedCourseStatus</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStatus(courseId: Long): RequestedCourseStatus</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasConfirmations(courseName: String, exclude: String...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasConfirmations(courseId: Long, exclude: String...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isActive(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isError(courseName: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWaitListed(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ moveActiveSubstitutionsUp()</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeDuplicates(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeInactiveDuplicates()</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameWaitListedCourses(other: CourseRequestInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateRequestorNote(requestId: String, note: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseRequestMatcher1932076738[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseRequestMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDefaultStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: XEnrollment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMyStudent: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOffering: XOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: XCourseRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: XStudent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTestEnrollment: XEnrollment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListMode: WaitListMode [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ course(): XCourseId</TD></TR>
<TR><TD ALIGN="LEFT" >+ enrollment(): XEnrollment</TD></TR>
<TR><TD ALIGN="LEFT" >- eq(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- has(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- like(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ offering(): XOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- parseDay(token: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >- parseStart(token: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ request(): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ setEnrollment(e: XEnrollment): CourseRequestMatcher</TD></TR>
<TR><TD ALIGN="LEFT" >+ status(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ student(): XStudent</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseRequestOptionDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseRequestOptionDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseRequests539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseRequests</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseRequirement21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseRequirement</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDist: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistHtml: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoom: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomHtml: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTime: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeHtml: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDist(dist: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDistHtml(dist: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRoom(room: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRoomHtml(room: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseReservationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseSelectionBoxBackend1948231384[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseSelectionBoxBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- checkPermissions(sessionId: Long, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >- getCourse(sessionId: Long, courseName: String, courseId: Long): CourseOffering</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseSolverContainer398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseSolverContainer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCourseSolvers: Map&lt;String, TimetableSolver&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPassivation: PassivationThread [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createSolver(user: String, config: DataProperties): SolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMemUsage(user: String): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(user: String): SolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSolver(user: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolver(user: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseSolverContainerRemote398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseSolverContainerRemote</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSaveFileInfos: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createProxy(address: Address, user: String): SolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ createRemoteSolver(user: String, config: DataProperties, caller: Address): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFile(name: String): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispatch(address: Address, user: String, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ invoke(method: String, user: String, types: Class[], args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadFromFile(name: String): TimetableInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(name: String, info: TimetableInfo): Boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseSubpartCreditDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseSubpartCreditDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseTimetableExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseTimetableExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># exportArrHours(classElement: Element, clazz: Class_, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportClass(classElement: Element, clazz: Class_, course: CourseOffering, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseTimetableImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseTimetableImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDateFormat: DateFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePatterns: List&lt;DatePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExtId2class: HashMap&lt;String, Class_&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExtId2location: HashMap&lt;String, Location&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExtId2room: HashMap&lt;String, Room&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHHmm: DateFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName2class: HashMap&lt;String, Class_&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName2dp: HashMap&lt;String, DatePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName2location: HashMap&lt;String, Location&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName2room: HashMap&lt;String, Room&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName2tp: HashMap&lt;String, TimePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerId2solution: HashMap&lt;Long, Solution&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferExtId: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowClassSuffix: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowConfigName: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeFormat: DateFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimePatterns: List&lt;TimePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iToday: Date [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># findDepartmentalInstructorWithExternalUniqueId(externalId: String, department: Department): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" ># findStaffMember(id: String): Staff</TD></TR>
<TR><TD ALIGN="LEFT" ># getLocations(classElement: Element): Set&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># importClassAssignment(classElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupClass(classElement: Element): Class_</TD></TR>
<TR><TD ALIGN="LEFT" ># match(datePattern: DatePattern, classElement: Element, dayCode: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># parseDatePattern(classElement: Element, session: Session): BitSet</TD></TR>
<TR><TD ALIGN="LEFT" ># parseDaysOfWeek(daysOfWeek: String): int</TD></TR>
<TR><TD ALIGN="LEFT" ># parseTime(timeString: String): Integer</TD></TR>
<TR><TD ALIGN="LEFT" ># updateInstructors(clazz: Class_, classElement: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseTimetabling676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseTimetabling</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SolverGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SolverGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseTimetablingAudit676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseTimetablingAudit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SolverGroup): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseTimetablingOrAudit676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseTimetablingOrAudit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SolverGroup): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseTimetablingSolverService1058021598[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseTimetablingSolverService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   sessionContext: SessionContext [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createConfig(settingsId: Long, options: Map&lt;Long, String&gt;): DataProperties</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSolver(properties: DataProperties): SolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(puid: String, sessionId: Long): SolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >- getSolverWarning(config: DataProperties): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reload(properties: DataProperties): SolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeSolver()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseTypeInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseTypeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CourseTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CourseTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: CourseType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: CourseType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculaConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculaConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculaException1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculaException</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculaExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculaExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iShareDF: DecimalFormat [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculaImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculaImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculaServlet998479413[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculaServlet</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseDetailsProvider: CourseDetailsProvider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canAddCurriculum(): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canEditProjectionRules(): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeEnrollmentsAndLastLikes(acadAreaId: Long, majors: List&lt;Long&gt;, multipleMajors: boolean): HashMap&lt;String, CurriculumStudentsInterface[]&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteCurricula(curriculumIds: Set&lt;Long&gt;): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteCurriculum(curriculumId: Long): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- findAllCurricula(hibSession: Session): List&lt;Curriculum&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCurricula(filter: CurriculumFilterRpcRequest): TreeSet&lt;CurriculumInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCurriculaForACourse(courseName: String): TreeSet&lt;CurriculumInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCurriculaForAnInstructionalOffering(offeringId: Long): TreeSet&lt;CurriculumInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getApplicationProperty(name: String[]): String[]</TD></TR>
<TR><TD ALIGN="LEFT" >- getCourse(hibSession: Session, courseName: String): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProjection(clasf2major2proj: Hashtable&lt;String, HashMap&lt;String, Float&gt;&gt;, majorCode: String, clasfCode: String): float</TD></TR>
<TR><TD ALIGN="LEFT" >- getRules(hibSession: Session, acadAreaId: Long): Hashtable&lt;String, HashMap&lt;String, Float&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- getRules(hibSession: Session): Hashtable&lt;String, Hashtable&lt;String, HashMap&lt;String, Float&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSnapshotProjection(clasf2major2ssproj: Hashtable&lt;String, HashMap&lt;String, Float&gt;&gt;, majorCode: String, clasfCode: String): float</TD></TR>
<TR><TD ALIGN="LEFT" >- getSnapshotRules(hibSession: Session, acadAreaId: Long): Hashtable&lt;String, HashMap&lt;String, Float&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- hasSnapshotData(hibSession: Session, sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># isTemplateFor(template: Curriculum, curriculum: Curriculum): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ lastCurriculaFilter(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ listClasses(course: String): Collection&lt;ClassAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ listCourseOfferings(query: String, limit: Integer, includeNotOffered: boolean, checkDepartment: boolean): Collection&lt;CourseAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAcademicAreas(): TreeSet&lt;AcademicAreaInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadAcademicClassifications(): TreeSet&lt;AcademicClassificationInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadAreaMajorClasf2enrl(hibSession: Session, courseOfferingId: Long): Map&lt;Long, Map&lt;Long, Map&lt;Long, Map&lt;Long, Double&gt;&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadAreaMajorClasf2ll(hibSession: Session, courseOfferingId: Long): Map&lt;String, Map&lt;String, Map&lt;String, Map&lt;Long, Double&gt;&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadAreaMajorClasf2ll(hibSession: Session): Hashtable&lt;String, Hashtable&lt;String, Hashtable&lt;String, Integer&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadAreaMajorClasf2req(hibSession: Session, courseOfferingId: Long): Map&lt;Long, Map&lt;Long, Map&lt;Long, Map&lt;Long, Double&gt;&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasf2enrl(hibSession: Session, c: Curriculum): Hashtable&lt;Long, Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasf2enrl(hibSession: Session, acadAreaId: Long, majors: Collection&lt;Long&gt;, multipleMajors: boolean): Hashtable&lt;Long, Map&lt;Long, Double&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasf2ll(hibSession: Session, c: Curriculum): Hashtable&lt;String, Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasf2req(hibSession: Session, c: Curriculum): Hashtable&lt;Long, Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasf2req(hibSession: Session, acadAreaId: Long, majors: Collection&lt;Long&gt;, multipleMajors: boolean): Hashtable&lt;Long, Map&lt;Long, Double&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasfCourse2enrl(hibSession: Session, c: Curriculum): Hashtable&lt;Long, Hashtable&lt;Long, Integer&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasfCourse2enrl(hibSession: Session, acadAreaId: Long, majors: Collection&lt;Long&gt;, multipleMajors: boolean): Hashtable&lt;Long, Hashtable&lt;CourseInterface, Map&lt;Long, Double&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasfCourse2req(hibSession: Session, c: Curriculum): Hashtable&lt;Long, Hashtable&lt;Long, Integer&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasfCourse2req(hibSession: Session, acadAreaId: Long, majors: Collection&lt;Long&gt;, multipleMajors: boolean): Hashtable&lt;Long, Hashtable&lt;CourseInterface, Map&lt;Long, Double&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasfCourseMajor2ll(hibSession: Session, acadAreaAbbv: String, majors: Collection&lt;PosMajor&gt;, multipleMajors: boolean): Hashtable&lt;String, Hashtable&lt;CourseInterface, HashMap&lt;String, Map&lt;Long, Double&gt;&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasfMajor2ll(hibSession: Session, c: Curriculum): Hashtable&lt;String, Hashtable&lt;String, Integer&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasfMajor2ll(hibSession: Session, acadAreaAbbv: String, majors: Collection&lt;PosMajor&gt;, multipleMajors: boolean): Hashtable&lt;String, HashMap&lt;String, Map&lt;Long, Double&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadClasfMajorCourse2ll(hibSession: Session, c: Curriculum): Hashtable&lt;String, Hashtable&lt;String, Hashtable&lt;Long, Integer&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadClassifications(curriculumIds: List&lt;Long&gt;): List&lt;CurriculumClassificationInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadCourseAreaMajorClasf2ll(hibSession: Session): Map&lt;Long, Map&lt;String, Map&lt;String, Map&lt;String, Map&lt;Long, Double&gt;&gt;&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- loadCurriculaForACourse(hibSession: Session, academicClassifications: TreeSet&lt;AcademicClassificationInterface&gt;, academicAreas: TreeSet&lt;AcademicAreaInterface&gt;, courseOffering: CourseOffering): TreeSet&lt;CurriculumInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadCurriculum(curriculumId: Long): CurriculumInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadDepartments(): TreeSet&lt;DepartmentInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadMajors(curriculumId: Long, academicAreaId: Long, multipleMajors: boolean): TreeSet&lt;MajorInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadProjectionRules(): HashMap&lt;AcademicAreaInterface, HashMap&lt;MajorInterface, HashMap&lt;AcademicClassificationInterface, Number[]&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadTemplate(acadAreaId: Long, majors: List&lt;Long&gt;): CurriculumInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ makeupCurriculaFromLastLikeDemands(lastLike: boolean): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ mergeCurricula(curriculumIds: Set&lt;Long&gt;): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ populateCourseProjectedDemands(includeOtherStudents: boolean): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ populateCourseProjectedDemands(includeOtherStudents: boolean, offeringId: Long): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrieveCourseDetails(course: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveClassifications(curricula: List&lt;CurriculumInterface&gt;): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveCurriculum(curriculum: CurriculumInterface): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveProjectionRules(rules: HashMap&lt;AcademicAreaInterface, HashMap&lt;MajorInterface, HashMap&lt;AcademicClassificationInterface, Number[]&gt;&gt;&gt;): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateCurriculaByProjections(curriculumIds: Set&lt;Long&gt;, updateCurriculumCourses: boolean): Boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Curriculum629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Curriculum</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(c: Curriculum): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List&lt;Curriculum&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDepartment(deptId: Long): List&lt;Curriculum&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isTemplateFor(curriculum: Curriculum): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumAdd814515033[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumAdd</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumAdmin814515033[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumAdmin</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumClassificationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumClassificationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumClassificationInterface1351995911[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumClassificationInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClasf: AcademicClassificationInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClasfId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourses: TreeSet&lt;CurriculumCourseInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCurriculumId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastLike: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrStudents: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProjection: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequested: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionHasSnapshotData: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotNrStudents: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotProjection: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCourse(course: CurriculumCourseInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(clasf: CurriculumClassificationInterface): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumCourseDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumCourseDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumCourseGroupDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumCourseGroupDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumCourseGroupInterface1351995911[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumCourseGroupInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iColor: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(g: CurriculumCourseGroupInterface): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumCourseInterface1351995911[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumCourseInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClasfId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultShare: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultSnapshotShare: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastLike: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProjection: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequested: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionHasSnapshotData: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShare: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotProjection: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotShare: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTemplates: TreeSet&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTemplate(template: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(course: CurriculumCourseInterface): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumDelete814515033[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumDetail814515033[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Curriculum): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Curriculum&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumEdit814515033[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Curriculum): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Curriculum&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumFilterBackend1074656955[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ curricula(sessionId: Long, options: Map&lt;String, Set&lt;String&gt;&gt;, query: Query, limit: int, ignoreCommand: String, userDepartments: Set&lt;Department&gt;): List&lt;Curriculum&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ enumarate(request: CurriculumFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: CurriculumFilterRpcRequest, context: SessionContext): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(request: CurriculumFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >- suggestionQuery(query: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ suggestions(request: CurriculumFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumFilterRpcRequest1351995911[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumFilterRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAcademicArea: AcademicAreaInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClasf: TreeSet&lt;CurriculumClassificationInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourses: TreeSet&lt;CourseInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDept: DepartmentInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastChange: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMajors: TreeSet&lt;MajorInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMultipleMajors: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionHasSnapshotData: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAll(students: Map&lt;Long, Double&gt;, other: Map&lt;Long, Double&gt;): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ addClassification(clasf: CurriculumClassificationInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourse(course: CourseInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMajor(major: MajorInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(curriculum: CurriculumInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ count(col: Map&lt;Long, Double&gt;): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassification(academicClassificationId: Long): CurriculumClassificationInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassification(academicClassificationCode: String): CurriculumClassificationInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCodeMajorNames(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseOfferingId: Long): CourseInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseName: String): CourseInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMajorCodes(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMajorNames(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAll(students: Map&lt;Long, Double&gt;, other: Map&lt;Long, Double&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ retainAll(students: Map&lt;Long, Double&gt;, other: Map&lt;Long, Double&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumMatcher1487748818[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCurriculum: Curriculum [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iManaged: Set&lt;Department&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- eq(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- has(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumMerge814515033[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumMerge</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumOverrideReservationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumOverrideReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumProjectionRuleDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumProjectionRuleDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumProjectionRulesDetail814515033[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumProjectionRulesDetail</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumProjectionRulesEdit814515033[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumProjectionRulesEdit</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumReservationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CurriculumView814515033[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CurriculumView</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CustomExportContext814171373[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CustomExportContext</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iUser: UserContext [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CustomField21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CustomField</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLength: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CustomSQLExternalUidTranslation355886009[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CustomSQLExternalUidTranslation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ ext2uid(externalUniqueId: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ translate(uid: String, source: Source, target: Source): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ uid2ext(username: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DataExchangeConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DataExchangeConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># createHelper(request: HttpServletRequest, response: HttpServletResponse): ApiHelper</TD></TR>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPost(helper: ApiHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DataExchangeHelper876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DataExchangeHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iFlushIfNeededCounter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iHibSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iTextLog: Log [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iTx: Transaction [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ beginTransaction(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ commitTransaction(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ createExportBase(type: String): BaseExport</TD></TR>
<TR><TD ALIGN="LEFT" >+ createImportBase(type: String): BaseImport</TD></TR>
<TR><TD ALIGN="LEFT" >+ debug(msg: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ debug(msg: String, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(msg: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(msg: String, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ exportDocument(rootName: String, session: Session, parameters: Properties, log: Log): Document</TD></TR>
<TR><TD ALIGN="LEFT" >+ fatal(msg: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ fatal(msg: String, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ flush(commit: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ flushDoNotClearSession(commit: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ flushIfNeeded(commit: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ flushIfNeededDoNotClearSession(commit: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># getClassLabel(clazz: Class_): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getClassSuffix(clazz: Class_): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getExternalUniqueId(clazz: Class_): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ importDocument(document: Document, userId: String, log: Log)</TD></TR>
<TR><TD ALIGN="LEFT" >+ info(msg: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ info(msg: String, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rollbackTransaction(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ warn(msg: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ warn(msg: String, t: Throwable)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseServer1593966791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseServer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assign(request: XCourseRequest, enrollment: XEnrollment): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAllStudents()</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(query: String, limit: Integer, matcher: CourseMatcher): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(query: String, limit: Integer, matcher: CourseMatcher, cmp: Comparator&lt;XCourseId&gt;): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(matcher: CourseMatcher): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findStudents(matcher: StudentMatcher): Collection&lt;XStudent&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseId: Long): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(course: String): XCourseId</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExpectations(offeringId: Long): XExpectations</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructedOfferings(instructorExternalId: String): Collection&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOffering(offeringId: Long): XOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestedCourseIds(studentId: Long): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequests(offeringId: Long): Collection&lt;XCourseRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudent(studentId: Long): XStudent</TD></TR>
<TR><TD ALIGN="LEFT" ># loadOnMaster(context: OnlineSectioningServerContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(student: XStudent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(expectations: XExpectations)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(student: XStudent, updateRequests: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ waitlist(request: XCourseRequest, waitlist: boolean): XCourseRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatePattern629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatePattern</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCachedPatternBitSet: BitSet [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: DatePattern): int</TD></TR>
<TR><TD ALIGN="LEFT" >- diff(x: Set&lt;Integer&gt;, y: Set&lt;Integer&gt;): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(user: UserContext, department: Department, includeGiven: DatePattern): List&lt;DatePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(session: Session, includeExtended: boolean, department: Department, includeGiven: DatePattern): List&lt;DatePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long, includeExtended: boolean, department: Department, includeGiven: DatePattern): List&lt;DatePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllChildren(sessionId: Long): List&lt;DatePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllParents(sessionId: Long): List&lt;DatePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllUsed(sessionId: Long): Set&lt;DatePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByName(session: Session, name: String): DatePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByName(sessionId: Long, name: String): DatePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ findChildren(): List&lt;DatePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findChildren(hibSession: Session): List&lt;DatePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCloseMatchDatePatternInSession(session: Session): DatePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBorderArray(uniqueId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBounds(sessionId: Long): Date[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPatternHtml(editable: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPatternHtml(editable: boolean, uniqueId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPatternHtml(editable: boolean, uniqueId: Long, includeScript: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUsage(classes: Collection&lt;Class_&gt;): TreeSet&lt;Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUsage(uniqueId: Long): TreeSet&lt;Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOffered(day: int, month: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isUsed(day: int, month: int, usage: Set&lt;Integer&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- respectsSessionHolidays(alsoReturnFalseIfBreaksExistOnNonHolidays: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ respectsSessionHolidays(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ respectsSessionHolidaysAndHasNoNonHolidayBreaks(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ size(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatePatternDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatePatternDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatePatternPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatePatternPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DateSelectorBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DateSelectorBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- compare(d1: Date, d2: Date): int</TD></TR>
<TR><TD ALIGN="LEFT" >- compare(c1: Calendar, c2: Calendar, field: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(command: RequestSessionDetails, context: EventContext): GwtRpcResponseList&lt;SessionMonth&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ listMonths(session: Session, includeEventDateMappings: boolean, check: HasPastOrOutside): GwtRpcResponseList&lt;SessionMonth&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ listMonths(session: Session, includeEventDateMappings: boolean, check: HasPastOrOutside, extraMonths: int, disableOutsideEventDates: boolean): GwtRpcResponseList&lt;SessionMonth&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ listMonths(session: Session, includeEventDateMappings: boolean, check: HasPastOrOutside, monthsBefore: int, monthsAfter: int, disableOutsideEventDates: boolean): GwtRpcResponseList&lt;SessionMonth&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DateSolverProperty546475809[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DateSolverProperty</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getComparable(value: Date): Comparable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getText(value: Date): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DateUtils1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DateUtils</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ calculateActualYear(month: int, year: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >- calendarFor(day: int, month: int, year: int): Calendar</TD></TR>
<TR><TD ALIGN="LEFT" >- calendarForFirstDayOf(month: int, year: int): Calendar</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDate(year: int, dayOfYear: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDate(day: int, month: int, year: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayOfYear(date: Date): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayOfYear(day: int, month: int, year: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndDate(year: int, week: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndDate(year: int, week: int, offset: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndMonth(sessionEnd: Date, year: int, excessDays: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFirstDayOfWeek(year: int, week: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNrDaysOfMonth(month: int, year: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartDate(year: int, week: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartDate(year: int, week: int, offset: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartMonth(sessionBegin: Date, year: int, excessDays: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWeek(date: Date): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DbCourseInfoMatcher511700137[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DbCourseInfoMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConsentToDoCourse: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourse: CourseOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLookup: CourseLookup [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ course(): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): Boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DbCourseRequestMatcher511700137[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DbCourseRequestMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClazz: Class_ [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: List&lt;StudentClassEnrollment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFormat: NameFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMyStudent: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOffering: InstructionalOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: CourseRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReservation: Reservation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReservationGuessed: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: Student [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ approval(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ canAssign(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ config(): InstrOfferingConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ enrollment(): List&lt;StudentClassEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- eq(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># guessReservation(): Reservation</TD></TR>
<TR><TD ALIGN="LEFT" >- has(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- like(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ offering(): InstructionalOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- parseDay(token: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >- parseStart(token: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ request(): CourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ reservation(): Reservation</TD></TR>
<TR><TD ALIGN="LEFT" >+ session(): AcademicSessionInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ status(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ student(): Student</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DbStudentMatcher511700137[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DbStudentMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDefaultStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFormat: NameFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMyStudent: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: Student [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- eq(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- has(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- like(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ status(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ student(): Student</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultAcademicSessionLookup1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultAcademicSessionLookup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findAcademicSession(campus: String, year: String, term: String, hibSession: Session): Session</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAcademicSession(campus: String, year: String, term: String): Session</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSubjectAreaForCampusYearTerm(campus: String, year: String, term: String, subjectAreaAbbreviation: String, hibSession: Session): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSubjectAreaForCampusYearTerm(campus: String, year: String, term: String, subjectAreaAbbreviation: String): SubjectArea</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultCourseDetailsProvider2037228697[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultCourseDetailsProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iExternalTermProvider: ExternalTermProvider [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># downloadDetails(url: URL): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseUrl(session: AcademicSessionInfo, subject: String, courseNbr: String): URL</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDetails(session: AcademicSessionInfo, subject: String, courseNbr: String): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getExternalCourseNbr(session: AcademicSessionInfo, subjectArea: String, courseNumber: String): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getExternalSubject(session: AcademicSessionInfo, subjectArea: String, courseNumber: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" ># replaceExternal(url: String, session: AcademicSessionInfo, subject: String, courseNbr: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultExpirationDates788834012[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultExpirationDates</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iExpirations: Map&lt;String, Date&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInclusive: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartDates: Map&lt;String, Date&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getExpirationDate(type: String): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartDate(type: String): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasExpirationDate(type: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasStartDate(type: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultRoomAvailabilityService1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultRoomAvailabilityService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCache: Vector&lt;CacheElement&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorAvailabilityEnabled: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ activate(sessionId: Long, startTime: Date, endTime: Date, excludeType: String, waitForSync: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(time: TimeFrame, excludeType: String): CacheElement</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorAvailability(instructorId: Long, startTime: Date, endTime: Date, excludeType: String): Collection&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomAvailability(locationId: Long, startTime: Date, endTime: Date, excludeType: String): Collection&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimeStamp(startTime: Date, endTime: Date, excludeType: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ startService()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopService()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultSettings1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultSettings</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(setting: Settings, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(setting: Settings, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Degree629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Degree</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Degree&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DegreeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DegreeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Degrees1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Degrees</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(degree: Degree, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(degree: Degree, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DeleteInstructor2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeleteInstructor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: DepartmentalInstructor): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DeleteRecordBackend330628327[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeleteRecordBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: DeleteRecordRpcRequest, context: SessionContext): Record</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DeleteRecordRpcRequest745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeleteRecordRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ deleteRecord(type: String, record: Record): DeleteRecordRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DeleteScriptBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeleteScriptBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: DeleteScriptRpcRequest, context: SessionContext): ScriptInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DeleteScriptRpcRequest15436791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeleteScriptRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DeleteTaskBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeleteTaskBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: DeleteTaskDetailsRpcRequest, context: SessionContext): TaskInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DeleteTaskDetailsRpcRequest160962237[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeleteTaskDetailsRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iTaskId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DemandOfferingType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DemandOfferingType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DemandOfferingTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DemandOfferingTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmenalRoomFeatureDelete82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmenalRoomFeatureDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmenalRoomFeatureEdit82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmenalRoomFeatureEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: DepartmentRoomFeature): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;DepartmentRoomFeature&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmenalRoomGroupDelete82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmenalRoomGroupDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmenalRoomGroupEdit82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmenalRoomGroupEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: RoomGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;RoomGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Department629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Department</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ color2hex(color: Color): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(d: Department): int</TD></TR>
<TR><TD ALIGN="LEFT" >- distance(color1: String, color2: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveStatusType(): DepartmentStatusType</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveStatusType(controllingDepartment: Department): DepartmentStatusType</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveStatusType(cx: UserContext): DepartmentStatusType</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): TreeSet&lt;Department&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllBeingUsed(sessionId: Long): TreeSet&lt;Department&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllExternal(sessionId: Long): TreeSet&lt;Department&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllNonExternal(sessionId: Long): TreeSet&lt;Department&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDeptCode(deptCode: String, sessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDeptCode(deptCode: String, sessionId: Long, hibSession: Session): Department</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameDepartmentInSession(newSessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameDepartmentInSession(newSessionId: Long, hibSession: Session): Department</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameDepartmentInSession(newSession: Session): Department</TD></TR>
<TR><TD ALIGN="LEFT" >+ fixRoomSharingColor(otherDepartments: Collection&lt;Object&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotAssignedClasses(solution: Solution): Collection&lt;Class_&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomSharingColor(otherDepartments: Collection): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUserDepartments(user: UserContext): TreeSet&lt;Department&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hex2color(hex: String): Color</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlShortLabel(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isInstructorSchedulingCommitted(departmentId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isRoomSharingColorConflicting(color: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isRoomSharingColorConflicting(color: String, otherDepartments: Collection&lt;Object&gt;): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentDelete1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: Permission&lt;Department&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentEditChangeExternalManager1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentEditChangeExternalManager</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartmentEdit: Permission&lt;Department&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- findByExternalId(externalId: String, sessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAcademicSessionName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowEvents: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowReqDistribution: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowReqRoom: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowReqTime: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowStudentScheduling: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iDependentDepartments: ArrayList&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iDependentStatuses: ArrayList&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDependentStatusesStr: ArrayList&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeptCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistributionPrefPriority: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalFundingDept: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalManager: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalMgrAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalMgrLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalStatusTypesStr: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInheritInstructorPreferences: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastChangeStr: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomDeptsCount: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatusType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatusTypeCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreaCount: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimetableManagerCount: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ allowReq(msg: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(d: DepartmentInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveStatusType(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentInterface1351995911[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDeptAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeptCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeptId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeptName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(dept: DepartmentInterface): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentInterface1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAddAttribute: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSeeAttributes: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanEditRoomSharing: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEvent: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternal: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreference: PreferenceInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentPropertiesBackend1360869250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentPropertiesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: DepartmentPropertiesRequest, context: SessionContext): DepartmentPropertiesInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllDependentDepartments(context: SessionContext): HashMap&lt;Long, String&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentPropertiesInterface1398617296[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentPropertiesInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicSessionName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeExtManager: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanDelete: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEdit: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanExportPdf: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoursesFundingDepartmentsEnabled: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExtDepartments: HashMap&lt;Long, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatuses: HashMap&lt;String, String&gt; [0..*]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentPropertiesRequest1398617296[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentPropertiesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDepartmentId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentRoomFeatureAdd82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentRoomFeatureAdd</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentRoomFeatureDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentRoomFeatureDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentRoomGroupAdd82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentRoomGroupAdd</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentStatusType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentStatusType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ apply(apply: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ applyDepartment(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ applyExamStatus(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ applySession(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ can(operation: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ can(status: Status): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canAudit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canCommit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canExamEdit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canExamTimetable(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canExamView(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canLockOfferings(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canManagerEdit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canManagerLimitedEdit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canManagerView(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canNoRoleReport(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canNoRoleReportClass(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canNoRoleReportExam(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canNoRoleReportExamFinal(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canNoRoleReportExamMidterm(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canOnlineSectionStudents(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canOwnerEdit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canOwnerLimitedEdit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canOwnerView(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canPreRegisterStudents(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canSectionAssistStudents(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canTimetable(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(): TreeSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(apply: int): TreeSet&lt;DepartmentStatusType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllForDepartment(): TreeSet&lt;DepartmentStatusType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllForSession(includeTestSessions: boolean): TreeSet&lt;DepartmentStatusType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findById(uid: Integer): DepartmentStatusType</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByRef(ref: String): DepartmentStatusType</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentStatusTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentStatusTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentalInstructor629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentalInstructor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canLookupInstructor(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ existInst(puid: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllExamInstructors(sessionId: Long, examTypeId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPuidDepartmentId(puid: String, deptId: Long): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByPuidDepartmentId(puid: String, deptId: Long, hibSession: Session): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ findInstructorsForDepartment(departmentId: Long): List&lt;DepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findInstructorsForSession(sessionId: Long): List&lt;DepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findThisInstructorInSession(sessionId: Long): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ findThisInstructorInSession(sessionId: Long, hibSession: Session): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllForInstructor(di: DepartmentalInstructor, sessionId: Long): List&lt;DepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllForInstructor(di: DepartmentalInstructor): List&lt;DepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttributes(type: InstructorAttributeType): Set&lt;InstructorAttribute&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExams(examType: Integer): List&lt;Exam&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExams(examType: ExamType): List&lt;Exam&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(instructorNameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNextDepartmentalInstructor(context: SessionContext, right: Right): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreviousDepartmentalInstructor(context: SessionContext, right: Right): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUnavailableBitSet(targetDow: int): BitSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUnavailableDaysText(separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUnavailablePatternHtml(editable: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUnavailablePatternHtml(editable: boolean, includeScript: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUserInstructors(user: UserContext): List&lt;DepartmentalInstructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isUnavailable(day: int, month: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ listUnavailableDays(): List&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ listUnavailableTimes(): List&lt;TimeLocation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lookupInstructor(externalId: String): UserInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ nameFirstLast(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ nameFirstNameFirst(): String</TD></TR>
<TR><TD ALIGN="LEFT" >- nameInitLast(): String</TD></TR>
<TR><TD ALIGN="LEFT" >- nameLastFirst(): String</TD></TR>
<TR><TD ALIGN="LEFT" >- nameLastFirstMiddle(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ nameLastNameFirst(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ nameShort(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ prefsOfTypeForDepartment(type: Class, dept: Department): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeClassInstructor(classInstr: ClassInstructor)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentalInstructorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentalInstructorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DepartmentsDataResponse1398617296[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DepartmentsDataResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanAdd: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanExportPdf: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: List&lt;DepartmentInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFundingDeptEnabled: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDepartment(department: DepartmentInterface)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DeptBalancingGroup1021861793[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeptBalancingGroup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourses: HashSet[][] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeptId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeptName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: int[][] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUsage: int[][] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getClasses(slot: int, day: int): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClasses(slot: int): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExcess(slot: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLimit(slot: int, day: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLimit(slot: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUsage(slot: int, day: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUsage(slot: int): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionInfo1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iInfo: GroupConstraintInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOther: List&lt;ClassAssignmentDetails&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addClass(other: ClassAssignmentDetails)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionObject629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionObject</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceText(includeSuffix: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceText(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionObjectDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionObjectDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionPref629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionPref</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ appliesTo(schedulingSubpart: SchedulingSubpart): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ appliesTo(aClass: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ appliesTo(group: PreferenceGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByIdRolledForwardFrom(uidRolledForwardFrom: Long, sessionId: Long): DistributionPref</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorPreferences(sessionId: Long, ownerId: Long, subjectAreaId: Long, courseNbr: String): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferences(sessionId: Long, ownerId: Long, useControllingCourseOfferingManager: boolean, uniqueId: Long): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferences(sessionId: Long, ownerId: Long, useControllingCourseOfferingManager: boolean, uniqueId: Long, subjectAreaId: Long, courseNbr: String): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSame(other: Preference): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ permutations(items: List&lt;E&gt;, counts: List&lt;Integer&gt;): Enumeration&lt;List&lt;E&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceHtml(nameFormat: String, highlightClassPrefs: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceText(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceText(includeDistrObjects: boolean, abbv: boolean, objQuotationLeft: String, objSeparator: String, objQuotationRight: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ weakenHardPreferences(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionPreferenceAdd317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionPreferenceAdd</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionPreferenceClass317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionPreferenceClass</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionPreferenceDelete317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionPreferenceDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionClassEdit: Permission&lt;Class_&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSchedulingSubpartEdit: Permission&lt;SchedulingSubpart&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: DistributionPref): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;DistributionPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionPreferenceDetail317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionPreferenceDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionClassDetail: Permission&lt;Class_&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSchedulingSubpartDetail: Permission&lt;SchedulingSubpart&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: DistributionPref): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;DistributionPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionPreferenceEdit317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionPreferenceEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionClassEdit: Permission&lt;Class_&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSchedulingSubpartEdit: Permission&lt;SchedulingSubpart&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: DistributionPref): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;DistributionPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionPreferenceExam1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionPreferenceExam</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionPreferenceSubpart317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionPreferenceSubpart</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionPreferences317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionPreferences</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(instructorPrefOnly: boolean, examPref: boolean, visible: Boolean): Set&lt;DistributionType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findApplicable(context: SessionContext, instructorPrefOnly: boolean, examPref: boolean, current: DistributionType): Set&lt;DistributionType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findApplicable(dept: Department, instructorPrefOnly: boolean, examPref: boolean): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDepartments(sessionId: Long): Set&lt;Department&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAllowed(pref: PreferenceLevel): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isApplicable(dept: Department): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DistributionTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DistributionTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DummyContainer1876261413[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DummyContainer&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iClazz: Class&lt;T&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createProxy(address: Address, user: String): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ createRemoteSolver(user: String, config: DataProperties, caller: Address): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSolver(user: String, config: DataProperties): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispatch(address: Address, user: String, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMemUsage(user: String): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(user: String): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSolver(user: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ invoke(method: String, user: String, types: Class[], args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolver(user: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DummyCourseDetailsProvider2037228697[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DummyCourseDetailsProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getDetails(session: AcademicSessionInfo, subject: String, courseNbr: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DummySolverServer398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DummySolverServer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iChannel: JChannel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseSolverContainer: DummyContainer&lt;SolverProxy&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseSolverContainerWrapper: SolverContainerWrapper&lt;SolverProxy&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamSolverContainer: DummyContainer&lt;ExamSolverProxy&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamSolverContainerWrapper: SolverContainerWrapper&lt;ExamSolverProxy&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorSchedulingContainer: DummyContainer&lt;InstructorSchedulingProxy&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOnlineStudentSchedulingContainer: DummyContainer&lt;OnlineSectioningServer&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOnlineStudentSchedulingContainerWrapper: SolverContainerWrapper&lt;OnlineSectioningServer&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iProperties: Properties [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomAvailabilityDispatcher: RpcDispatcher [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentSolverContainer: DummyContainer&lt;StudentSolverProxy&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentSolverContainerWrapper: SolverContainerWrapper&lt;StudentSolverProxy&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ crateServerProxy(address: Address): SolverServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getServers(onlyAvailable: boolean): List&lt;SolverServer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getState(output: OutputStream)</TD></TR>
<TR><TD ALIGN="LEFT" >+ receive(msg: Message)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shutdown()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolver(type: SolverType, id: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DummyTimeBlock1833438055[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DummyTimeBlock</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iD1: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iD2: Date [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ overlaps(block: TimeBlock): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DurationTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DurationTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: ClassDurationType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: ClassDurationType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EditCourseOffering317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EditCourseOffering</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: CourseOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;CourseOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EditCourseOfferingCoordinators317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EditCourseOfferingCoordinators</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: CourseOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;CourseOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EditCourseOfferingNote317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EditCourseOfferingNote</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: CourseOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;CourseOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EditExamination1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EditExamination</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationStatus: PermissionExamination [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Exam): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Exam&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EditInstructor2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EditInstructor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: DepartmentalInstructor): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;DepartmentalInstructor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EditRoomDepartments82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EditRoomDepartments</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EditRoomDepartmentsExams82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EditRoomDepartmentsExams</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EncodeQueryRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EncodeQueryRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iHash: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ encode(query: String): EncodeQueryRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ encode(query: String, hash: boolean): EncodeQueryRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EncodeQueryRpcResponse4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EncodeQueryRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iHash: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EnrollStudent91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EnrollStudent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignment: List&lt;ClassAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCheckWaitLists: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: CourseRequestInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): ClassAssignmentInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): EnrollStudent</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLimit(enrollment: Enrollment, sections: Map&lt;Long, XSection&gt;): int</TD></TR>
<TR><TD ALIGN="LEFT" ># isCritical(courses: List&lt;XCourseId&gt;, critical: CriticalCourses): int</TD></TR>
<TR><TD ALIGN="LEFT" ># isCritical(course: ClassAssignment, critical: CriticalCourses): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateSpace(server: OnlineSectioningServer, newEnrollment: Enrollment, oldEnrollment: Enrollment, offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateSpace(server: OnlineSectioningServer, newEnrollment: Enrollment, oldEnrollment: Enrollment, newOffering: XOffering, oldOffering: XOffering)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Enrollment779165909[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Enrollment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAlternative: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iApprovedBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iApprovedDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConflicts: List&lt;Conflict&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourse: CourseAssignment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCritical: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrolledDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollmentMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNoSub: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPriority: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestedDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReservation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: Student [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitList: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListReplacement: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListedDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListedPosition: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addConflict(conflict: Conflict)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addEnrollmentMessage(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClasses(subpart: String, delim: String, showClassNumbers: boolean): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EnrollmentsConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EnrollmentsConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># convert(enrollments: Collection&lt;StudentClassEnrollment&gt;): List&lt;ClassEnrollmentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Entity1499974154[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Entity</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParams: HashMap&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(e: Entity): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(property: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ incCount()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Entity535535422[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Entity</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   bitField0_: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   externalId_: Object [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   memoizedIsInitialized: byte [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name_: Object [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   parameter_: List&lt;Property&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type_: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   uniqueId_: long [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getParameter(index: int): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameterOrBuilder(index: int): PropertyOrBuilder</TD></TR>
<TR><TD ALIGN="LEFT" ># internalGetFieldAccessorTable(): FieldAccessorTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ newBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ newBuilder(prototype: Entity): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ newBuilderForType(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" ># newBuilderForType(parent: BuilderParent): Builder</TD></TR>
<TR><TD ALIGN="LEFT" ># newInstance(unused: UnusedPrivateParameter): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseDelimitedFrom(input: InputStream): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseDelimitedFrom(input: InputStream, extensionRegistry: ExtensionRegistryLite): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: ByteBuffer): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: ByteBuffer, extensionRegistry: ExtensionRegistryLite): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: ByteString): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: ByteString, extensionRegistry: ExtensionRegistryLite): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: byte[]): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: byte[], extensionRegistry: ExtensionRegistryLite): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(input: InputStream): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(input: InputStream, extensionRegistry: ExtensionRegistryLite): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(input: CodedInputStream): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(input: CodedInputStream, extensionRegistry: ExtensionRegistryLite): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ parser(): Parser&lt;Entity&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ toBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeTo(output: CodedOutputStream)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ErrorMessage779165909[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ErrorMessage</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourse: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSection: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(other: ErrorMessage): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Event629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Event</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(e: Event): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFromEvents(hibSession: Session, ownerType: Integer, ownerId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFromEvents(hibSession: Session, clazz: Class_)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFromEvents(hibSession: Session, config: InstrOfferingConfig)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFromEvents(hibSession: Session, offering: InstructionalOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFromEvents(hibSession: Session, course: CourseOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ eventCapacityDisplayString(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findStudentConflicts(meetingDate: Date, startSlot: int, endSlot: int, studentIds: Set&lt;Long&gt;): Hashtable&lt;Event, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMultiMeetings(meetings: Collection): TreeSet&lt;MultiMeeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventAction2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventAction&lt;T extends EventRpcRequest&lt;R&gt;, R extends GwtRpcResponse&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># checkPermission(request: T, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: T, context: SessionContext): R</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: T, context: EventContext): R</TD></TR>
<TR><TD ALIGN="LEFT" ># time2string(slot: int, offset: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventAdd531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventAdd</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicTitleRow: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAdditionalLookup: Lookup [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAdditionalLookupButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iContactRow: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iContacts: UniTimeTable&lt;ContactInterface&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourses: CourseRelatedObjectsTable [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoursesForm: SimpleForm [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmailConfirmationFooter: CheckBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmailConfirmationHeader: CheckBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmails: TextArea [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollmentHeader: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollmentRow: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollments: EnrollmentTable [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEvent: EventInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventAddMeetings: AddMeetingsDialog [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventModifyMeetings: AddMeetingsDialog [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventType: UniTimeWidget&lt;ListBox&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExpirationDate: SingleDateSelector [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFileUpload: UniTimeFileUpload [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFooter: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iForm: SimpleForm [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHeader: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastMeetings: List&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastRelatedObjects: List&lt;RelatedObjectInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastScrollLeft: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastScrollTop: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: NumberBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLookup: Lookup [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLookupButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainContact: FlowForm [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainContactChanged: CheckBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainContactChangedRow: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainContactResetButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainEmail: UniTimeWidget&lt;TextBox&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainFName: TextBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainLName: UniTimeWidget&lt;TextBox&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainMName: TextBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainPhone: TextBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainTitle: TextBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetings: EventMeetingTable [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetingsHeader: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: UniTimeWidget&lt;TextBox&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: TextArea [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOriginalContact: ContactInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProperties: EventPropertiesProvider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReqAttendance: CheckBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestedServicesPanel: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestedServicesRow: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSavedEvent: EventInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelection: List&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionSelectionBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionRow: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowDeleted: CheckBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSponsors: ListBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStandardNotes: ListBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStandardNotesBox: UniTimeDialogBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStandardNotesButton: Button [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ accept(session: AcademicSession): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># addMeetings(meetings: List&lt;MeetingInterface&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkEnrollments(relatedObjects: List&lt;RelatedObjectInterface&gt;, meetings: List&lt;MeetingInterface&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkMainContactChanged()</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(source: EventMeetingTable, operation: OperationType, selection: List&lt;EventMeetingRow&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># generateConflict(m: MeetingInterface): MeetingConflictInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ hide()</TD></TR>
<TR><TD ALIGN="LEFT" ># onHide()</TD></TR>
<TR><TD ALIGN="LEFT" ># onShow()</TD></TR>
<TR><TD ALIGN="LEFT" >+ show()</TD></TR>
<TR><TD ALIGN="LEFT" >- showCreateButtonIfApplicable()</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateServicesVisibility()</TD></TR>
<TR><TD ALIGN="LEFT" >+ validate(callback: AsyncCallback&lt;Boolean&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventAddCourseRelated2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventAddCourseRelated</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventAddSpecial2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventAddSpecial</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventAddUnavailable2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventAddUnavailable</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionEventAddSpecial: Permission&lt;Session&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventContact629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventContact</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByEmail(email: String): EventContact</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalUniqueId(externalUniqueId: String): EventContact</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(nameFormat: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventContactDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventContactDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventContext1549462339[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventContext</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowEditPast: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBegin: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iContext: SessionContext [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnd: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilter: Qualifiable[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iToday: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUser: UserContext [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkPermission(right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(targetId: Serializable, targetType: String, right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(targetObject: Object, right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(targetObject: Object, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(targetObject: Object, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(targetId: Serializable, targetType: String, right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(targetObject: Object, right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttribute(name: String): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttribute(attribute: SessionAttribute): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(targetId: Serializable, targetType: String, right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(targetObject: Object, right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(targetObject: Object, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(targetObject: Object, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(targetId: Serializable, targetType: String, right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(targetObject: Object, right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOutside(date: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPast(date: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPastOrOutside(date: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAttribute(name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAttribute(attribute: SessionAttribute)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDate2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDate</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Date&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDateMapping629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDateMapping</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(m: EventDateMapping): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List&lt;EventDateMapping&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMapping(sessionId: Long): Class2EventDateMap</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasMapping(sessionId: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDateMappingDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDateMappingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDateMappingEdit1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDateMappingEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: Permission&lt;Session&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDateMappings1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDateMappings</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionEventDateMappingEdit: Permission&lt;Session&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSession: Permission&lt;Session&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDateMappings1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDateMappings</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(mapping: EventDateMapping, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(mapping: EventDateMapping, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDefaults1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDefaults</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDetail2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionClassDetail: Permission&lt;Class_&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionExaminationDetail: Permission&lt;Exam&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Event): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Event&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDetail531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApproveDialog: ApproveDialog [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iContacts: UniTimeTable&lt;ContactInterface&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollmentHeader: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollments: EnrollmentTable [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEvent: EventInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFooter: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iForm: SimpleForm [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHeader: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastScrollLeft: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastScrollTop: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetings: EventMeetingTable [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: UniTimeTable&lt;NoteInterface&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwners: UniTimeTable&lt;RelatedObjectInterface&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProperties: EventPropertiesProvider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowDeleted: CheckBox [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># edit()</TD></TR>
<TR><TD ALIGN="LEFT" ># getNext(eventId: Long): EventInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># getPrevious(eventId: Long): EventInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ hide()</TD></TR>
<TR><TD ALIGN="LEFT" ># next(event: EventInterface)</TD></TR>
<TR><TD ALIGN="LEFT" ># onApprovalOrReject(eventId: Long, event: EventInterface)</TD></TR>
<TR><TD ALIGN="LEFT" ># onHide()</TD></TR>
<TR><TD ALIGN="LEFT" ># onShow()</TD></TR>
<TR><TD ALIGN="LEFT" ># previous(previous: EventInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ show()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDetailArrangeHourClass2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDetailArrangeHourClass</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionClassDetail: Permission&lt;Class_&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionExaminationDetail: Permission&lt;Exam&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Class_&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDetailBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDetailBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: EventDetailRpcRequest, context: EventContext): EventInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getArrangeHoursClassDetail(clazz: Class_, context: EventContext): EventInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEventDetail(session: Session, e: Event, context: EventContext): EventInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDetailEmailStudents2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDetailEmailStudents</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventDetailRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventDetailRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEventId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ requestEventDetails(sessionId: Long, eventId: Long): EventDetailRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventEdit2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionEventDate: Permission&lt;Date&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventEditClass: Permission&lt;ClassEvent&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventEditExam: Permission&lt;ExamEvent&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Event): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Event&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventEditClass2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventEditClass</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: ClassEvent): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;ClassEvent&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventEditExam2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventEditExam</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: ExamEvent): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;ExamEvent&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventEnrollmentExport330191797[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventEnrollmentExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># createPrinter(helper: ExportHelper): Printer</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># export(enrollments: List&lt;Enrollment&gt;, helper: ExportHelper, suffix: boolean, sort: int, sortBySubpart: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventEnrollmentsBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventEnrollmentsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ computeConflicts(conflicts: Map&lt;Long, List&lt;Meeting&gt;&gt;, meeting: MeetingInterface, relatedObject: RelatedObjectInterface, eventId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- computeConflicts(event: ClassEvent): Map&lt;Long, List&lt;Meeting&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- computeConflicts(event: ExamEvent): Map&lt;Long, List&lt;Meeting&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- computeConflicts(event: CourseEvent): Map&lt;Long, List&lt;Meeting&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ convert(enrollments: Collection&lt;StudentClassEnrollment&gt;, conflicts: Map&lt;Long, List&lt;Meeting&gt;&gt;, canShowExtId: boolean, canRegister: boolean, canUseAssistant: boolean): GwtRpcResponseList&lt;Enrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: EventEnrollmentsRpcRequest, context: EventContext): GwtRpcResponseList&lt;Enrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentClassEnrollments(relatedObject: RelatedObjectInterface): Collection&lt;StudentClassEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- where(type: int, idx: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventEnrollmentsRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventEnrollmentsRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEventId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetings: List&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRelatedObjects: List&lt;RelatedObjectInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addMeeting(meeting: MeetingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRelatedObject(relatedObject: RelatedObjectInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEnrollmentsForEvent(eventId: Long, sessionId: Long): EventEnrollmentsRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEnrollmentsForRelatedObjects(objects: List&lt;RelatedObjectInterface&gt;, meetings: List&lt;MeetingInterface&gt;, eventId: Long, sessionId: Long): EventEnrollmentsRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventFilterRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventFilterRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   academicInitiative: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLookup: ExternalUidLookup [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- elementAdditionalEventContacts(element: Element, event: Event)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementCourse(courseElement: Element, courseEvent: CourseEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementCourseRelatedEvent(specialEventElement: Element): Event</TD></TR>
<TR><TD ALIGN="LEFT" >- elementEventContact(eventContactElement: Element): EventContact</TD></TR>
<TR><TD ALIGN="LEFT" >- elementMeeting(meetingElement: Element, event: Event)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementMeetings(element: Element, event: Event)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementNote(noteElement: Element, event: Event)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementNotes(element: Element, event: Event)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementRelatedCourses(element: Element, event: CourseEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementSpecialEvent(specialEventElement: Element): Event</TD></TR>
<TR><TD ALIGN="LEFT" >- elementSponsoringOrganization(sponsoringOrgElement: Element, event: Event)</TD></TR>
<TR><TD ALIGN="LEFT" >- findClassFromExternalId(externalId: String, year: String, term: String, academicInitiative: String): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >- findCourseOfferingFromExternalId(externalId: String, year: String, term: String, academicInitiative: String): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- findDefaultSession(academicInitiative: String, aDate: Date): Session</TD></TR>
<TR><TD ALIGN="LEFT" >- findInstructionalOfferingFromExternalId(externalId: String, year: String, term: String, academicInitiative: String): InstructionalOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- findLocation(name: String): NonUniversityLocation</TD></TR>
<TR><TD ALIGN="LEFT" >- findMeetingLocationPermId(buildingAbbv: String, roomNumber: String, location: String): Long</TD></TR>
<TR><TD ALIGN="LEFT" >- findRoom(buildingAbbv: String, roomNumber: String): Room</TD></TR>
<TR><TD ALIGN="LEFT" >- findSponsoringOrg(name: String): SponsoringOrganization</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(rootElement: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAdditionalContacts: List&lt;ContactInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEdit: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanView: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConflicts: Set&lt;EventInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iContact: ContactInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoordinators: Set&lt;ContactInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNames: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseTitles: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventType: EventType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExpirationDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalIds: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstruction: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionType: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: Set&lt;ContactInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastChange: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetings: TreeSet&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: TreeSet&lt;NoteInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRelatedObjects: List&lt;RelatedObjectInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReqAttendance: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestedServices: Set&lt;EventServiceProviderInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectionNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSequence: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSponsor: SponsoringOrganizationInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeStamp: Date [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAdditionalContact(contact: ContactInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addConflict(conflict: EventInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCoordinator(coordinator: ContactInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseId(id: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseName(name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseTitle(title: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addExternalId(externalId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructor(instructor: ContactInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMeeting(meeting: MeetingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addNote(note: NoteInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRelatedObject(relatedObject: RelatedObjectInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRequestedService(service: EventServiceProviderInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(event: EventInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ createConflictingEvent(event: EventInterface): EventInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAdditionalContactNames(separator: String, messages: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCoordinatorEmails(separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCoordinatorNames(separator: String, messages: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseId(index: int): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEventNote(linebreak: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorEmails(separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorNames(separator: String, messages: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMultiMeetings(meetings: Collection&lt;MeetingInterface&gt;, checkPast: boolean, checkMeetingContacts: boolean): TreeSet&lt;MultiMeetingInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMultiMeetings(meetings: Collection&lt;MeetingInterface&gt;, checkPast: boolean, flags: DateFlagsProvider, type: EventType, checkMeetingContacts: boolean): TreeSet&lt;MultiMeetingInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestedServices(separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasMeetingsOfStatus(status: ApprovalStatus): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRequestedService(id: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ inConflict(meeting: MeetingInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ inConflict(event: EventInterface): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventLocation2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventLocation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventLocationApprove2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventLocationApprove</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventLocation: Permission&lt;Location&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventLocationOverbook2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventLocationOverbook</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventLocation: Permission&lt;Location&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventLocationUnavailable2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventLocationUnavailable</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventLocation: Permission&lt;Location&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventLookupBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventLookupBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: EventLookupRpcRequest, context: EventContext): GwtRpcResponseList&lt;EventInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findEvents(request: EventLookupRpcRequest, context: EventContext): GwtRpcResponseList&lt;EventInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateUnavailabilityEvent(location: Location, parent: EventInterface): EventInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateUnavailabilityMeetings(location: Location, conflict: boolean): TreeSet&lt;MeetingInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- hasChild(restrictions: Set&lt;Long&gt;, clazz: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- hasClassRestriction(restrictions: Set&lt;Long&gt;, clazz: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- hasClassRestrictionChild(restrictions: Set&lt;Long&gt;, subpart: SchedulingSubpart): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hide(restrictions: Set&lt;Long&gt;[], clazz: Class_): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventLookupRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventLookupRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEventFilter: EventFilterRpcRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceType: ResourceType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomFilter: RoomFilterRpcRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findEvents(sessionId: Long, resource: ResourceInterface, eventFilter: EventFilterRpcRequest, roomFilter: RoomFilterRpcRequest, limit: int): EventLookupRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventMeetingApprove2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventMeetingApprove</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionEventLocationApprove: Permission&lt;Location&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Meeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventMeetingCancel2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventMeetingCancel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionEventDate: Permission&lt;Date&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventLocationApprove: Permission&lt;Location&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Meeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventMeetingCancelClass2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventMeetingCancelClass</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventDate: Permission&lt;Date&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Meeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventMeetingCancelExam2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventMeetingCancelExam</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionEventDate: Permission&lt;Date&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Meeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventMeetingDelete2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventMeetingDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionEventDate: Permission&lt;Date&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventLocation: Permission&lt;Location&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Meeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventMeetingEdit2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventMeetingEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionEventDate: Permission&lt;Date&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventEdit: Permission&lt;Event&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventLocation: Permission&lt;Location&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Meeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventMeetingInquire2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventMeetingInquire</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionEventLocation: Permission&lt;Location&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Meeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventMeetingInquireClass2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventMeetingInquireClass</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionEventDate: Permission&lt;Date&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Meeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventMeetingInquireExam2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventMeetingInquireExam</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionEventDate: Permission&lt;Date&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Meeting&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventNoteDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventNoteDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventPermission2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventPermission&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># begin(session: Session): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># end(session: Session): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># isOutside(date: Date, session: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># isPast(date: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># locations(sessionId: Long, user: UserContext): List&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># locations(session: Session, user: UserContext): List&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># today(): Date</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventPropertiesRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventPropertiesRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPageName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ requestEventProperties(sessionId: Long, pageName: String): EventPropertiesRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventPropertiesRpcResponse4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventPropertiesRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanAddCourseEvent: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAddEvent: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAddUnavailableEvent: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEditAcademicTitle: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEmailStudents: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanExportCSV: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanLookupAdditionalContacts: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanLookupMainContact: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanLookupPeople: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSaveFilterDefaults: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSetExpirationDate: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseEventDefaultStudentAttendance: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditMeetingContacts: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmailConfirmation: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventServiceProviders: Set&lt;EventServiceProviderInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExpectedAttendanceRequired: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilterDefaults: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstDayOfWeek: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGridDisplayTitle: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMainContact: ContactInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSponsoringOrganizations: List&lt;SponsoringOrganizationInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStandardNotes: Set&lt;StandardEventNoteInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTooEarlySlot: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iViewMeetingContacts: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addEventServiceProvider(provider: EventServiceProviderInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSponsoringOrganization(sponsor: SponsoringOrganizationInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStandardNote(note: StandardEventNoteInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFilterDefault(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasFilterDefault(name: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventRelatedImports876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventRelatedImports</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   changeList: Vector&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   dateFormat: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   missingLocations: TreeSet&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   notes: Vector&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   session: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   timeFormat: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   trimLeadingZerosFromExternalId: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># addMissingLocation(location: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># addNote(note: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># clearNotes()</TD></TR>
<TR><TD ALIGN="LEFT" ># findNonUniversityLocationsWithIdOrName(id: String, name: String): List</TD></TR>
<TR><TD ALIGN="LEFT" ># findNonUniversityLocationsWithName(name: String): List</TD></TR>
<TR><TD ALIGN="LEFT" ># findSession(academicInitiative: String, academicYear: String, academicTerm: String): Session</TD></TR>
<TR><TD ALIGN="LEFT" ># mailLoadResults()</TD></TR>
<TR><TD ALIGN="LEFT" ># reportMissingLocations()</TD></TR>
<TR><TD ALIGN="LEFT" ># updateChangeList(changed: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventResourceTimetable531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventResourceTimetable</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApproveDialog: ApproveDialog [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBack: List&lt;EventInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iData: List&lt;EventInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDockPanel: DockPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventAdd: EventAdd [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventDetail: EventDetail [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEvents: EventFilterBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilter: SimpleForm [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilterHeader: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFooter: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGridOrTablePanel: SimplePanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHeader: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHistoryToken: HistoryToken [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInitialized: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocDate: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocRoom: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLookup: Lookup [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMatchingRooms: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMatchingWeeks: Set&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetingClickHandler: MeetingClickHandler [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPanel: SimpleForm [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProperties: EventPropertiesRpcResponse [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResource: ResourceInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceTypes: ListBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResources: SuggestBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourcesRow: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomPanel: RoomSelector [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: RoomFilterBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRootPanel: SimplePanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionSelectionBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionMonths: List&lt;SessionMonth&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionRow: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTabBar: AriaTabBar [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTable: EventMeetingTable [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTablePanel: ScrollPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeGrid: TimeGrid [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: PageType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWeekPanel: WeekSelector [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ accept(session: AcademicSession): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># changeUrl()</TD></TR>
<TR><TD ALIGN="LEFT" ># copyToClipboard(format: String, personal: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># export(format: String, includeRoomWeekFilter: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ filter(event: EventInterface, meeting: MeetingInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ filterEvent(event: EventInterface, meeting: MeetingInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDateFlag(type: EventType, date: Date): Flag</TD></TR>
<TR><TD ALIGN="LEFT" >- gridMode(): Mode</TD></TR>
<TR><TD ALIGN="LEFT" >- hideResults()</TD></TR>
<TR><TD ALIGN="LEFT" >+ isTooEarly(startSlot: int, endSlot: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- loadProperties(callback: AsyncCallback&lt;EventPropertiesRpcResponse&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >- name(tab: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >- nativeCopyToClipboard(e: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- populate(result: GwtRpcResponseList&lt;EventInterface&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># query(extra: String, includeRoomWeekFilter: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >- resourceChanged(resource: ResourceInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >- resourceTypeChanged(loadData: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- showResults()</TD></TR>
<TR><TD ALIGN="LEFT" >- sortedEvents(): Collection&lt;EventInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- tabOrDataChanged(keepSelection: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- tinker(data: GwtRpcResponseList&lt;EventInterface&gt;, oldEventId: Long, newEvent: EventInterface): GwtRpcResponseList&lt;EventInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventRoomAvailability531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventRoomAvailability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iData: List&lt;EventInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDates: SessionDatesSelector [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventAdd: EventAdd [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventDetail: EventDetail [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilter: SimpleForm [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilterHeader: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFooter: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHeader: UniTimeHeaderPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHistoryToken: HistoryToken [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInitialized: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetingClickHandler: MeetingClickHandler [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPanel: SimpleForm [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProperties: EventPropertiesRpcResponse [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: RoomFilterBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRootPanel: SimplePanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedDates: List&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedRooms: List&lt;ResourceInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedTimes: StartEndTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionSelectionBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionMonths: List&lt;SessionMonth&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionRow: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTables: VerticalPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimes: StartEndTimeSelector [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ accept(session: AcademicSession): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># changeUrl()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDateFlag(type: EventType, date: Date): Flag</TD></TR>
<TR><TD ALIGN="LEFT" >- getOccupancy(room: ResourceInterface): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >- getSortRoomsComparator(sortBy: SortRoomsBy, preferSize: boolean): Comparator&lt;ResourceInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- hideResults()</TD></TR>
<TR><TD ALIGN="LEFT" >- inverse(cmp: Comparator&lt;ResourceInterface&gt;): Comparator&lt;ResourceInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isTooEarly(startSlot: int, endSlot: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- loadProperties(callback: AsyncCallback&lt;EventPropertiesRpcResponse&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >- populate(result: List&lt;EventInterface&gt;, sortBy: Integer)</TD></TR>
<TR><TD ALIGN="LEFT" >- reload(loadData: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- showResults()</TD></TR>
<TR><TD ALIGN="LEFT" >- sortedEvents(): Collection&lt;EventInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- tinker(data: GwtRpcResponseList&lt;EventInterface&gt;, oldEventId: Long, newEvent: EventInterface): GwtRpcResponseList&lt;EventInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventRoomAvailabilityRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventRoomAvailabilityRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDates: List&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEndSlot: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventType: EventType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocations: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetings: List&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartSlot: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkAvailability(startSlot: int, endSlot: int, dates: List&lt;Integer&gt;, locations: List&lt;Entity&gt;, eventId: Long, sessionId: Long): EventRoomAvailabilityRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkAvailability(meetings: List&lt;MeetingInterface&gt;, eventId: Long, eventType: EventType, sessionId: Long): EventRoomAvailabilityRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventRoomAvailabilityRpcResponse4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventRoomAvailabilityRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iMeetings: List&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverlaps: Map&lt;Integer, Map&lt;Long, Set&lt;MeetingConflictInterface&gt;&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addOverlap(date: Integer, locationId: Long, conflict: MeetingConflictInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOverlaps(date: Integer, locationId: Long): Set&lt;MeetingConflictInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAvailable(date: Integer, locationId: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventRpcRequest&lt;T extends GwtRpcResponse&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventSendStudentEmailsBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventSendStudentEmailsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SendStudentEmailsRpcRequest, context: SessionContext): GwtRpcResponseNull</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventServiceProvider629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventServiceProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(p: EventServiceProvider): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List&lt;EventServiceProvider&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findInSession(hibSession: Session, sessionId: Long): EventServiceProvider</TD></TR>
<TR><TD ALIGN="LEFT" >+ findInSession(sessionId: Long): EventServiceProvider</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEventServiceProvider(reference: String, hibSession: Session): EventServiceProvider</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLocationIds(sessionId: Long): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getServiceProviders(user: UserContext): TreeSet&lt;EventServiceProvider&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventServiceProviderDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventServiceProviderDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventServiceProviderInterface4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventServiceProviderInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDepartmentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocationIds: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReference: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(n: EventServiceProviderInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasLocation(id: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasLocation(location: ResourceInterface): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventStatusEdit1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventStatusEdit</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventStatuses1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventStatuses</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: Permission&lt;Department&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventStatuses1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventStatuses</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" ># sameServiceProviders(location: Location, context: SessionContext, record: Record): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(location: Location, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventTimeBlock1487510725[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventTimeBlock</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEndTime: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartTime: Date [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Events2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Events</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventsConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventsConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doDelete(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPost(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ fixContact(sessionId: Long, c: ContactInterface)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventsExportEventsToCSV330191797[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventsExportEventsToCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># hideColumn(out: Printer, events: List&lt;EventInterface&gt;, flag: EventFlag)</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, request: EventLookupRpcRequest, events: List&lt;EventInterface&gt;, eventCookieFlags: int, sort: EventMeetingSortBy, asc: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># print(out: Printer, events: List&lt;EventInterface&gt;, showMeetingContacts: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventsExportEventsToICal330191797[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventsExportEventsToICal</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getResourceName(request: EventLookupRpcRequest, hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" ># guessScheduleName(helper: ExportHelper, request: EventLookupRpcRequest): String</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, request: EventLookupRpcRequest, events: List&lt;EventInterface&gt;, eventCookieFlags: int, sort: EventMeetingSortBy, asc: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ print(ical: ICalendar, event: EventInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ print(ical: ICalendar, event: EventInterface, status: Status): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventsExportEventsToJSON330191797[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventsExportEventsToJSON</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, request: EventLookupRpcRequest, events: List&lt;EventInterface&gt;, eventCookieFlags: int, sort: EventMeetingSortBy, asc: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventsExportEventsToPDF330191797[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventsExportEventsToPDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># hideColumn(out: Printer, events: List&lt;EventInterface&gt;, flag: EventFlag)</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, request: EventLookupRpcRequest, events: List&lt;EventInterface&gt;, eventCookieFlags: int, sort: EventMeetingSortBy, asc: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># print(out: Printer, events: List&lt;EventInterface&gt;, showMeetingContacts: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventsExportMeetingsToCSV330191797[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventsExportMeetingsToCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># hideColumn(out: Printer, events: List&lt;EventInterface&gt;, flag: EventFlag)</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, request: EventLookupRpcRequest, events: List&lt;EventInterface&gt;, eventCookieFlags: int, sort: EventMeetingSortBy, asc: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># print(out: Printer, meetings: Set&lt;EventMeeting&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventsExportMeetingsToPDF330191797[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventsExportMeetingsToPDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># hideColumn(out: Printer, events: List&lt;EventInterface&gt;, flag: EventFlag)</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, request: EventLookupRpcRequest, events: List&lt;EventInterface&gt;, eventCookieFlags: int, sort: EventMeetingSortBy, asc: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># print(out: Printer, meetings: Set&lt;EventMeeting&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EventsExporter330191797[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EventsExporter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(event: EventInterface): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSection(event: EventInterface): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTitle(event: EventInterface): String</TD></TR>
<TR><TD ALIGN="LEFT" ># hideColumn(out: Printer, events: List&lt;EventInterface&gt;, flag: EventFlag)</TD></TR>
<TR><TD ALIGN="LEFT" ># hideColumns(out: Printer, events: List&lt;EventInterface&gt;, eventCookieFlags: int)</TD></TR>
<TR><TD ALIGN="LEFT" ># meetings(events: List&lt;EventInterface&gt;, sort: EventMeetingSortBy, asc: boolean): Set&lt;EventMeeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, request: EventLookupRpcRequest, events: List&lt;EventInterface&gt;, eventCookieFlags: int, sort: EventMeetingSortBy, asc: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># sort(events: List&lt;EventInterface&gt;, sort: EventMeetingSortBy, asc: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExactTimeMins629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExactTimeMins</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByMinPerMtg(minPerMtg: int): ExactTimeMins</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBreakTime(minPerMtg: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBreakTime(dayCode: int, minPerWeek: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNrSlotsPerMtg(minPerMtg: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNrSlotsPerMtg(dayCode: int, minPerWeek: int): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExactTimeMinsDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExactTimeMinsDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Exam629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Exam</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEvent: ExamEvent [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assign(assignment: ExamAssignmentInfo, managerExternalId: String, hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ canView(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(exam: Exam): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ countStudents(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteDependentObjects(hibSession: Session, updateExam: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFromExams(hibSession: Session, ownerType: Integer, ownerId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFromExams(hibSession: Session, clazz: Class_)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFromExams(hibSession: Session, config: InstrOfferingConfig)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFromExams(hibSession: Session, offering: InstructionalOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteFromExams(hibSession: Session, course: CourseOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectivePreferences(type: Class): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveStatusType(): DepartmentStatusType</TD></TR>
<TR><TD ALIGN="LEFT" >+ examOffset(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long, examType: ExamType): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long, examTypeId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(ownerType: int, ownerId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllFinal(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllMidterm(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllRelated(type: String, id: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAssignedExams(sessionId: Long, examTypeId: Long): Collection&lt;ExamAssignmentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAssignedExams(sessionId: Long, subjectAreaId: Long, examTypeId: Long): Collection&lt;ExamAssignmentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAssignedExamsOfInstructor(instructorId: Long, examTypeId: Long): Collection&lt;ExamAssignmentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAssignedExamsOfLocation(locationId: Long, examTypeId: Long): Collection&lt;ExamAssignmentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByIdRolledForwardFrom(sessionId: Long, uniqueIdRolledForwardFrom: Long): Exam</TD></TR>
<TR><TD ALIGN="LEFT" >+ findExamsOfCourse(subjectAreaId: Long, courseNbr: String, examTypeId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findExamsOfCourseOffering(courseOfferingId: Long, examTypeId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findExamsOfSubjectArea(subjectAreaId: Long, examTypeId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findExamsOfSubjectAreaIncludeCrossLists(subjectAreaId: Long, examTypeId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findUnassignedExams(sessionId: Long, examTypeId: Long): Collection&lt;ExamInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findUnassignedExams(sessionId: Long, subjectAreaId: Long, examTypeId: Long): Collection&lt;ExamInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ firstCourseOffering(): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ firstDepartment(): Department</TD></TR>
<TR><TD ALIGN="LEFT" >+ firstOwner(): ExamOwner</TD></TR>
<TR><TD ALIGN="LEFT" >+ firstSubjectArea(): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateDefaultPreferences(override: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateEvent(event: ExamEvent, createNoRoomMeetings: boolean): ExamEvent</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateName(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndTime(period: ExamPeriod): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># getInstructors(hibSession: Session, instructorIds: Collection): HashSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOverlappingStudentMeetings(periodId: Long): Hashtable&lt;Meeting, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSeatingTypeLabel(seatingType: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartTime(period: ExamPeriod): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># getStudents(hibSession: Session, studentIds: Collection): HashSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasExamsOfType(sessionId: Long, type: ExamType): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasFinalExams(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasMidtermExams(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasTimetable(sessionId: Long, examType: Integer): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasTimetable(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ unassign(managerExternalId: String, hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateConflicts(hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamAssignment70241488[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamAssignment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iDistPref: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExam: ExamInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNrBackToBackConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNrDirectConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNrDistanceBackToBackConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNrInstructorBackToBackConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNrInstructorDirectConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNrInstructorDistanceBackToBackConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNrInstructorMoreThanTwoADayConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNrMoreThanTwoADayConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPeriod: ExamPeriod [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPeriodId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPeriodIdx: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPeriodPenalty: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPeriodPref: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomPenalty: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomSizePenalty: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomSplitPenalty: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRooms: TreeSet&lt;ExamRoomInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRotationPenalty: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iValue: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   s2Z: Format&lt;Number&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sDateFormat: Format&lt;Date&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assignmentEquals(other: ExamAssignment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(info: ExamInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDate(pref: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPeriod(hibSession: Session): ExamPeriod</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomPref(locationId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomsCapacity(pref: boolean, delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomsName(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomsName(pref: boolean, delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomsNameWithHint(pref: boolean, delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomsNameWithPref(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTime(pref: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRoom(locationId: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamConflictDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamConflictDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamConflictStatisticsInfo70241488[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamConflictStatisticsInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iVariables: Hashtable [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- assignmentLeafItem(out: PrintWriter, assignment: CBSAssignment, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- combine(a: int, b: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >- constraintMenuItem(out: PrintWriter, menuId: String, constraint: CBSConstraint, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- end_item(out: PrintWriter)</TD></TR>
<TR><TD ALIGN="LEFT" >- filter(counters: Collection, limit: double): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCBS(classId: Long): CBSVariable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflictStatisticsSubInfo(variables: Vector): ExamConflictStatisticsInfo</TD></TR>
<TR><TD ALIGN="LEFT" >- leaf_item(out: PrintWriter, name: String, description: String, page: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(cbs: ConflictStatistics)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(cbs: ConflictStatistics, examId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- menu_item(out: PrintWriter, id: String, name: String, description: String, page: String, isCollapsed: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ merge(info: ExamConflictStatisticsInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(jsp: JspWriter, limit: double, type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(out: PrintWriter, limit: double, type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(jsp: JspWriter, limit: double[], type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(out: PrintWriter, limit: double[], type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(jsp: JspWriter, classId: Long, limit: double, type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(out: PrintWriter, classId: Long, limit: double, type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(jsp: JspWriter, classId: Long, limit: double[], type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtml(out: PrintWriter, classId: Long, limit: double[], type: int, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtmlHeader(jsp: JspWriter)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHtmlHeader(out: PrintWriter, style: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- unassignedVariableMenuItem(out: PrintWriter, menuId: String, variable: CBSVariable, clickable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- unassignmentMenuItem(out: PrintWriter, menuId: String, value: CBSValue, clickable: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamEvent629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamEvent</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamEventDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iExamId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLength: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iOwners: List&lt;ExamOwnerInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPeriod: PeriodInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPrintOffset: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoom: List&lt;RoomInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSize: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iType: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamInfo70241488[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iExam: Exam [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExamId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExamLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExamType: ExamType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExamTypeId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iInstructors: Vector&lt;ExamInstructorInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLength: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMaxRooms: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNrStudents: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPrintOffset: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSeatingType: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSections: Vector&lt;ExamSectionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSectionsIncludeCrosslistedDummies: Vector&lt;ExamSectionInfo&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(info: ExamInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ createInstructorInfo(i: DepartmentalInstructor): ExamInstructorInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSections(students: Hashtable&lt;Long, Set&lt;Long&gt;&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSectionsIncludeCrosslistedDummies(students: Hashtable&lt;Long, Hashtable&lt;Long, Set&lt;Long&gt;&gt;&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExam(hibSession: Session): Exam</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorName(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSectionName(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasInstructor(instructorId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- instructorInfo(i: DepartmentalInstructor): ExamInstructorInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOfSubjectArea(subject: SubjectArea): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamInstructorInfo653254005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamInstructorInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iExternalUniqueId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iInstructor: DepartmentalInstructor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(i: ExamInstructorInfo): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamLocationPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamLocationPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamOwner629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamOwner</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOwnerObject: Object [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(owner: ExamOwner): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeCourse(): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" ># computeOverlappingStudentMeetings(studentMeetings: Hashtable&lt;Meeting, Set&lt;Long&gt;&gt;, periodId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" ># computeStudentAssignments(studentAssignments: Hashtable&lt;Assignment, Set&lt;Long&gt;&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># computeStudentExams(studentExams: Hashtable&lt;Long, Set&lt;Exam&gt;&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ countStudents(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ countStudents(co: CourseOffering): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByOwnerIdType(ownerId: Long, ownerType: Integer): ExamOwner</TD></TR>
<TR><TD ALIGN="LEFT" >+ genName(pattern: String): String</TD></TR>
<TR><TD ALIGN="LEFT" ># genName(code: char): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSize(co: CourseOffering): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentIds(co: CourseOffering): List</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamOwnerDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamOwnerDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamOwnerInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamOwnerInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iClassExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iClassSuffix: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iConfiguration: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iConfigurationId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCourseNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCourseTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSectionNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSubjectArea: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSubpart: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iType: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamPeriod629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamPeriod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(period: ExamPeriod): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long, type: ExamType): TreeSet&lt;ExamPeriod&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long, examTypeId: Long): TreeSet&lt;ExamPeriod&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByDateStart(sessionId: Long, dateOffset: int, startSlot: int, examTypeId: Long): ExamPeriod</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByIndex(sessionId: Long, type: ExamType, idx: Integer): ExamPeriod</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOverlappingClassMeetings(): List&lt;Meeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOverlappingClassMeetings(nrTravelSlots: int): List&lt;Meeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOverlappingClassMeetings(classId: Long): List&lt;Meeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOverlappingClassMeetings(classId: Long, nrTravelSlots: int): List&lt;Meeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOverlappingCourseMeetingsWithReqAttendence(studentIds: Set&lt;Long&gt;): Hashtable&lt;Meeting, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOverlappingCourseMeetingsWithReqAttendence(studentIds: Set&lt;Long&gt;, nrTravelSlots: int): Hashtable&lt;Meeting, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOverlappingExamMeetingsOfDifferentProblem(studentIds: Set&lt;Long&gt;): Hashtable&lt;Meeting, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOverlappingExamMeetingsOfDifferentProblem(studentIds: Set&lt;Long&gt;, nrTravelSlots: int): Hashtable&lt;Meeting, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameExamPeriodInSession(session: Session): ExamPeriod</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBounds(session: Session, examTypeId: Long): Date[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBounds(sessionId: Long, examBeginDate: Date, examTypeId: Long): Date[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndTimeLabel(length: int, printOffset: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamEventStartOffsetForExam(exam: Exam): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamEventStopOffsetForExam(exam: Exam): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamEventStopSlot(exam: Exam): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartTimeLabel(printOffset: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isBackToBack(period: ExamPeriod, isDayBreakBackToBack: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ overlap(assignment: Assignment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ overlap(assignment: Assignment, nrTravelSlots: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ overlap(meeting: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ overlap(meeting: Meeting, nrTravelSlots: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ overlap(x1: Exam, x2: Exam, period: ExamPeriod): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ overlap(time: TimeBlock): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ weakOverlap(meeting: Meeting): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamPeriodDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamPeriodDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamPeriodPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamPeriodPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamRoomInfo70241488[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamRoomInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCapacity: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamCapacity: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHard: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocation: Location [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreference: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iX: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iY: Double [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(room: ExamRoomInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCapacity(exam: ExamInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDistance(other: ExamRoomInfo): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLocation(hibSession: Session): Location</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNameWithHint(pref: boolean): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamSectionInfo653254005[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamSectionInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iDifferentSubjectChildren: List&lt;ExamSectionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMaster: ExamSectionInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNrStudents: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iOwner: ExamOwner [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStudentIds: Set&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDifferentSubjectChild(child: ExamSectionInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(info: ExamSectionInfo): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamSolver1348419282[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamSolver</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCbsInfo: ExamConflictStatisticsInfo [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assign(assignment: ExamAssignment): String</TD></TR>
<TR><TD ALIGN="LEFT" ># autoConfigure()</TD></TR>
<TR><TD ALIGN="LEFT" ># beforeStart()</TD></TR>
<TR><TD ALIGN="LEFT" ># createCurrentSolutionBackup(anonymize: boolean, idconv: boolean): Document</TD></TR>
<TR><TD ALIGN="LEFT" ># createModel(properties: DataProperties): ExamModel</TD></TR>
<TR><TD ALIGN="LEFT" ># disposeNoInherit(unregister: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignedExams(subjectAreaId: Long): Collection&lt;ExamAssignmentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignedExamsOfInstructor(instructorId: Long): Collection&lt;ExamAssignmentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignedExamsOfRoom(roomId: Long): Collection&lt;ExamAssignmentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(examId: long): ExamAssignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(examId: Long, periodId: Long, roomIds: Collection&lt;Long&gt;): ExamAssignmentInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfo(examId: long): ExamAssignmentInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCbsInfo(examId: Long): ExamConflictStatisticsInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getChangesToBest(subjectAreaId: Long): Collection&lt;ExamAssignmentInfo[]&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getChangesToInitial(subjectAreaId: Long): Collection&lt;ExamAssignmentInfo[]&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getDatabaseLoader(model: ExamModel, assignment: Assignment&lt;Exam, ExamPlacement&gt;): ProblemLoader&lt;Exam, ExamPlacement, ExamModel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getDatabaseSaver(solver: Solver&lt;Exam, ExamPlacement&gt;): ProblemSaver&lt;Exam, ExamPlacement, ExamModel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExam(examId: long): Exam</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamsOfRoom(locationId: long): TreeSet&lt;ExamAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInfo(examId: long): ExamInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPeriods(examId: long, change: ExamProposedChange): Collection&lt;ExamAssignmentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlacement(assignment: ExamAssignment): ExamPlacement</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRooms(examId: long, periodId: long, change: ExamProposedChange, minRoomSize: int, maxRoomSize: int, filter: String, allowConflicts: boolean): Vector&lt;ExamRoomInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSuggestions(examId: long, change: ExamProposedChange, filter: String, depth: int, limit: int, timeOut: long): ExamSuggestionsInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUnassignedExams(subjectAreaId: Long): Collection&lt;ExamInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(properties: DataProperties)</TD></TR>
<TR><TD ALIGN="LEFT" ># restureCurrentSolutionFromBackup(document: Document)</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopSolver()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopSolverImmediately()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unassign(examInfo: ExamInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(change: ExamProposedChange): ExamProposedChange</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamStatus629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamStatus</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ effectiveStatus(): DepartmentStatusType</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List&lt;ExamStatus&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(hibSession: Session, sessionId: Long): List&lt;ExamStatus&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findStatus(sessionId: Long, typeId: Long): ExamStatus</TD></TR>
<TR><TD ALIGN="LEFT" >+ findStatus(hibSession: Session, sessionId: Long, typeId: Long): ExamStatus</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamStatusDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamStatusDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: ExamType): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(): List&lt;ExamType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(hibSession: Session): List&lt;ExamType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllApplicable(user: UserContext, status: Status...): List&lt;ExamType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllOfType(type: int): List&lt;ExamType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllUsed(sessionId: Long): TreeSet&lt;ExamType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllUsedApplicable(user: UserContext, status: Status...): List&lt;ExamType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByReference(ref: String): ExamType</TD></TR>
<TR><TD ALIGN="LEFT" >+ isUsed(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshSolution(sessionId: Long, examTypeId: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExamTypeInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExamTypeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFinal: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReference: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationAssignment1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationAssignment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationStatus: PermissionExamination [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Exam): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Exam&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationAssignmentChanges1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationAssignmentChanges</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationClone1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationClone</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationConflictStatistics1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationConflictStatistics</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationDelete1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationDetail1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationStatus: PermissionExamination [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Exam): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Exam&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationDistributionPreferenceAdd1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationDistributionPreferenceAdd</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationDistributionPreferenceDelete1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationDistributionPreferenceDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationDistributionPreferenceDetail1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationDistributionPreferenceDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationDetail: Permission&lt;Exam&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: DistributionPref): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;DistributionPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationDistributionPreferenceEdit1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationDistributionPreferenceEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationEdit: Permission&lt;Exam&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: DistributionPref): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;DistributionPref&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationDistributionPreferences1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationDistributionPreferences</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationEditClearPreferences1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationEditClearPreferences</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationEnrollmentsBackend1538111727[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationEnrollmentsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   examinationSolverService: SolverService&lt;ExamSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- computeConflicts(examId: Long, period: ExamPeriod): Map&lt;Long, List&lt;Meeting&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: ExaminationEnrollmentsRpcRequest, context: SessionContext): GwtRpcResponseList&lt;Enrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># where(type: int, idx: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationEnrollmentsRpcRequest1123672665[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationEnrollmentsRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iExamId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getEnrollmentsForExam(examId: Long): ExaminationEnrollmentsRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationPdfReports1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationPdfReports</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationStatus: PermissionExamination [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationReports1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationReports</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationSchedule1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationSchedule</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationStatus: PermissionExamination [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationScheduleBackend1538111727[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationScheduleBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   examinationSolverService: SolverService&lt;ExamSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ExaminationScheduleRpcRequest, context: SessionContext): ExaminationScheduleRpcResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationScheduleRpcRequest1123672665[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationScheduleRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iExamId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getScheduleForStudent(examId: Long, studentId: Long): ExaminationScheduleRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationScheduleRpcResponse1123672665[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationScheduleRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iExamType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExams: TreeSet&lt;RelatedObjectInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addExam(exam: RelatedObjectInterface)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationSolutionExportXml1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationSolutionExportXml</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationSolver1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationSolver</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationSolverContainer398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationSolverContainer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iExamSolvers: Map&lt;String, ExamSolver&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPassivation: PassivationThread [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createSolver(user: String, config: DataProperties): ExamSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMemUsage(user: String): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(user: String): ExamSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSolver(user: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolver(user: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationSolverContainerRemote398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationSolverContainerRemote</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createProxy(address: Address, user: String): ExamSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ createRemoteSolver(user: String, config: DataProperties, caller: Address): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispatch(address: Address, user: String, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ invoke(method: String, user: String, types: Class[], args: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationSolverLog1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationSolverLog</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationSolverService1058021598[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationSolverService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   sessionContext: SessionContext [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createConfig(settingsId: Long, options: Map&lt;Long, String&gt;): DataProperties</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSolver(properties: DataProperties): ExamSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(puid: String, sessionId: Long): ExamSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ reload(properties: DataProperties): ExamSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeSolver()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationStatuses1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationStatuses</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: ExamType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationTimetable1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationTimetable</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationTimetabling1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationTimetabling</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationStatus: PermissionExamination [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: ExamType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: ExamType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExaminationView1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExaminationView</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationStatus: PermissionExamination [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Exam): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Exam&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Examinations1474622403[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Examinations</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionExaminationStatus: PermissionExamination [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExecuteScriptBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExecuteScriptBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ExecuteScriptRpcRequest, context: SessionContext): QueueItemInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExecuteScriptRpcRequest15436791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExecuteScriptRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: Map&lt;String, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ executeScript(scriptId: Long, scriptName: String, parameters: Map&lt;String, String&gt;, email: String): ExecuteScriptRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeScript(script: ScriptInterface): ExecuteScriptRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Execution515422738[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Execution&lt;R extends GwtRpcRequest&lt;T&gt;, T extends GwtRpcResponse&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iContext: SessionContext [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iException: GwtRpcException [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExecutionId: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLocale: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRequest: R [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iResponse: T [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRunning: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWaitingThread: Thread [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># cancelExecution()</TD></TR>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
<TR><TD ALIGN="LEFT" ># waitToFinish()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportAssignedClassesCSV64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportAssignedClassesCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportAssignedClassesPDF64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportAssignedClassesPDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportAssignmentHistoryCSV64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportAssignmentHistoryCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportAssignmentHistoryPDF64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportAssignmentHistoryPDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportBuildingsPDF1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportBuildingsPDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportDepartmentsPDF1360869250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportDepartmentsPDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportNotAssignedClassesCSV64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportNotAssignedClassesCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportNotAssignedClassesPDF64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportNotAssignedClassesPDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportPublishedSectioningSolutionXML64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportPublishedSectioningSolutionXML</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportServletHelper2109884156[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportServletHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iContext: SessionContext [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOutputStream: OutputStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParams: Params [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResponse: HttpServletResponse [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWriter: PrintWriter [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getParameter(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameterValues(name: String): String[]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportSolutionChangesCSV64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportSolutionChangesCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportSolutionChangesPDF64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportSolutionChangesPDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportSolutionReportsCSV64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportSolutionReportsCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportSolutionReportsPDF64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportSolutionReportsPDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportSolutionXML64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportSolutionXML</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   examinationSolverService: SolverService&lt;ExamSolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   studentSectioningSolverService: SolverService&lt;StudentSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># getSolver(type: SolverType): CommonSolverInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportTimetablePDF64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportTimetablePDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># getComment(model: TimetableGridModel): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getDate(firstDate: Date, date: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># pageHeight(filter: FilterInterface, model: TimetableGridModel, weekOffset: int, showHeader: boolean): int</TD></TR>
<TR><TD ALIGN="LEFT" ># pageWidth(filter: FilterInterface, model: TimetableGridModel, weekOffset: int): int</TD></TR>
<TR><TD ALIGN="LEFT" ># printTables(filter: FilterInterface, response: TimetableGridResponse, helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2time(slot: int): String</TD></TR>
<TR><TD ALIGN="LEFT" ># textWidth(font: Font, cell: TimetableGridCell, showRoom: boolean, showInstructor: boolean, showTime: boolean, showPreference: boolean, showDate: boolean): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportTimetableXLS64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportTimetableXLS</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># getComment(model: TimetableGridModel): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getDate(firstDate: Date, date: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># printTables(filter: FilterInterface, response: TimetableGridResponse, helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2time(slot: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExportUtils1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExportUtils</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ exportCSV(csv: CSVFile, response: HttpServletResponse, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ exportCSV(table: WebTable, ordCol: int, response: HttpServletResponse, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ exportPDF(table: PdfWebTable, ordCol: int, response: HttpServletResponse, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCsvWriter(response: HttpServletResponse, name: String): PrintWriter</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPdfOutputStream(response: HttpServletResponse, name: String): OutputStream</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlainTextWriter(response: HttpServletResponse, name: String): PrintWriter</TD></TR>
<TR><TD ALIGN="LEFT" >+ getXmlOutputStream(response: HttpServletResponse, name: String): OutputStream</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExternalBuilding629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExternalBuilding</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByAbbv(sessionId: Long, bldgAbbr: String): ExternalBuilding</TD></TR>
<TR><TD ALIGN="LEFT" >+ findExternalBuildingForSession(externalUniqueId: String, session: Session): ExternalBuilding</TD></TR>
<TR><TD ALIGN="LEFT" >+ findRoom(roomNbr: String): ExternalRoom</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBuildings(sessionId: Long): Hashtable</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExternalBuildingDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExternalBuildingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExternalDepartmentStatusTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExternalDepartmentStatusTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExternalRoom629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExternalRoom</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByBldgAbbvRoomNbr(sessionId: Long, bldgAbbv: String, roomNbr: String): ExternalRoom</TD></TR>
<TR><TD ALIGN="LEFT" >+ findExternalRoomForSession(externalUniqueId: String, session: Session): ExternalRoom</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExternalRoomDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExternalRoomDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExternalRoomDepartment629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExternalRoomDepartment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- checkAssignmentType(assignmentType: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isControllingExternalDept(externalRoomDept: ExternalRoomDepartment, deptList: Set): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExternalRoomDepartmentDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExternalRoomDepartmentDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExternalRoomFeature629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExternalRoomFeature</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExternalRoomFeatureDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExternalRoomFeatureDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FeatureInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FeatureInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanDelete: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEdit: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: DepartmentInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: List&lt;Entity&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: FeatureTypeInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRoom(room: Entity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canDelete(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canEdit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoom(id: Long): Entity</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FeatureTypeInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FeatureTypeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEvents: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Field2051236629[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Field</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFlags: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHeight: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLength: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: FieldType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValues: List&lt;ListItem&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWidth: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addValue(item: ListItem)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Field745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Field</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDefault: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFlags: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHeight: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLength: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: FieldType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValues: List&lt;ListItem&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWidth: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addValue(item: ListItem)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FileInfo1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FileInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ deleteFile(proxy: TimetableInfoFileProxy)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadInfo(proxy: TimetableInfoFileProxy): TimetableInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveInfo(info: TimetableInfo, proxy: TimetableInfoFileProxy)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FileUploadBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FileUploadBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: FileUploadRpcRequest, helper: SessionContext): FileUploadRpcResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FileUploadRpcRequest303420214[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FileUploadRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iReset: boolean [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FileUploadRpcResponse303420214[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FileUploadRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Filter745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Filter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iDefaultValue: Record [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFields: Field[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ indexOf(name: String): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Filter876918435[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Filter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: Qualifiable[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ isMatch(authority: UserAuthority): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FilterBoxBackend1801756021[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FilterBoxBackend&lt;T extends FilterRpcRequest&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ enumarate(request: T, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: T, context: SessionContext): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(request: T, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ suggestions(request: T, response: FilterRpcResponse, context: SessionContext)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FilterBoxBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FilterBoxBackend&lt;T extends FilterRpcRequest&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ enumarate(request: T, response: FilterRpcResponse, context: EventContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: T, context: EventContext): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(request: T, response: FilterRpcResponse, context: EventContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ suggestions(request: T, response: FilterRpcResponse, context: EventContext)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FilterInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FilterInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iParameters: List&lt;FilterParameterInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addParameter(parameter: FilterParameterInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameter(name: String): FilterParameterInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameterValue(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameterValue(name: String, defaultValue: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FilterParameterInterface723731434[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FilterParameterInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCollapsible: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefault: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMultiSelect: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOptions: List&lt;ListItem&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuffix: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addOption(value: String, text: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: FilterParameterInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOptionText(value: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isDefaultItem(item: ListItem): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSelectedItem(item: ListItem): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FilterRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FilterRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCommand: Command [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOptions: HashMap&lt;String, Set&lt;String&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iText: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addOption(command: String, value: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOption(command: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOptions(command: String): Set&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasOption(command: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasOptions(command: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ toQueryString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FilterRpcResponse4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FilterRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEntities: HashMap&lt;String, ArrayList&lt;Entity&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTypeLabels: HashMap&lt;String, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(type: String, entity: Entity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ add(type: String, entity: Collection&lt;Entity&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addResult(entity: Entity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSuggestion(message: String, replacement: String, hint: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSuggestion(message: String, replacement: String, hint: String, command: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSuggestion(message: String, replacement: String, hint: String, command: String, allowMultiple: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEntities(type: String): List&lt;Entity&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTypeLabel(type: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasEntities(type: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FinalExamEventDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FinalExamEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FindAssignmentAction1584910327[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FindAssignmentAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignment: Collection&lt;ClassAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanRequirePreferences: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: CourseRequestInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSpecialRegistration: Collection&lt;ClassAssignment&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRequest(server: OnlineSectioningServer, model: StudentSectioningModel, assignment: Assignment&lt;Request, Enrollment&gt;, student: Student, originalStudent: XStudent, request: Request, alternative: boolean, updateFromCache: boolean, classTable: Map&lt;Long, Section&gt;, distributions: Set&lt;XDistribution&gt;, hasAssignment: boolean, onlineOnlyFilter: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRequest(server: OnlineSectioningServer, model: StudentSectioningModel, assignment: Assignment&lt;Request, Enrollment&gt;, student: Student, originalStudent: XStudent, request: Request, alternative: boolean, updateFromCache: boolean, classTable: Map&lt;Long, Section&gt;, distributions: Set&lt;XDistribution&gt;, hasAssignment: boolean, onlineOnlyFilter: boolean, allowRequiredPrefs: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRequest(server: OnlineSectioningServer, model: StudentSectioningModel, assignment: Assignment&lt;Request, Enrollment&gt;, student: Student, originalStudent: XStudent, request: Request, alternative: boolean, updateFromCache: boolean, classTable: Map&lt;Long, Section&gt;, distributions: Set&lt;XDistribution&gt;, hasAssignment: boolean, excludeInactive: boolean, checkDeadline: boolean, currentDateIndex: Integer, onlineOnlyFilter: boolean, allowRequiredPrefs: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(offering: XOffering, enrollments: XEnrollments, courseId: Long, studentId: long, originalStudent: XStudent, sections: Map&lt;Long, Section&gt;, server: OnlineSectioningServer, model: StudentSectioningModel, hasAssignment: boolean, checkDeadlines: boolean, currentDateIndex: Integer, onlineOnlyFilter: boolean): Course</TD></TR>
<TR><TD ALIGN="LEFT" ># convert(server: OnlineSectioningServer, assignment: Assignment&lt;Request, Enrollment&gt;, enrollments: Enrollment[], requiredSectionsForCourse: Hashtable&lt;CourseRequest, Set&lt;Section&gt;&gt;, requiredFreeTimes: HashSet&lt;FreeTimeRequest&gt;, computeOverlaps: boolean, sq: StudentQuality, savedClasses: Set&lt;IdPair&gt;): ClassAssignmentInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- convert(server: OnlineSectioningServer, model: StudentSectioningModel, assignment: Assignment&lt;Request, Enrollment&gt;, student: Student, neighbour: BranchBoundNeighbour, requiredSectionsForCourse: Hashtable&lt;CourseRequest, Set&lt;Section&gt;&gt;, requiredFreeTimes: HashSet&lt;FreeTimeRequest&gt;, savedClasses: Set&lt;IdPair&gt;): ClassAssignmentInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ distance(m: DistanceMetric, s1: Section, s2: Section): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;ClassAssignmentInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ forRequest(request: CourseRequestInterface): FindAssignmentAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ isRequired(enrollment: Enrollment, request: Request): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FindEnrollmentAction1580621848[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FindEnrollmentAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCanEditMyStudents: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanEditOtherStudents: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanRegister: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanSelect: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanShowExtIds: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanUseAssistant: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iConsentToDoCourse: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFilter: SectioningStatusFilterRpcRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iIsAdmin: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iIsAdvisor: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMyStudents: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iQuery: Query [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ classId(): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ courseId(): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;Enrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isCanSelect(student: XStudentId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isMyStudent(student: XStudentId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(): Query</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FindEnrollmentInfoAction1580621848[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FindEnrollmentInfoAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCoursesIcanApprove: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCoursesIcoordinate: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFilter: SectioningStatusFilterRpcRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMyStudents: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iQuery: Query [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iShowUnmatchedClasses: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iShowUnmatchedCourses: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSubjectAreas: Set&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ courseId(): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;EnrollmentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getClassSnapshots(courseId: Long, helper: OnlineSectioningHelper): Map&lt;Long, Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getOfferingSnapshots(courseIds: Collection&lt;? extends XCourseId&gt;, helper: OnlineSectioningHelper): Map&lt;Long, Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasMatchingSubjectArea(subject: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isConsentToDoCourse(course: XCourse): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isCourseVisible(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isMyStudent(student: XStudentId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(): Query</TD></TR>
<TR><TD ALIGN="LEFT" >+ showUnmatchedClasses(showUnmatchedClasses: boolean): FindEnrollmentInfoAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ showUnmatchedCourses(showUnmatchedCourses: boolean): FindEnrollmentInfoAction</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FindOnlineSectioningLogAction1580621848[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FindOnlineSectioningLogAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCanShowExtIds: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: Query [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;SectioningAction&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ forQuery(query: String, canShowExtIds: boolean): FindOnlineSectioningLogAction</TD></TR>
<TR><TD ALIGN="LEFT" ># getEnrollmentMessage(action: Action): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHTML(action: Action): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMessage(action: Action): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getRequestMessage(action: Action): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getSelectedMessage(action: Action): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># time(slot: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FindStudentInfoAction1580621848[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FindStudentInfoAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCanEditMyStudents: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanEditOtherStudents: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanRegister: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanSelect: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanShowExtIds: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanUseAssistant: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCoursesIcanApprove: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCoursesIcoordinate: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFilter: SectioningStatusFilterRpcRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iIsAdmin: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iIsAdvisor: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMyStudents: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iQuery: Query [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSubjectAreas: Set&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;StudentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># findCourses(server: OnlineSectioningServer, helper: OnlineSectioningHelper, lookup: CourseLookup): Collection&lt;? extends XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAdvisedInfo(student: XStudent, server: OnlineSectioningServer, helper: OnlineSectioningHelper): AdvisedInfoInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentSchedulingPreference(student: XStudent, server: OnlineSectioningServer, helper: OnlineSectioningHelper): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasMatchingSubjectArea(subject: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isCanSelect(student: XStudentId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isConsentToDoCourse(course: XCourse): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isCourseVisible(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isMyStudent(student: XStudentId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(): Query</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FixedCreditUnitConfig629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FixedCreditUnitConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ creditAbbv(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ creditText(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ formatCredit(credit: float): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FixedCreditUnitConfigDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FixedCreditUnitConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Flag1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Flag</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAppearance: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Flag1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Flag</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Formats1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Formats</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getConcurrentNumberFormat(pattern: Pattern): Format&lt;Number&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDateFormat(pattern: String): Format&lt;Date&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDateFormat(pattern: Pattern): Format&lt;Date&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNumberFormat(pattern: String): Format&lt;Number&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeFormats()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FreeTimeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FreeTimeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FullCoverPrefMix380494733[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FullCoverPrefMix</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iFullCover: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPref: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPref(prologPref: String, count: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FutureRoomInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FutureRoomInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanChange: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanDelete: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisplayName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GenerateSectioningReport209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GenerateSectioningReport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iParameters: DataProperties [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CSVFile</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GeocodeRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GeocodeRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLat: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLon: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReverse: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iViewbox: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GeocodeResponse759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GeocodeResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLat: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLon: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GeocodingBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GeocodingBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClient: Client [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ destroy()</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: GeocodeRequest, context: SessionContext): GeocodeResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetAssignment209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetAssignment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCheckHolds: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCustomCheck: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iErrors: Set&lt;ErrorMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGetSpecRegs: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIncludeAdvisorRequest: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIncludeRequest: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIncludeWaitListPosition: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessages: List&lt;EnrollmentFailure&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListCheck: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListMode: WaitListMode [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkHolds(check: boolean): GetAssignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeAssignment(server: OnlineSectioningServer, helper: OnlineSectioningHelper, student: XStudent, studentRequests: List&lt;XRequest&gt;, messages: List&lt;EnrollmentFailure&gt;, errors: Set&lt;ErrorMessage&gt;, includeRequest: boolean, wlMode: WaitListMode): ClassAssignmentInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): ClassAssignmentInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ fillUnavailabilitiesIn(ret: ClassAssignmentInterface, student: XStudent, server: OnlineSectioningServer, helper: OnlineSectioningHelper, eb: Builder): List&lt;CourseSection&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): GetAssignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ isFreeTimeOverlapping(r: FreeTimeRequest, e: Enrollment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetBuidlingsDataBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetBuidlingsDataBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetBuildingsRequest, context: SessionContext): BuildingsDataResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetBuildingsRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetBuildingsRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetCourseOfferingBackend1624300373[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetCourseOfferingBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetCourseOfferingRequest, context: SessionContext): GetCourseOfferingResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetCourseOfferingRequest1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetCourseOfferingRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseOfferingId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetCourseOfferingResponse1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetCourseOfferingResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseOffering: CourseOfferingInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   weekStartDayOfWeek: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   wkChangeDefault: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   wkDropDefault: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   wkEnrollDefault: Integer [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetDegreePlans209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetDegreePlans</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iMatcher: CourseMatcher [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;DegreePlanInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): GetDegreePlans</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetDepartmentsDataBackend1360869250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetDepartmentsDataBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetDepartmentsRequest, context: SessionContext): DepartmentsDataResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllDependentDepartmentOptions(context: SessionContext): HashMap&lt;Long, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lastChangeStr(dept: Department, context: SessionContext): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetDepartmentsRequest1398617296[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetDepartmentsRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetFilterBackend330628327[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetFilterRpcRequest, context: SessionContext): Filter</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetFilterRpcRequest745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetFilterRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getFilter(type: String): GetFilterRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetInfo209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Map&lt;String, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetInstructorAttributeParentsBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetInstructorAttributeParentsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetInstructorAttributeParentsRequest, context: SessionContext): GwtRpcResponseList&lt;AttributeInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetInstructorAttributeParentsRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetInstructorAttributeParentsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iAttributeId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iDepartmentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iTypeId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetInstructorAttributesBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetInstructorAttributesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetInstructorAttributesRequest, context: SessionContext): GwtRpcResponseList&lt;AttributeInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetInstructorAttributesRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetInstructorAttributesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iDepartmentId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetInstructorsBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetInstructorsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetInstructorsRequest, context: SessionContext): GwtRpcResponseList&lt;InstructorInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetInstructorsRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetInstructorsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iDepartmentId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetPageNameRpcRequest2051236629[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetPageNameRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetPageNameRpcRequest745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetPageNameRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getPageName(type: String): GetPageNameRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetQueueTableBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetQueueTableBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ convert(item: QueueItem, context: SessionContext): QueueItemInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: GetQueueTableRpcRequest, context: SessionContext): GwtRpcResponseList&lt;QueueItemInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetQueueTableRpcRequest15436791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetQueueTableRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDeleteId: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetRequest209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAdvisorRequests: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCustomRequests: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCustomValidation: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMatcher: CourseMatcher [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectioning: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListMode: WaitListMode [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListValidation: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CourseRequestInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long, sectioning: boolean): GetRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): GetRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetRequestsRpcRequest1458658222[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetRequestsRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOfferingId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetRequestsRpcResponse1458658222[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetRequestsRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequests: List&lt;Request&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRequest(request: Request)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetReservationsAction1580621848[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetReservationsAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOfferingId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- convert(reservation: Reservation, helper: OnlineSectioningHelper): ReservationInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- convert(offering: XOffering, reservation: XReservation, enrollments: XEnrollments, server: OnlineSectioningServer, helper: OnlineSectioningHelper): ReservationInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;ReservationInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ forOfferingId(id: Long): GetReservationsAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetRoomsOfABuildingBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetRoomsOfABuildingBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetRoomsOfABuildingRequest, context: SessionContext): GwtRpcResponseList&lt;RoomDetailInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetRoomsOfABuildingRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetRoomsOfABuildingRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBuildingId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetScriptOptionsRpcRequest15436791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetScriptOptionsRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetStudentPreferences209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetStudentPreferences</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): StudentSchedulingPreferencesInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): GetStudentPreferences</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetTaskExecutionLogBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetTaskExecutionLogBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetTaskExecutionLogRpcRequest, context: SessionContext): TaskExecutionLogInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetTaskExecutionLogRpcRequest160962237[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetTaskExecutionLogRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iTaskExecutionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetTaskOptionsRpcRequest160962237[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetTaskOptionsRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetTasksBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetTasksBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetTasksRpcRequest, context: SessionContext): GwtRpcResponseList&lt;TaskInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTask(t: PeriodicTask, context: SessionContext): TaskInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetTasksRpcRequest160962237[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetTasksRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetTeachingRequestBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetTeachingRequestBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   classAssignmentService: AssignmentService&lt;ClassAssignmentProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetRequestsRpcRequest, context: SessionContext): GetRequestsRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ toInstructorIds(request: TeachingRequest): List&lt;Long&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetUserDataBackend1058982626[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetUserDataBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetUserDataRpcRequest, context: SessionContext): UserDataInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GetUserDataRpcRequest1044312147[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GetUserDataRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GlobalRoomFeature629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GlobalRoomFeature</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ featureTypeDisplayString(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ featureWithSisReference(session: Session, sisReference: String): GlobalRoomFeature</TD></TR>
<TR><TD ALIGN="LEFT" >+ findGlobalRoomFeatureForAbbv(session: Session, label: String): GlobalRoomFeature</TD></TR>
<TR><TD ALIGN="LEFT" >+ findGlobalRoomFeatureForLabel(session: Session, label: String): GlobalRoomFeature</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GlobalRoomFeatureAdd82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GlobalRoomFeatureAdd</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GlobalRoomFeatureDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GlobalRoomFeatureDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GlobalRoomFeatureDelete82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GlobalRoomFeatureDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GlobalRoomFeatureEdit82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GlobalRoomFeatureEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: GlobalRoomFeature): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;GlobalRoomFeature&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GlobalRoomGroupAdd82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GlobalRoomGroupAdd</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GlobalRoomGroupDelete82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GlobalRoomGroupDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GlobalRoomGroupEdit82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GlobalRoomGroupEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: RoomGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;RoomGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GlobalRoomGroupEditSetDefault82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GlobalRoomGroupEditSetDefault</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GradeModes1896556946[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GradeModes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCreditHours: Map&lt;String, Float&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCurrentCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iModes: Map&lt;String, GradeMode&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCreditHour(sectionId: String, credit: Float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addGradeMode(sectionId: String, mode: GradeMode)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditHour(a: ClassAssignment): Float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditHour(sectionId: String): Float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGradeMode(a: ClassAssignment): GradeMode</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGradeMode(sectionId: String): GradeMode</TD></TR>
<TR><TD ALIGN="LEFT" >+ toMap(): Map&lt;String, GradeMode&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Group389194987[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Group</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iKeepTogether: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWeight: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(g: Group): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GroupConstraintInfo1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GroupConstraintInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iIsSatisfied: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iPreference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iType: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ load(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GroupInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GroupInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanDelete: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEdit: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefault: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: DepartmentInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: List&lt;Entity&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRoom(room: Entity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canDelete(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canEdit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoom(id: Long): Entity</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GroupOverrideReservationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GroupOverrideReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GwtRpcCancelledException1185371328[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GwtRpcCancelledException</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GwtRpcException1185371328[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GwtRpcException</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCause: Throwable [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GwtRpcHelper1637257272[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GwtRpcHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCheck: PermissionCheck [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHttpSessionId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHttpSessionNew: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUser: UserContext [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkPermission(right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(targetId: Serializable, targetType: String, right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(targetObject: Object, right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(targetObject: Object, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(targetObject: Object, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(targetId: Serializable, targetType: String, right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(targetObject: Object, right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttribute(name: String): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttribute(attribute: SessionAttribute): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(targetId: Serializable, targetType: String, right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(targetObject: Object, right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(targetObject: Object, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(targetObject: Object, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(targetId: Serializable, targetType: String, right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(targetObject: Object, right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAttribute(name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAttribute(attribute: SessionAttribute)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GwtRpcResponseBoolean1185371328[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GwtRpcResponseBoolean</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iValue: Boolean [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GwtRpcResponseList1185371328[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GwtRpcResponseList&lt;T extends IsSerializable&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GwtRpcResponseLong1185371328[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GwtRpcResponseLong</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iValue: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GwtRpcResponseNull1185371328[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GwtRpcResponseNull</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GwtRpcServlet1637257272[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GwtRpcServlet</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iGson: Gson [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSaver: Saver [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ cancelExecution(executionId: Long): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ destroy()</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: GwtRpcRequest&lt;T&gt;, applicationContext: ApplicationContext, sessionContext: SessionContext): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: GwtRpcRequest&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeAsync(request: GwtRpcRequest&lt;T&gt;): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getImplementation(requestClass: Class&lt;? extends GwtRpcRequest&lt;T&gt;&gt;, applicationContext: ApplicationContext): GwtRpcImplementation&lt;GwtRpcRequest&lt;T&gt;, T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getImplementation(request: GwtRpcRequest&lt;T&gt;): GwtRpcImplementation&lt;GwtRpcRequest&lt;T&gt;, T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ init()</TD></TR>
<TR><TD ALIGN="LEFT" >- log(request: GwtRpcRequest&lt;T&gt;, response: T, exception: Throwable, time: long, context: SessionContext, logging: GwtRpcLogging)</TD></TR>
<TR><TD ALIGN="LEFT" >+ waitForResults(executionId: Long): T</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLDeleteBackend1003987616[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLDeleteBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: HQLDeleteRpcRequest, context: SessionContext): GwtRpcResponseBoolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLDeleteRpcRequest1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLDeleteRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLExecuteBackend1003987616[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLExecuteBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: HQLExecuteRpcRequest, context: SessionContext): Table</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLExecuteRpcRequest1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLExecuteRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFromRow: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxRows: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOptions: List&lt;IdValue&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: Query [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addOption(value: String, text: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLExportXML1003987616[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLExportXML</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># importReport(reportEl: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLOptionsBackend1003987616[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLOptionsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: HQLOptionsRpcRequest, context: SessionContext): HQLOptionsInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- getLocalizedDescription(flag: Flag): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getLocalizedText(option: Option): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLOptionsInterface1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLOptionsInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFlags: List&lt;Flag&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOptions: List&lt;Option&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFlag(flag: Flag)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addOption(option: Option)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLOptionsRpcRequest1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLOptionsRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLQueriesBackend1003987616[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLQueriesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: HQLQueriesRpcRequest, context: SessionContext): GwtRpcResponseList&lt;Query&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- getAppearanceFlag(appearance: String): Flag</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLQueriesRpcRequest1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLQueriesRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAppearance: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLReportDelete1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLReportDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLReportEdit1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLReportEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SavedHQL): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SavedHQL&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLSetBackBackend1003987616[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLSetBackBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: HQLSetBackRpcRequest, context: SessionContext): GwtRpcResponseNull</TD></TR>
<TR><TD ALIGN="LEFT" >- getAppearanceFlag(appearance: String): Flag</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLSetBackRpcRequest1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLSetBackRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAppearance: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHistory: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addId(id: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLStoreBackend1003987616[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLStoreBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(query: HQLStoreRpcRequest, context: SessionContext): GwtRpcResponseLong</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HQLStoreRpcRequest1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HQLStoreRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HashedQueryDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HashedQueryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Hint624236337[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Hint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDays: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDetails: ClassAssignmentDetails [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInfo: AssignmentPreferenceInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartSlot: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ fromXml(element: Element): Hint</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDetails(context: SessionContext, solver: SolverProxy, includeConstraints: boolean): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDetailsUnassign(context: SessionContext, solver: SolverProxy, includeConstraints: boolean): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInfo(solver: Solver): AssignmentPreferenceInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotValidReason(solver: Solver): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlacement(model: TimetableModel): Placement</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlacement(model: TimetableModel, checkValidity: boolean): Placement</TD></TR>
<TR><TD ALIGN="LEFT" >+ toXml(element: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HistoryDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HistoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HistoryToken1428779613[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HistoryToken</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDefaults: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParams: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getDefaultParameter(key: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameter(key: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameter(key: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasParameter(key: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isChanged(key: String, value: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isChanged(key: String, defaultValue: String, value: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ mark()</TD></TR>
<TR><TD ALIGN="LEFT" >+ parse(token: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reset(token: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HttpParams814171373[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HttpParams</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iRequest: HttpServletRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getParameter(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameterValues(name: String): String[]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HttpSessionContext641976759[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HttpSessionContext</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iSession: HttpSession [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   unitimePermissionCheck: PermissionCheck [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkPermission(right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(targetId: Serializable, targetType: String, right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(targetObject: Object, right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(targetObject: Object, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(targetObject: Object, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(targetId: Serializable, targetType: String, right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(targetObject: Object, right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttribute(name: String): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttribute(attribute: SessionAttribute): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSessionContext(context: ServletContext): SessionContext</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(targetId: Serializable, targetType: String, right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(targetObject: Object, right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(targetObject: Object, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(targetObject: Object, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(targetId: Serializable, targetType: String, right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(targetObject: Object, right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAttribute(name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAttribute(attribute: SessionAttribute)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

IdLabel21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)IdLabel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowedPrefs: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAllowedPref(id: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(other: IdLabel): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAllowedPref(id: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

IdValue1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)IdValue</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: IdValue): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

IdValue1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)IdValue</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: IdValue): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InMemoryServer1593966791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InMemoryServer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseForId: Hashtable&lt;Long, XCourseId&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseForName: Hashtable&lt;String, TreeSet&lt;XCourseId&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExpectations: Hashtable&lt;Long, XExpectations&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructedOfferings: Hashtable&lt;String, Set&lt;Long&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingRequests: Hashtable&lt;Long, List&lt;XCourseRequest&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingTable: Hashtable&lt;Long, XOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentTable: Hashtable&lt;Long, XStudent&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assign(request: XCourseRequest, enrollment: XEnrollment): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAllStudents()</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(query: String, limit: Integer, matcher: CourseMatcher): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(query: String, limit: Integer, matcher: CourseMatcher, cmp: Comparator&lt;XCourseId&gt;): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(matcher: CourseMatcher): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findStudents(matcher: StudentMatcher): Collection&lt;XStudent&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(course: String): XCourseId</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseId: Long): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExpectations(offeringId: Long): XExpectations</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructedOfferings(instructorExternalId: String): Collection&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOffering(offeringId: Long): XOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestedCourseIds(studentId: Long): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequests(offeringId: Long): Collection&lt;XCourseRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudent(studentId: Long): XStudent</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(student: XStudent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" ># remove(offering: XOffering, removeExpectations: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >- toCourse(course: XCourseId): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(expectations: XExpectations)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(student: XStudent, updateRequests: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ waitlist(request: XCourseRequest, waitlist: boolean): XCourseRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

IncludeLine1458658222[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)IncludeLine</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssign: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanOverlap: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCommon: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLead: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShare: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

IndividualOverrideReservationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)IndividualOverrideReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

IndividualReservationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)IndividualReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InfoInterface1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InfoInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPairs: List&lt;InfoPairInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPair(name: String, value: String): InfoPairInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InfoPairInterface1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InfoPairInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSeparator: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InfoSolverProperty546475809[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InfoSolverProperty</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStrip: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getValue(solver: CommonSolverInterface, type: SolverType, properties: DataProperties, info: Map&lt;String, String&gt;): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstrOfferingConfig629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstrOfferingConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToschedulingSubparts(schedulingSubpart: SchedulingSubpart)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ cloneWithSubparts(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByIdRolledForwardFrom(sessionId: Long, uniqueIdRolledForwardFrom: Long): InstrOfferingConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPossibleFundingDepts(hibSession: Session): TreeSet&lt;Department&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFirstSectionNumber(itype: ItypeDesc): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGeneratedName(io: InstructionalOffering): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNextInstrOfferingConfig(context: SessionContext): InstrOfferingConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNextInstrOfferingConfig(context: SessionContext, cmp: Comparator): InstrOfferingConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreviousInstrOfferingConfig(context: SessionContext): InstrOfferingConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreviousInstrOfferingConfig(context: SessionContext, cmp: Comparator): InstrOfferingConfig</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstrOfferingConfigAdd317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstrOfferingConfigAdd</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstrOfferingConfigComparator1628636464[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstrOfferingConfigComparator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCmp: Comparator [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   subjectUID: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compare(o1: Object, o2: Object): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstrOfferingConfigDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstrOfferingConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstrOfferingConfigDelete317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstrOfferingConfigDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstrOfferingConfig): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstrOfferingConfig&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstrOfferingConfigEdit317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstrOfferingConfigEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstrOfferingConfig): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstrOfferingConfig&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstrOfferingConfigEditDepartment317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstrOfferingConfigEditDepartment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstrOfferingConfigEditSubpart317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstrOfferingConfigEditSubpart</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalMethod629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findAll(): List&lt;InstructionalMethod&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByReference(reference: String, hibSession: Session): InstructionalMethod</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalMethodDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalMethodDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalMethods1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalMethods</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: InstructionalMethod, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: InstructionalMethod, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalOffering629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalOffering</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   controllingCourseOffering: CourseOffering [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ cloneOfferingConfigurationFrom(instrOffrToCloneFrom: InstructionalOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeLabels(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ courseOfferingsMinusSortCourseOfferingForSubjectArea(subjectAreaUID: Long): TreeSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ courseOfferingsMinusSortCourseOfferingForSubjectArea(subjectArea: SubjectArea): TreeSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteAllClasses(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteAllCourses(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteAllDistributionPreferences(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveReSchedule(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveReScheduleNow(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveWaitList(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveWaitListNow(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ existsConfig(name: String, configId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByIdRolledForwardFrom(sessionId: Long, uniqueIdRolledForwardFrom: Long): InstructionalOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSortCourseOfferingForSubjectArea(subjectAreaUniqueId: Long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSortCourseOfferingForSubjectArea(subjectArea: SubjectArea): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateInstrOfferingPermId()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNextInstructionalOffering(context: SessionContext): InstructionalOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNextInstructionalOffering(context: SessionContext, cmp: Comparator): InstructionalOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNrClasses(itype: ItypeDesc): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreviousInstructionalOffering(context: SessionContext): InstructionalOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreviousInstructionalOffering(context: SessionContext, cmp: Comparator): InstructionalOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeConfiguration(ioc: InstrOfferingConfig)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeCourseOffering(co: CourseOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ search(acadSessionId: Long, subjectAreaId: Long, courseNbr: String, fetchStructure: boolean, fetchCredits: boolean, fetchInstructors: boolean, fetchPreferences: boolean, fetchAssignments: boolean, fetchReservations: boolean): TreeSet&lt;InstructionalOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ search(acadSessionId: Long, subjectAreaId: Long, courseNbr: String, fetchStructure: boolean, fetchCredits: boolean, fetchInstructors: boolean, fetchPreferences: boolean, fetchAssignments: boolean, fetchReservations: boolean, filterWaitList: String): TreeSet&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalOfferingCrossLists317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalOfferingCrossLists</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalOfferingDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalOfferingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalOfferingDetail317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalOfferingDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalOfferings317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalOfferings</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalOfferingsExportPDF317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalOfferingsExportPDF</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalOfferingsWorksheetPDF317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalOfferingsWorksheetPDF</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalTypeDelete1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalTypeDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: ItypeDesc): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructionalTypeEdit1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructionalTypeEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: ItypeDesc): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;ItypeDesc&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAdd2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAdd</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAssignment402768419[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAssignment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iIndex: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructor: DepartmentalInstructor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOldInstructor: DepartmentalInstructor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: TeachingRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getLoad(context: Context): float</TD></TR>
<TR><TD ALIGN="LEFT" >- overlaps(other: TeachingRequest, context: Context): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- sameCommon(other: TeachingRequest): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameCourse(other: TeachingRequest): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- shareCommon(other: TeachingRequest): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ toInfo(context: Context, assignments: List&lt;InstructorAssignment&gt;): AssignmentInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAssignmentBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAssignmentBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># assign(hibSession: Session, request: TeachingRequest, instructor: DepartmentalInstructor, commit: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># changelog(hibSession: Session, request: TeachingRequest, oldInstructor: DepartmentalInstructor, newInstructor: DepartmentalInstructor, context: Context)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: InstructorAssignmentRequest, context: SessionContext): GwtRpcResponseNull</TD></TR>
<TR><TD ALIGN="LEFT" ># unassign(hibSession: Session, request: TeachingRequest, instructor: DepartmentalInstructor, commit: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAssignmentPreferences2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAssignmentPreferences</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAssignmentRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAssignmentRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignments: List&lt;AssignmentInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIgnoreConflicts: Boolean [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAssignment(assignment: AssignmentInfo)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttribute629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttribute</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(s: InstructorAttribute): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameAttributeInSession(session: Session): InstructorAttribute</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllDepartmentalAttributes(departmentId: Long): List&lt;InstructorAttribute&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllGlobalAttributes(sessionId: Long): List&lt;InstructorAttribute&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isParentOf(attribute: InstructorAttribute): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributeAdd2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributeAdd</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributeAssign2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributeAssign</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructorAttribute): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructorAttribute&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributeDelete2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributeDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributeEdit2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributeEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructorAttribute): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructorAttribute&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributePrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributePrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributePropertiesBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributePropertiesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: InstructorAttributePropertiesRequest, context: SessionContext): InstructorAttributePropertiesInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributePropertiesInterface1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributePropertiesInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAttributeTypes: List&lt;AttributeTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAddGlobalAttribute: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: List&lt;DepartmentInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastDepartmentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAttributeType(type: AttributeTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDepartment(department: DepartmentInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttributeType(typeId: Long): AttributeTypeInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDepartment(departmentId: Long): DepartmentInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributePropertiesRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributePropertiesRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributeTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributeTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributeTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributeTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: InstructorAttributeType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: InstructorAttributeType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAttributes2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAttributes</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAvailabilityBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAvailabilityBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: InstructorAvailabilityRequest, context: SessionContext): InstructorAvailabilityModel</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAvailabilityModel65396580[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAvailabilityModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ char2id(ch: char): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ id2char(id: Long): char</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorAvailabilityRequest65396580[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorAvailabilityRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iInstructorId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotAvailable: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ load(instructorId: String): InstructorAvailabilityRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(instructorId: String, includeNotAvailable: boolean): InstructorAvailabilityRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorClearAssignmentPreferences2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorClearAssignmentPreferences</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorCoursePrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorCoursePrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorCourseRequirement629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorCourseRequirement</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(req: InstructorCourseRequirement): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNote(type: InstructorCourseRequirementType): InstructorCourseRequirementNote</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequirementsForOffering(io: InstructionalOffering): List&lt;InstructorCourseRequirement&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRequirementsForOffering(io: InstructionalOffering): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorCourseRequirementDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorCourseRequirementDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorCourseRequirementNoteDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorCourseRequirementNoteDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorCourseRequirementTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorCourseRequirementTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorDepartment21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorDepartment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDeptCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPosition: IdLabel [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorDetail2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: DepartmentalInstructor): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;DepartmentalInstructor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorEditClearPreferences2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorEditClearPreferences</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorExamReport921076682[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorExamReport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iClass2event: Hashtable&lt;Long, ClassEvent&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLocations: Hashtable&lt;Long, Location&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStudentNames: Hashtable&lt;Long, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- generateCache()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLastChange(instructor: ExamInstructorInfo, exams: TreeSet&lt;ExamAssignmentInfo&gt;): ChangeLog</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentName(studentId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOfSubjectArea(exams: TreeSet&lt;ExamAssignmentInfo&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ printInstructorReports(filePrefix: String, gen: FileGenerator): Hashtable&lt;ExamInstructorInfo, File&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ printReport()</TD></TR>
<TR><TD ALIGN="LEFT" >+ printReport(instructor: ExamInstructorInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printReport(instructor: ExamInstructorInfo, exams: TreeSet&lt;ExamAssignmentInfo&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorGlobalAttributeEdit2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorGlobalAttributeEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iAcademicTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iAvailabilities: List&lt;TimePrefInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDepartment: DepartmentInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iIgnoreDistanceConflicts: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iInstructorId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMaxLoad: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPosition: PositionInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPreferences: List&lt;PreferenceInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iTeachingPreference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iTitle: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorInfo1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iInstructorId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorInfo1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignedLoad: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignedRequests: List&lt;TeachingRequestInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAssignmentIndex: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAttributes: Set&lt;AttributeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAvailability: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConflict: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCoursePreferences: List&lt;PreferenceInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistributionPreferences: List&lt;PreferenceInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollments: Set&lt;ClassInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMatching: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxLoad: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTeachingPreference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimePreferences: List&lt;PreferenceInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValues: Map&lt;String, Double&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAssignedRequest(request: TeachingRequestInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addAttribute(attribute: AttributeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCoursePreference(preference: PreferenceInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDistributionPreference(preference: PreferenceInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addEnrollment(enrollment: ClassInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTimePreference(preference: PreferenceInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addValue(criterion: String, value: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(course: InstructorInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValue(criterion: String): Double</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAttribute(attribute: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hetAvailability(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorInfo836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iInstructorId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(i: InstructorInfo): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAttributes: List&lt;AttributeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: DepartmentInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFormattedName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxLoad: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiddleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOrderName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPosition: PositionInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTeachingPreference: PreferenceInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAttribute(attribute: AttributeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(instructor: InstructorInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttributes(type: AttributeTypeInterface): List&lt;AttributeInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAttribute(attributeId: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorPreferences2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorPreferences</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: DepartmentalInstructor): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;DepartmentalInstructor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorQuery586265501[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorQuery</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iFrom: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iParams: Map&lt;String, Map&lt;String, Object&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWhere: Map&lt;String, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFrom(option: String, from: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># addParameter(option: String, name: String, value: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addWhere(option: String, where: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFrom(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWhere(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(select: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ setParams(query: Query, excludeOption: Collection&lt;String&gt;): Query</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorRequirementData21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorRequirementData</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAdmin: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCrossList: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCustomFields: List&lt;CustomField&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorRequirements: List&lt;CourseRequirement&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCustomField(f: CustomField)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructorRequirement(instructorRequirement: CourseRequirement)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCustomField(id: Long): CustomField</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorRequirementsBackend1948231384[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorRequirementsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: InstructorRequirementsRequest, context: SessionContext): InstructorRequirementData</TD></TR>
<TR><TD ALIGN="LEFT" ># propertyValue(dept: Department, departmentalProperty: ApplicationProperty, globalProperty: ApplicationProperty): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorRequirementsRequest21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorRequirementsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOfferingId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorRoleEdit1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorRoleEdit</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorRoles1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorRoles</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: Permission&lt;Department&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorRoles1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorRoles</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(instructor: DepartmentalInstructor, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># save(department: Department, instructors: List&lt;DepartmentalInstructor&gt;, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(instructor: DepartmentalInstructor, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorScheduleConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorScheduleConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># firstDate(dp: DatePattern, dayCode: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># lastDate(dp: DatePattern, dayCode: int): Date</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorScheduleInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorScheduleInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iClasses: List&lt;ClassInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCourses: List&lt;CourseInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExams: List&lt;ExamInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iInstructors: List&lt;InstructorInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSession: SessionInfo [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># add(instructor: DepartmentalInstructor, statusCheck: boolean, includePrefs: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorScheduling1635055555[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorScheduling</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SolverGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SolverGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSchedulingBackendHelper1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSchedulingBackendHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canTeach(instructor: DepartmentalInstructor, request: TeachingRequest, context: Context): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeDomainForClass(response: SuggestionsResponse, tr: TeachingRequest, index: int, context: Context)</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeDomainForInstructor(response: SuggestionsResponse, instructor: DepartmentalInstructor, selected: TeachingRequest, context: Context)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createContext(context: SessionContext, solver: InstructorSchedulingProxy): Context</TD></TR>
<TR><TD ALIGN="LEFT" ># getAttributePreference(instructor: DepartmentalInstructor, tr: TeachingRequest, type: InstructorAttributeType): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttributePreference(instructor: DepartmentalInstructor, tr: TeachingRequest, attributeTypes: List&lt;InstructorAttributeType&gt;): PreferenceCombination</TD></TR>
<TR><TD ALIGN="LEFT" ># getCourse(course: CourseOffering): CourseInfo</TD></TR>
<TR><TD ALIGN="LEFT" ># getCoursePreference(instructor: DepartmentalInstructor, tr: TeachingRequest): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getInstructor(request: TeachingRequestInfo, instructor: DepartmentalInstructor, nameFormat: String): InstructorInfo</TD></TR>
<TR><TD ALIGN="LEFT" ># getInstructor(tr: TeachingRequest, request: TeachingRequestInfo, instructor: DepartmentalInstructor, assignments: List&lt;InstructorAssignment&gt;, context: Context): InstructorInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorAssignments(instructor: DepartmentalInstructor, suggested: List&lt;InstructorAssignment&gt;): List&lt;InstructorAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorInfo(instructor: DepartmentalInstructor, context: Context): InstructorInfo</TD></TR>
<TR><TD ALIGN="LEFT" ># getInstructorPreference(instructor: DepartmentalInstructor, tr: TeachingRequest): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getRequest(tr: TeachingRequest, context: Context, checkConflicts: boolean): TeachingRequestInfo</TD></TR>
<TR><TD ALIGN="LEFT" ># getRequest(tr: TeachingRequest, instructor: InstructorInfo, nameFormat: String, unavailability: List&lt;EnrolledClass&gt;): TeachingRequestInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSameCommonPreference(instructor: DepartmentalInstructor, tr: TeachingRequest, assignments: List&lt;InstructorAssignment&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSameCoursePreference(instructor: DepartmentalInstructor, tr: TeachingRequest, assignments: List&lt;InstructorAssignment&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getSection(r: TeachingClassRequest): SectionInfo</TD></TR>
<TR><TD ALIGN="LEFT" ># getTimePreference(instructor: DepartmentalInstructor, tr: TeachingRequest): PreferenceCombination</TD></TR>
<TR><TD ALIGN="LEFT" ># loadTimePreferences(tp: TimePref): List&lt;Preference&lt;TimeLocation&gt;&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSchedulingContainer398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSchedulingContainer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iInstrSchdSolvers: Map&lt;String, InstructorSchedulingSolver&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPassivation: PassivationThread [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createSolver(user: String, config: DataProperties): InstructorSchedulingProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMemUsage(user: String): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(user: String): InstructorSchedulingProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSolver(user: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolver(user: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSchedulingContainerRemote398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSchedulingContainerRemote</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createProxy(address: Address, user: String): InstructorSchedulingProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ createRemoteSolver(user: String, config: DataProperties, caller: Address): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispatch(address: Address, user: String, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ invoke(method: String, user: String, types: Class[], args: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSchedulingSolutionExportXml1635055555[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSchedulingSolutionExportXml</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSchedulingSolver1635055555[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSchedulingSolver</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSchedulingSolver68650256[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSchedulingSolver</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assign(assignments: List&lt;AssignmentInfo&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeSuggestions(request: ComputeSuggestionsRequest): SuggestionsResponse</TD></TR>
<TR><TD ALIGN="LEFT" ># createCurrentSolutionBackup(anonymize: boolean, idconv: boolean): Document</TD></TR>
<TR><TD ALIGN="LEFT" ># createModel(properties: DataProperties): InstructorSchedulingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentChanges(rq: AssignmentChangesRequest): AssignmentChangesResponse</TD></TR>
<TR><TD ALIGN="LEFT" ># getDatabaseLoader(model: InstructorSchedulingModel, assignment: Assignment&lt;Variable, TeachingAssignment&gt;): ProblemLoader&lt;Variable, TeachingAssignment, InstructorSchedulingModel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getDatabaseSaver(solver: Solver&lt;Variable, TeachingAssignment&gt;): ProblemSaver&lt;Variable, TeachingAssignment, InstructorSchedulingModel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorInfo(instructorId: Long): InstructorInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructors(filter: FilterRpcRequest): List&lt;InstructorInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTeachingRequestInfo(requestId: Long): TeachingRequestInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTeachingRequests(filter: FilterRpcRequest): List&lt;TeachingRequestInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># restureCurrentSolutionFromBackup(document: Document)</TD></TR>
<TR><TD ALIGN="LEFT" ># toHtml(assignment: TeachingAssignment): String</TD></TR>
<TR><TD ALIGN="LEFT" ># toHtml(request: TeachingRequest): String</TD></TR>
<TR><TD ALIGN="LEFT" ># toHtml(variable: Variable): String</TD></TR>
<TR><TD ALIGN="LEFT" ># toInstructorInfo(instructor: Instructor): InstructorInfo</TD></TR>
<TR><TD ALIGN="LEFT" ># toInstructorInfo(assignment: TeachingAssignment): InstructorInfo</TD></TR>
<TR><TD ALIGN="LEFT" ># toRequestInfo(request: TeachingRequest): TeachingRequestInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSchedulingSolverLog1635055555[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSchedulingSolverLog</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSchedulingSolverService1058021598[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSchedulingSolverService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   sessionContext: SessionContext [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createConfig(settingsId: Long, options: Map&lt;Long, String&gt;): DataProperties</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSolver(properties: DataProperties): InstructorSchedulingProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(puid: String, sessionId: Long): InstructorSchedulingProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ reload(properties: DataProperties): InstructorSchedulingProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeSolver()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurvey2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurvey</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurvey629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurvey</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getInstructor(io: InstructionalOffering): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorSurvey(externalUniqueId: String, sessionId: Long): InstructorSurvey</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorSurvey(di: DepartmentalInstructor): InstructorSurvey</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorSurveysForDepartment(departmentId: Long): Map&lt;String, InstructorSurvey&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasInstructorSurveys(departmentId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurveyAdmin2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurveyAdmin</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurveyApplyRequest21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurveyApplyRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iInstructorId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurveyCopyRequest21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurveyCopyRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCoursesSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iData: InstructorSurveyData [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferencesSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurveyDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurveyDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurveyData21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurveyData</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAdmin: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iApplied: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAppliedDept: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanApply: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iChanged: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iChangedBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourses: List&lt;Course&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCustomFields: List&lt;CustomField&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: List&lt;InstructorDepartment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistPrefs: Preferences [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFormattedName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPrefLevels: List&lt;PrefLevel&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomPrefs: List&lt;Preferences&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessions: List&lt;AcademicSessionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionsWithCourses: List&lt;AcademicSessionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionsWithPreferences: List&lt;AcademicSessionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubmitted: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimePrefs: InstructorTimePreferencesModel [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCourse(course: Course)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCustomField(f: CustomField)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDepartment(dept: InstructorDepartment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPrefLevel(prefLevel: PrefLevel)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRoomPreference(pref: Preferences)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSession(session: AcademicSessionInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSessionWithCourses(session: AcademicSessionInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSessionWithPreferences(session: AcademicSessionInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkChanges(data: InstructorSurveyData): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearCourses()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCustomField(id: Long): CustomField</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPrefLevel(id: Long): PrefLevel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPrefLevel(code: String): PrefLevel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomPreference(id: Long): Preferences</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasDepartment(id: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isChanged(data: InstructorSurveyData): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurveyInterface1137862874[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurveyInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ equalsString(o1: String, o2: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurveyNoteTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurveyNoteTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: InstructorCourseRequirementType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" ># nextOrd(ords: Set&lt;Integer&gt;): int</TD></TR>
<TR><TD ALIGN="LEFT" ># nextOrd(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: InstructorCourseRequirementType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurveyRequest21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurveyRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurveySaveRequest21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurveySaveRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iChanged: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iData: InstructorSurveyData [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubmit: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUnsubmit: boolean [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorSurveysXLS77043836[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorSurveysXLS</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># addPreference(ret: List&lt;A&gt;, pref: Preference, instructorPref: PreferenceLevel, instructorNameFormat: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># addPreference(ret: List&lt;A&gt;, pref: Preference, instructorNameFormat: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># addPreferences(time: List&lt;A&gt;, room: List&lt;A&gt;, dist: List&lt;A&gt;, instructor: DepartmentalInstructor, preferences: Collection&lt;Preference&gt;, compare: Collection&lt;Preference&gt;, instructorNameFormat: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># addPreferences(time: List&lt;A&gt;, room: List&lt;A&gt;, dist: List&lt;A&gt;, instructor: DepartmentalInstructor, preferences: Collection&lt;Preference&gt;, instructorNameFormat: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># applies(instructor: DepartmentalInstructor, pref: Preference): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillClassInfo(line: A[], ci: ClassInstructor, colClass: int, instructorNameFormat: String, classAssignment: ClassAssignmentProxy)</TD></TR>
<TR><TD ALIGN="LEFT" ># match(p1: Preference, p2: Preference): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># sorted(input: Collection&lt;T&gt;): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># timePrefToA(m: TimePatternModel, pref: TimePref, other: TimePref): List&lt;A&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># timePrefToA(m: TimePatternModel): List&lt;A&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorTimePreferencesModel21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorTimePreferencesModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iInstructorPattern: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProblem: Problem [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Instructors2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Instructors</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorsConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorsConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InstructorsExportPdf2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InstructorsExportPdf</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

IntegerSolverProperty546475809[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)IntegerSolverProperty</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getComparable(value: Integer): Comparable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getText(value: Integer): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

IsSessionBusyRpcRequest1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)IsSessionBusyRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ItypeDesc629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ItypeDesc</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(basic: boolean): TreeSet&lt;ItypeDesc&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findForReference(reference: String, hibSession: Session): ItypeDesc</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ItypeDescDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ItypeDescDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JSONPrinter2109884156[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JSONPrinter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iHeader: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHiddenColumns: Set&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iList: List&lt;Map&lt;String, Object&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOut: PrintWriter [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ close()</TD></TR>
<TR><TD ALIGN="LEFT" ># createGson(): Gson</TD></TR>
<TR><TD ALIGN="LEFT" >+ flush()</TD></TR>
<TR><TD ALIGN="LEFT" >+ hideColumn(col: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHeader(fields: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printLine(fields: String...)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JenrlInfo1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JenrlInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCurriculum2nrStudents: TreeSet&lt;CurriculumInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iDistance: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsCommited: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsDistance: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsFixed: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsHard: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsImportant: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsInstructor: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsSatisfied: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsWorkDay: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iJenrl: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCurriculum(info: CurriculumInfo)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JenrlInfo1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JenrlInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCurriculum2nrStudents: TreeSet&lt;CurriculumInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iDistance: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iFirst: ClassAssignmentDetails [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsCommited: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsDistance: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsFixed: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsHard: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsImportant: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsInstructor: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsSatisfied: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iIsWorkDay: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iJenrl: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iSecond: ClassAssignmentDetails [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCommitedJenrlInfos(lecture: Lecture): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCommitedJenrlInfos(solver: Solver, lecture: Lecture): Hashtable&lt;Long, JenrlInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JointEnrollmentDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JointEnrollmentDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JsonApiHelper79803438[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JsonApiHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iGson: Gson [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># createGson(): Gson</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequest(requestType: Type): P</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendError(code: int, message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendError(code: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendError(code: int, error: Throwable)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JsonConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JsonConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doPost(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># execute(type: String, helper: ApiHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LastChangesBackend1801756021[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LastChangesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: LastChangesRequest, context: SessionContext): GwtRpcResponseList&lt;ChangeLogInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- findChangeLog(request: LastChangesRequest): List&lt;ChangeLog&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LastChangesRequest524416317[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LastChangesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iObjectId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iObjectType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOptions: Map&lt;String, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createRequest(objectType: String, objectId: Long, options: String...): LastChangesRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOption(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOption(name: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasOption(name: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LastLikeCourseDemandDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LastLikeCourseDemandDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LastLikeCourseDemandExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LastLikeCourseDemandExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LastLikeCourseDemandImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LastLikeCourseDemandImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   courseOfferings: HashMap&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   externalIdCourseNumber: HashMap&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   externalIdCoursePermId: HashMap&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   externalIdSubjectArea: HashMap&lt;String, SubjectArea&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   manager: TimetableManager [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   subjectAreas: HashMap&lt;String, SubjectArea&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   trimLeadingZerosFromExternalId: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># fetchStudent(externalId: String, sessionId: Long): Student</TD></TR>
<TR><TD ALIGN="LEFT" >- loadCourseOfferings(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadCourses(studentEl: Element, student: Student, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadSubjectAreas(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LdapExternalUidLookup1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LdapExternalUidLookup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doLookup(searchId: String): UserInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LdapExternalUidTranslation1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LdapExternalUidTranslation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ ext2uid(puid: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ translate(uid: String, source: Source, target: Source): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ uid2ext(uid: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LearningCommunityReservationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LearningCommunityReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LearningManagementSystemInfo629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LearningManagementSystemInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(user: UserContext): List&lt;LearningManagementSystemInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List&lt;LearningManagementSystemInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySessionIdAndReference(sessionId: Long, reference: String): LearningManagementSystemInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDefaultIfExists(sessionId: Long): LearningManagementSystemInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ isLmsInfoDefinedForSession(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isLmsInfoDefinedForSession(hibSession: Session, sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isUsed(hibSession: Session): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LearningManagementSystemInfoDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LearningManagementSystemInfoDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LearningManagementSystemInfos1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LearningManagementSystemInfos</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(lmsInfo: LearningManagementSystemInfo, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(lmsInfo: LearningManagementSystemInfo, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LimitAndProjectionSnapshotException1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LimitAndProjectionSnapshotException</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListAcademicClassifications21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListAcademicClassifications</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListAcademicClassificationsBackend1754754932[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListAcademicClassificationsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ListAcademicClassifications, context: SessionContext): GwtRpcResponseList&lt;AcademicClassificationInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListAcademicSessions2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListAcademicSessions</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(command: ListAcademicSessions, context: SessionContext): GwtRpcResponseList&lt;AcademicSession&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSession(hibSession: Session, term: String): Session</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListAcademicSessions918787286[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListAcademicSessions</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iSource: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTerm: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListClasses209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListClasses</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourse: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Collection&lt;ClassAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ forCourseAndStudent(course: String, studentId: Long): ListClasses</TD></TR>
<TR><TD ALIGN="LEFT" ># isAllowDisabled(enrollments: XEnrollments, student: XStudent, offering: XOffering, course: XCourseId, config: XConfig, section: XSection): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># isAvailable(enrollments: XEnrollments, student: XStudent, offering: XOffering, course: XCourse, config: XConfig, section: XSection, enrollment: XEnrollment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListClasses21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListClasses</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourse: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListClassesBackend1754754932[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListClassesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ListClasses, context: SessionContext): GwtRpcResponseList&lt;ClassAssignment&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListCourseOfferings209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListCourseOfferings</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iFilterIM: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMatcher: CourseMatcher [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iQuery: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRequest: Request [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: XStudent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># convert(c: XCourse, server: OnlineSectioningServer): CourseAssignment</TD></TR>
<TR><TD ALIGN="LEFT" ># customCourseLookup(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;CourseAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Collection&lt;CourseAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ forQuery(query: String): ListCourseOfferings</TD></TR>
<TR><TD ALIGN="LEFT" >+ forRequest(request: Request): ListCourseOfferings</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): ListCourseOfferings</TD></TR>
<TR><TD ALIGN="LEFT" ># listCourses(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;CourseAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListCourseOfferings21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListCourseOfferings</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListCoursesBackend1754754932[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListCoursesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ListCourseOfferings, context: SessionContext): GwtRpcResponseList&lt;CourseAssignment&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListCurricula21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListCurricula</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourse: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListCurriculaBackend1754754932[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListCurriculaBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ListCurricula, context: SessionContext): GwtRpcResponseList&lt;CurriculumInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListEnrollments209857912[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListEnrollments</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCanEditMyStudents: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iCanEditOtherStudents: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanRegister: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanShowExtIds: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanUseAssistant: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iIsAdmin: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iIsAdvisor: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectionId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canRegister(canRegister: boolean): ListEnrollments</TD></TR>
<TR><TD ALIGN="LEFT" >+ canShowExternalIds(canShowExtIds: boolean): ListEnrollments</TD></TR>
<TR><TD ALIGN="LEFT" >+ canUseAssistant(canUseAssistant: boolean): ListEnrollments</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;Enrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ forOffering(offeringId: Long): ListEnrollments</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListItem723731434[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListItem</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(item: ListItem): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListSolutionsBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListSolutionsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ListSolutionsRequest, context: SessionContext): ListSolutionsResponse</TD></TR>
<TR><TD ALIGN="LEFT" ># fillAvailableOperations(response: ListSolutionsResponse, context: SessionContext, solver: SolverProxy)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillConfigurations(response: ListSolutionsResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillHosts(response: ListSolutionsResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillOwners(response: ListSolutionsResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillSelectedSolutions(response: ListSolutionsResponse, context: SessionContext, selectedIds: Set&lt;Long&gt;, solver: SolverProxy)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillSolutions(response: ListSolutionsResponse, context: SessionContext, selectedIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillSolverInfos(response: ListSolutionsResponse, context: SessionContext, solver: SolverProxy)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillSolverLog(response: ListSolutionsResponse, context: SessionContext, solver: SolverProxy)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillSolverStatus(response: ListSolutionsResponse, context: SessionContext, solver: SolverProxy)</TD></TR>
<TR><TD ALIGN="LEFT" ># fix(pref: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListSolutionsRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListSolutionsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConfigurationId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHost: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperation: SolutionOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolutionIds: List&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ SolutionOperation(operation: SolutionOperation)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSolutionId(solutionId: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListSolutionsResponse926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListSolutionsResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConfigurationId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConfigurations: List&lt;SolverConfiguration&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCurrentSolution: SolutionInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iErrors: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHost: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHosts: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLoadDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLog: List&lt;ProgressMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperation: SolutionOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperations: Map&lt;Long, Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPageMessages: List&lt;PageMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedSolutions: List&lt;SolutionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolverOwners: List&lt;SolverOwner&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolverProgress: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolverStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuccess: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWorking: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addConfiguration(config: SolverConfiguration)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addError(error: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addHost(host: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addHost(index: int, host: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMessage(level: int, date: Date, message: String, trace: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ addOwnerId(ownerId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPageMessage(message: PageMessage)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSelectedSolution(selected: SolutionInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSolverOwner(solverOwner: SolverOwner)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canExecute(solutionId: Long, operation: SolutionOperation): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfiguration(id: Long): SolverConfiguration</TD></TR>
<TR><TD ALIGN="LEFT" >+ getErrorMessage(separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverOwner(id: Long): SolverOwner</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoadAllScriptsBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoadAllScriptsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: LoadAllScriptsRpcRequest, context: SessionContext): GwtRpcResponseList&lt;ScriptInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(s: Script, context: SessionContext): ScriptInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoadAllScriptsRpcRequest15436791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoadAllScriptsRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoadDataBackend1850307226[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoadDataBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: LoadDataRpcRequest, context: SessionContext): AssignClassInstructorsInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoadDataBackend330628327[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoadDataBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: LoadDataRpcRequest, context: SessionContext): SimpleEditInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoadDataRpcRequest2051236629[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoadDataRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConfigIdStr: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadData(configIdStr: String): LoadDataRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoadDataRpcRequest745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoadDataRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: String[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadData(type: String): LoadDataRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadData(type: String, filter: String[]): LoadDataRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoadRecordBackend330628327[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoadRecordBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: LoadRecordRpcRequest, context: SessionContext): Record</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoadRecordRpcRequest745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoadRecordRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRecord: Record [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadRecord(type: String, record: Record): LoadRecordRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoadingWidget864400258[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoadingWidget</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCancel: HTML [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCancelTimer: Timer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExecutionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iImage: Image [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: HTML [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPanel: AbsolutePanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWarning: HTML [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWarningTimer: Timer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createTriggers()</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: GwtRpcRequest&lt;T&gt;, callback: AsyncCallback&lt;T&gt;, loadingMessage: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ hide()</TD></TR>
<TR><TD ALIGN="LEFT" ># hideCancel()</TD></TR>
<TR><TD ALIGN="LEFT" >+ hideLoading()</TD></TR>
<TR><TD ALIGN="LEFT" >+ show()</TD></TR>
<TR><TD ALIGN="LEFT" >+ show(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ show(message: String, warningDelayInMillis: int)</TD></TR>
<TR><TD ALIGN="LEFT" ># showCancel(executionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ showLoading(message: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LocalQueueProcessor1094993043[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LocalQueueProcessor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanContinue: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFinished: List&lt;QueueItem&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iItem: QueueItem [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQueue: Queue&lt;QueueItem&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRunningItem: RunningItem [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(item: QueueItem): QueueItem</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateId(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(id: String): QueueItem</TD></TR>
<TR><TD ALIGN="LEFT" >+ getByExecutionId(id: Long): QueueItem</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFile(id: String): DataSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ getItems(ownerId: String, sessionId: Long, type: String): List&lt;QueueItem&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(id: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopProcessor()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LocalSolverServer398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LocalSolverServer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseSolverContainer: CourseSolverContainer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamSolverContainer: ExaminationSolverContainer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorSchedulingContainer: InstructorSchedulingContainer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOnlineStudentSchedulingContainer: OnlineStudentSchedulingContainer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentSolverContainer: StudentSolverContainer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUpdater: Updater [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ crateServerProxy(address: Address): SolverServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getServers(onlyAvailable: boolean): List&lt;SolverServer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ shutdown()</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolver(type: SolverType, id: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Location629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Location</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addExamPreference(period: ExamPeriod, preference: PreferenceLevel)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTofeatures(roomFeature: RoomFeature)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearExamPreferences(examType: ExamType)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearExamPreferences(examTypeId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllAvailableExamLocations(period: ExamPeriod): TreeSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllEventRooms(departmentId: Long): List&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllExamLocations(sessionId: Long, examType: ExamType): TreeSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllExamLocations(sessionId: Long, examTypeId: Long): TreeSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllLocations(sessionId: Long): List&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllNonUniversityLocations(sessionId: Long): List&lt;NonUniversityLocation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllRooms(sessionId: Long): List&lt;Room&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByName(hibSession: Session, sessionId: Long, name: String): Location</TD></TR>
<TR><TD ALIGN="LEFT" >+ findClassLocationTable(sessionId: Long, startSlot: int, length: int, dates: Vector&lt;Date&gt;): Hashtable&lt;Long, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findClassLocationTable(startSlot: int, length: int, dates: Vector&lt;Date&gt;): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findClassLocationTable(sessionId: Long, permanentIds: Set&lt;Long&gt;, startSlot: int, length: int, dates: List&lt;Date&gt;): Hashtable&lt;Long, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findEventTable(sessionId: Long, permanentIds: Set&lt;Long&gt;, startSlot: int, length: int, dates: List&lt;Date&gt;): Hashtable&lt;Long, Set&lt;Event&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findExamLocationTable(periodId: Long): Hashtable&lt;Long, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findNotAvailableExamLocations(periodId: Long): TreeSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignments(solution: Solution): Collection&lt;Assignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignments(solutionId: Collection&lt;Long&gt;): Collection&lt;Assignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDistance(other: Location): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDistance(rooms1: Collection, rooms2: Collection): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamPreference(period: ExamPeriod): PreferenceLevel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamPreferences(examType: ExamType): Hashtable&lt;ExamPeriod, PreferenceLevel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamPreferences(examTypeId: Long): Hashtable&lt;ExamPeriod, PreferenceLevel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamPreferencesAbbreviation(examType: ExamType): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamPreferencesAbbreviationHtml(examType: ExamType): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamPreferencesHtml(examType: ExamType): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExams(periodId: Long): List&lt;Exam&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFutureLocations(locationId: Long): List&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHtmlHint(preference: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getHtmlHintImpl(preference: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomPreference(department: Department): RoomPref</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomPreferenceLevel(department: Department): PreferenceLevel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomSharingModel(editingUser: UserContext): RoomSharingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomSharingModel(editingUser: UserContext, departments: Collection): RoomSharingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomSharingModel(editingDepartmentIds: Set): RoomSharingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomSharingModel(editingDepartmentIds: Set, departments: Collection): RoomSharingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomSharingTable(departments: Collection): RequiredTimeTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomSharingTable(editingUser: UserContext, departments: Collection): RequiredTimeTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomSharingTable(editingUser: UserContext): RequiredTimeTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasFeature(roomFeature: RoomFeature): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasFeature(roomFeature: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasGlobalFeature(sisReference: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasGroup(roomGroup: RoomGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasGroup(roomGroup: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRoomDept(d: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExamEnabled(examType: ExamType): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isExamEnabled(examTypeId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ lookupFutureLocations(hibSession: Session, ids: List&lt;Long&gt;, sessionId: Long): Collection&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeFromfeatures(roomFeature: RoomFeature)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removedFromDepartment(department: Department, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveOrUpdate()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LocationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LocationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LocationMatcher29120908[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LocationMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFeatureTypes: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocation: Location [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- eq(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- has(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- starts(name: String, term: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LocationPicture629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LocationPicture</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(other: LocationPicture): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LocationPictureDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LocationPictureDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LogInfo1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LogInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLog: List&lt;Message&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getHtmlLog(level: int, includeDate: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHtmlLog(level: int, includeDate: boolean, fromStage: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLog(level: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Loggers1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Loggers</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># delete(name: String, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LookupRequest1251476307[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LookupRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOptions: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MD5PasswordEncoder355886009[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MD5PasswordEncoder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ encode(rawPassword: CharSequence): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEncodedPassword(rawPassword: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ matches(rawPassword: CharSequence, encodedPassword: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MajorInterface1351995911[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MajorInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iMajorCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMajorId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMajorName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(major: MajorInterface): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Majors1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Majors</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(major: PosMajor, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(major: PosMajor, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MakeAssignmentBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MakeAssignmentBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: MakeAssignmentRequest, context: SessionContext): GwtRpcResponseNull</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MakeAssignmentRequest1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MakeAssignmentRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignments: List&lt;SelectedAssignment&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAssignment(a: SelectedAssignment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAssignment(classId: Long): SelectedAssignment</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ManageInstructors2091179447[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ManageInstructors</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ManageSolvers676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ManageSolvers</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ManageSolversAction1976086910[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ManageSolversAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   host: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   onlineId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   owner: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   solver: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canDeselect(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOnClick(solverProperties: DataProperties, type: SolverType): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverConfiguration(solverProperties: DataProperties): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverMemory(solverProperties: DataProperties, type: SolverType): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverOperations(solverProperties: DataProperties, type: SolverType): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverOwner(solverProperties: DataProperties): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getSolverService(type: SolverType): SolverService&lt;? extends CommonSolverInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverSession(solverProperties: DataProperties): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverStatus(solver: CommonSolverInterface): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverTable(type: SolverType): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getTableName(type: SolverType): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ManagerRole629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ManagerRole</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ManagerRoleDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ManagerRoleDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ManagerSettings629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ManagerSettings</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getValue(mgr: TimetableManager, name: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValue(mgr: TimetableManager, name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValue(managerId: Long, name: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValue(managerId: Long, name: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ManagerSettingsDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ManagerSettingsDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MapPropertiesBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MapPropertiesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: MapPropertiesRequest, context: SessionContext): MapPropertiesInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MapPropertiesInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MapPropertiesInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iGoogleMap: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGoogleMapApiKey: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLeafletMap: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLeafletMapAttribution: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLeafletMapTiles: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MapPropertiesRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MapPropertiesRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MapTileCacheDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MapTileCacheDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MassCancelAction91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MassCancelAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCC: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubject: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ changeStatus(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: List&lt;Long&gt;): MassCancelAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MaxUsagePrefMix380494733[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MaxUsagePrefMix</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCnt: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iUsage: Hashtable [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPref(prologPref: String, count: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Meeting629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Meeting</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   location: Location [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(other: Meeting): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ dateStr(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOverlaps(meetingDate: Date, startPeriod: int, stopPeriod: int, locationPermId: Long): List&lt;Meeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTrueStartTime(class2eventDateMap: Class2EventDateMap): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTrueStopTime(class2eventDateMap: Class2EventDateMap): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ overlaps(meeting: Meeting): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- periodToTime(slot: Integer, offset: Integer): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ startTime(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ startTimeNoOffset(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopTime(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopTimeNoOffset(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeetingConflictInterface4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeetingConflictInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEnrollment: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventType: EventType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: List&lt;ContactInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSponsor: SponsoringOrganizationInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addInstructor(instructor: ContactInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(conflict: MeetingInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorEmails(separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorNames(separator: String, messages: GwtMessages): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeetingCountingDuration1488568904[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeetingCountingDuration</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(minutes: int, semesterMinutes: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDates(minutes: int, datePattern: DatePattern, dayCode: int, minutesPerMeeting: int): List&lt;Date&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayCodes(minutes: int, datePattern: DatePattern, timePattern: TimePattern): Set&lt;Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMaxMeetings(minutes: int, minutesPerMeeting: int): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ isValidCombination(minutes: int, datePattern: DatePattern, timePattern: TimePattern): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isValidSelection(minutes: int, datePattern: DatePattern, timePattern: TimePattern, dayCode: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># nbrMeetings(datePattern: DatePattern, dayCode: int): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeetingDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeetingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeetingHours1488568904[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeetingHours</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iLowerBound: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMinutesPerHour: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iUpperBound: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(hours: int, semesterMinutes: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getArrangedHours(hours: int, datePattern: DatePattern): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExactTimeMinutesPerMeeting(hours: int, datePattern: DatePattern, dayCode: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMaxMeetings(hours: int, minutesPerMeeting: int): Integer</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeetingInterface4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeetingInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApprovalDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iApprovalStatus: ApprovalStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAutomaticApproval: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanApprove: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanCancel: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanDelete: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEdit: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanInquire: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConflicts: Set&lt;MeetingConflictInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDayOfWeek: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDayOfYear: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEndOffset: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEndSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGridIndex: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocation: ResourceInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetingContacts: Set&lt;ContactInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetingDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPast: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartOffset: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartTime: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStopTime: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStyle: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addConflict(conflict: MeetingConflictInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMeetingContact(contact: ContactInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(meeting: MeetingInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllocatedTime(constants: GwtConstants): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndTime(constants: GwtConstants, useOffsets: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLocationName(msg: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLocationNameWithHint(msg: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMeetingContacts(separator: String, msg: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMeetingTime(constants: GwtConstants): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartTime(constants: GwtConstants, useOffsets: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ inConflict(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ inConflict(meeting: MeetingInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ overlapsWith(meeting: MeetingInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameMeetingContacts(m: MeetingInterface): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeetingMinutes1488568904[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeetingMinutes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iLowerBound: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iUpperBound: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(minutes: int, semesterMinutes: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getArrangedHours(minutes: int, datePattern: DatePattern): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExactTimeMinutesPerMeeting(minutes: int, datePattern: DatePattern, dayCode: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMaxMeetings(minutes: int, minutesPerMeeting: int): Integer</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeetingTimeBlock1202051522[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeetingTimeBlock</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iEnd: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iEventId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iEventName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iEventType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLocationPermanentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMeetingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStart: Date [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(block: TimeBlock): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MenuBackend1058982626[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MenuBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iRoot: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >- check(conditionElement: Element): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: MenuRpcRequest, context: SessionContext): GwtRpcResponseList&lt;MenuInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- getMenu(menuElement: Element): MenuInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- merge(menu: Element, custom: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MenuInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MenuInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iGWT: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHash: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: Map&lt;String, List&lt;String&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubMenus: List&lt;MenuInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTarget: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addParameter(name: String, value: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSubMenu(menu: MenuInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameters(encoder: ValueEncoder): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getURL(encoder: ValueEncoder): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MenuRpcRequest1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MenuRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MessageInterface4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MessageInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLevel: Level [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MessageLogAppender1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MessageLogAppender</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iHost: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinLevel: Level [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSaver: Saver [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ append(event: LogEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MessageLogDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MessageLogDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MidtermExamEventDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MidtermExamEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MidtermPeriodPreferenceModel629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MidtermPeriodPreferenceModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iDates: TreeSet&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamBeginDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamType: ExamType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLength: Hashtable&lt;Integer, Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLocation: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPeriod: ExamPeriod [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPeriods: TreeSet [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPreferences: Hashtable&lt;Integer, Hashtable&lt;Integer, String&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStarts: TreeSet&lt;Integer&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getBorder(day: int, month: int, start: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getBorderArray(start: Integer): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getColor(pref: Integer): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDate(dateOffset: Integer): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDateOffset(day: int, month: int): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >- getLabel(fDate: int, lDate: int, prefs: Hashtable&lt;Integer, String&gt;, html: boolean, color: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getPattern(start: Integer): String</TD></TR>
<TR><TD ALIGN="LEFT" >- invertIfNeeded()</TD></TR>
<TR><TD ALIGN="LEFT" >- isAllProhibited(start: Integer): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(pg: PreferenceGroup)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(location: Location)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(request: HttpServletRequest)</TD></TR>
<TR><TD ALIGN="LEFT" >+ print(editable: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ print(editable: boolean, length: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(preferences: Set, pg: PreferenceGroup)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(location: Location)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MinMaxPrefMix380494733[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MinMaxPrefMix</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCnt: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMax: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMin: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPref(prologPref: String, count: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Minors1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Minors</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(minor: PosMinor, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(minor: PosMinor, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MinutesPerWeek1488568904[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MinutesPerWeek</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getArrangedHours(minsPerWeek: int, datePattern: DatePattern): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDates(minsPerWeek: int, datePattern: DatePattern, dayCode: int, minutesPerMeeting: int): List&lt;Date&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayCodes(minsPerWeek: int, datePattern: DatePattern, timePattern: TimePattern): Set&lt;Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExactTimeMinutesPerMeeting(minsPerWeek: int, datePattern: DatePattern, dayCode: int): int</TD></TR>
<TR><TD ALIGN="LEFT" ># hasDates(datePattern: DatePattern, dayCode: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isValidCombination(minsPerWeek: int, datePattern: DatePattern, timePattern: TimePattern): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isValidSelection(minsPerWeek: int, datePattern: DatePattern, timePattern: TimePattern, dayCode: int): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MultiRequest1458658222[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MultiRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClasses: List&lt;RequestedClass&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubparts: List&lt;IncludeLine&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addClass(clazz: RequestedClass)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSubpart(subpart: IncludeLine)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSubpart(id: Long): IncludeLine</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MultipleClassSetup317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MultipleClassSetup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstrOfferingConfig): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstrOfferingConfig&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MultipleClassSetupClassEdit317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MultipleClassSetupClassEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Class_&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MultipleClassSetupDepartment317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MultipleClassSetupDepartment</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NaturalOrderComparator442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NaturalOrderComparator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># charAt(s: String, i: int): char</TD></TR>
<TR><TD ALIGN="LEFT" >+ compare(a: String, b: String): int</TD></TR>
<TR><TD ALIGN="LEFT" ># compareRight(a: String, b: String): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Navigation779606258[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Navigation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getNext(context: SessionContext, level: int, id: Long): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPrevious(context: SessionContext, level: int, id: Long): Long</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NonUniversityLocation629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NonUniversityLocation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameNonUniversityLocationInSession(newSession: Session): NonUniversityLocation</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NonUniversityLocationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NonUniversityLocationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NonUniversityLocationDelete82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NonUniversityLocationDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: NonUniversityLocation): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;NonUniversityLocation&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NonUniversityLocationEdit82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NonUniversityLocationEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: NonUniversityLocation): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;NonUniversityLocation&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NonUniversityLocationPicture629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NonUniversityLocationPicture</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clonePicture(): NonUniversityLocationPicture</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NonUniversityLocationPictureDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NonUniversityLocationPictureDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotAssignedClasses676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotAssignedClasses</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotAssignedClassesBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotAssignedClassesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: NotAssignedClassesRequest, context: SessionContext): NotAssignedClassesResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotAssignedClassesFilterBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotAssignedClassesFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: NotAssignedClassesFilterRequest, context: SessionContext): NotAssignedClassesFilterResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotAssignedClassesFilterRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotAssignedClassesFilterRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotAssignedClassesFilterResponse926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotAssignedClassesFilterResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotAssignedClassesRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotAssignedClassesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: FilterInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotAssignedExaminations1066428263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotAssignedExaminations</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotTerm2060480431[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotTerm</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iTerm: Term [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ hasAttribute(attribute: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(m: TermMatcher): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(m: AmbigousTermMatcher): Boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NoteInterface4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NoteInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAttachment: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLink: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetings: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: NoteType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUser: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(note: NoteInterface): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotifyStudentAction91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotifyStudentAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDropEnrollment: XEnrollment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFailedCourseId: XCourseId [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFailedEnrollment: XEnrollment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFailedOffering: XOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFailure: SectioningException [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOldCourseId: XCourseId [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOldEnrollment: XEnrollment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOldOffering: XOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOldStudent: XStudent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReason: ReschedulingReason [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSourceAction: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ dropEnrollment(dropEnrollment: XEnrollment): NotifyStudentAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ failedEnrollment(failedOffering: XOffering, failedCourseId: XCourseId, failedEnrollment: XEnrollment, failure: Exception): NotifyStudentAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): NotifyStudentAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ fromAction(actionName: String): NotifyStudentAction</TD></TR>
<TR><TD ALIGN="LEFT" ># isEmailEnabled(server: OnlineSectioningServer, helper: OnlineSectioningHelper): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ oldEnrollment(oldOffering: XOffering, oldCourseId: XCourseId, oldEnrollment: XEnrollment): NotifyStudentAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ oldStudent(oldStudent: XStudent): NotifyStudentAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ rescheduling(reason: ReschedulingReason): NotifyStudentAction</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingCanLock317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingCanLock</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionOfferingEdit: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingCanUnlock317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingCanUnlock</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionOfferingEdit: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># getInstance(sessionId: Long): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingConsentType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingConsentType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getOfferingConsentTypeForReference(referenceString: String): OfferingConsentType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingConsentTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingConsentTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingConsentTypeInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingConsentTypeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingConsentTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingConsentTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(consent: OfferingConsentType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(consent: OfferingConsentType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingCoordinator629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingCoordinator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: OfferingCoordinator): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingCoordinatorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingCoordinatorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingDelete317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingEdit317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingEnrollments539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingEnrollments</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingLockNeeded317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingLockNeeded</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># getInstance(sessionId: Long): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingLockNeededLimitedEdit317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingLockNeededLimitedEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># getInstance(sessionId: Long): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingLockNeededOnlyWhenWaitListing317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingLockNeededOnlyWhenWaitListing</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingMakeNotOffered317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingMakeNotOffered</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingMakeNotOfferedNoEnrollmentCheck317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingMakeNotOfferedNoEnrollmentCheck</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OfferingMakeOffered317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OfferingMakeOffered</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OnlineSectioningLogDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OnlineSectioningLogDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OnlineSectioningLogger1032738488[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OnlineSectioningLogger</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iActions: List&lt;Action&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iActive: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnabled: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLogLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOut: PrintWriter [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># getEnrollmentMessage(action: Action): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMessage(action: Action): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getRequestMessage(action: Action): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getSelectedMessage(action: Action): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ record(log: Log)</TD></TR>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
<TR><TD ALIGN="LEFT" >+ startLogger()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopLogger()</TD></TR>
<TR><TD ALIGN="LEFT" ># time(slot: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OnlineStudentSchedulingConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OnlineStudentSchedulingConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># checkRequest(request: CourseRequestInterface, cx: StudentSectioningContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPost(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># execute(helper: ApiHelper, type: Flag)</TD></TR>
<TR><TD ALIGN="LEFT" ># getRequest(cx: StudentSectioningContext, helper: ApiHelper): CourseRequestInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OnlineStudentSchedulingContainer398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OnlineStudentSchedulingContainer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iGlobalLock: ReentrantReadWriteLock [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iInstances: Hashtable&lt;Long, OnlineSectioningServer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUpdaters: Hashtable&lt;Long, OnlineStudentSchedulingUpdater&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canCreateSolver(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ createInstance(academicSessionId: Long, config: DataProperties): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSolver(sessionId: String, config: DataProperties): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstance(sessionId: Long): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMemUsage(user: String): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getServerContext(academicSessionId: Long): OnlineSectioningServerContext</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(sessionId: String): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSolver(sessionId: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unload(academicSessionId: Long, interrupt: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadAll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolver(sessionId: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OnlineStudentSchedulingContainerRemote398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OnlineStudentSchedulingContainerRemote</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCacheManager: EmbeddedCacheManager [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLockService: LockService [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- createCacheManagerIfNeeded()</TD></TR>
<TR><TD ALIGN="LEFT" >+ createProxy(address: Address, user: String): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ createProxy(addresses: Collection&lt;Address&gt;, user: String): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ createRemoteSolver(sessionId: String, config: DataProperties, caller: Address): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispatch(address: Address, sessionId: String, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispatch(addresses: Collection&lt;Address&gt;, sessionId: String, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ getServerContext(academicSessionId: Long): OnlineSectioningServerContext</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasMaster(sessionId: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ invoke(method: String, sessionId: String, types: Class[], args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OnlineStudentSchedulingGenericUpdater398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OnlineStudentSchedulingGenericUpdater</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iContainer: OnlineStudentSchedulingContainerRemote [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLog: Log [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPause: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRun: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSleepTimeInSeconds: long [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkForNewServers()</TD></TR>
<TR><TD ALIGN="LEFT" >+ pauseUpading()</TD></TR>
<TR><TD ALIGN="LEFT" >+ resumeUpading()</TD></TR>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopUpdating()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OnlineStudentSchedulingUpdater398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OnlineStudentSchedulingUpdater</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iContainer: OnlineStudentSchedulingContainer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLog: Log [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRun: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSleepTimeInSeconds: long [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkForExpiredReservations(server: OnlineSectioningServer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkForUpdates(server: OnlineSectioningServer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ persistExpectedSpaces(server: OnlineSectioningServer)</TD></TR>
<TR><TD ALIGN="LEFT" ># processChange(server: OnlineSectioningServer, q: StudentSectioningQueue)</TD></TR>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopUpdating(interrupt: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># user(): Entity</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Option1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Option</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iMultiSelect: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValues: List&lt;IdValue&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ values(): List&lt;IdValue&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OrTerm2060480431[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OrTerm</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ match(m: TermMatcher): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(m: AmbigousTermMatcher): Boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OtherAuthorityWithFilter1549462339[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OtherAuthorityWithFilter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: Qualifiable[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOther: OtherAuthority [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ isMatch(authority: UserAuthority): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OverrideReservationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OverrideReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OverrideType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OverrideType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: OverrideType): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByReference(reference: String): OverrideType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OverrideTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OverrideTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OverrideTypeInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OverrideTypeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReference: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

OverrideTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)OverrideTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: OverrideType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: OverrideType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PDFMidtermPeriodPreferenceModel2097001998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PDFMidtermPeriodPreferenceModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># toA(fDate: int, lDate: int, prefs: Hashtable&lt;Integer, String&gt;): List&lt;A&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># toA(): A</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PDFPrinter2109884156[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PDFPrinter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCheckLast: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iElements: List&lt;Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHiddenColumns: Set&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastLine: Object[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxWidth: float[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOutput: OutputStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTable: PdfPTable [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ close()</TD></TR>
<TR><TD ALIGN="LEFT" >+ flush()</TD></TR>
<TR><TD ALIGN="LEFT" >+ hideColumn(col: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHeader(fields: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printLine(fields: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printLine(fields: A...)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDDeleteRpcRequest1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDDeleteRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDExecuteBackend1633576887[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDExecuteBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: PITDExecuteRpcRequest, context: SessionContext): Table</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDExecuteRpcRequest1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDExecuteRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iParameters: List&lt;IdValue&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReport: Report [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addParameter(value: String, text: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDParametersBackend1633576887[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDParametersBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: PITDParametersRpcRequest, context: SessionContext): PITDParametersInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- getLocalizedText(parameter: Parameter): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDParametersInterface1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDParametersInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFlags: List&lt;Flag&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: List&lt;Parameter&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFlag(flag: Flag)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParameter(parameter: Parameter)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDParametersRpcRequest1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDParametersRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDQueriesBackend1633576887[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDQueriesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: PITDQueriesRpcRequest, context: SessionContext): GwtRpcResponseList&lt;Report&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDQueriesRpcRequest1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDQueriesRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDSetBackBackend1633576887[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDSetBackBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: PITDSetBackRpcRequest, context: SessionContext): GwtRpcResponseNull</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDSetBackRpcRequest1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDSetBackRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iHistory: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addId(id: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PITDStoreRpcRequest1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PITDStoreRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PageAccessException1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PageAccessException</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PageMessage366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PageMessage</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: PageMessageType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUrl: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PageName2051236629[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PageName</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPlural: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSingular: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ plural(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ singular(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PageName745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PageName</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPlural: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSingular: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ plural(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ singular(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PageNameBackend1850307226[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PageNameBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetPageNameRpcRequest, context: SessionContext): PageName</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PageNameBackend330628327[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PageNameBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetPageNameRpcRequest, context: SessionContext): PageName</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PageNameInterface1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PageNameInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iHelpUrl: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PageNameRpcRequest1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PageNameRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Parameter1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Parameter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDefault: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMultiSelect: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOptions: Set&lt;ListItem&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addOption(value: String, text: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Parameter): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Parameter1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Parameter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDefaultTextValue: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMultiSelect: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTextField: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValues: List&lt;IdValue&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ values(): List&lt;IdValue&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PasswordChangeBackend1801756021[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PasswordChangeBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iRequest: HttpServletRequest [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- encode(password: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: PasswordChangeRequest, context: SessionContext): PasswordChangeResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PasswordChangeRequest1551131910[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PasswordChangeRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNewPassword: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOldPassword: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReset: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUsername: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ changePassword(username: String, oldPasswd: String, newPasswd: String): PasswordChangeRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetPassword(email: String): PasswordChangeRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PasswordChangeResponse1551131910[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PasswordChangeResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PeopleLookupBackend244315587[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PeopleLookupBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLdapTemplate: LdapTemplate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSearchControls: SearchControls [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTranslation: ExternalUidTranslation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doLookup(uid: String): UserInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: LookupRequest, context: SessionContext): GwtRpcResponseList&lt;PersonInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># findPeopleFromAdvisors(context: SearchContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># findPeopleFromEventContact(context: SearchContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># findPeopleFromInstructors(context: SearchContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># findPeopleFromInstructors(context: SearchContext, checkStaffDepartment: boolean): int</TD></TR>
<TR><TD ALIGN="LEFT" ># findPeopleFromLdap(context: SearchContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># findPeopleFromStaff(context: SearchContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># findPeopleFromStudents(context: SearchContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># findPeopleFromTimetableManagers(context: SearchContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># getAcademicSessionId(context: SessionContext): Long</TD></TR>
<TR><TD ALIGN="LEFT" ># translate(uid: String, source: Source): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PeriodInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PeriodInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iDate: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iEndTime: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStartTime: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PeriodPreferenceModel629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PeriodPreferenceModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowHard: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowRequired: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDF: SimpleDateFormat[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDates: TreeSet [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamType: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPeriod: ExamPeriod [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPeriods: TreeSet [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferences: Hashtable [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStarts: TreeSet [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getBorder(day: int, time: int): Color</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayHeader(day: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndTime(time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFieldText(day: int, time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(day: int, time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferenceColor(pref: String): Color</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferenceText(pref: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSelectionLimits(idx: int): int[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSelectionName(idx: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartTime(time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPreference(pref: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEditable(day: int, time: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPreferenceEnabled(pref: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(pg: PreferenceGroup)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(location: Location)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(preferences: Set, pg: PreferenceGroup)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(location: Location)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PeriodPreferenceModel759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PeriodPreferenceModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignedPeriodId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDays: TreeSet&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultPreference: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamType: ExamTypeInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHorizontal: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocationId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iModel: Map&lt;Integer, Map&lt;Integer, Long&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPeriods: List&lt;PeriodInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferences: List&lt;PreferenceInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReqConfirmation: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedPreference: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStarts: TreeSet&lt;Integer&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPeriod(period: PeriodInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPreference(preference: PreferenceInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ char2id(ch: char): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLength(slot: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPeriod(day: int, slot: int): PeriodInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(id: Long): PreferenceInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(code: String): PreferenceInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(day: int, slot: int): PreferenceInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ id2char(id: Long): char</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAssigned(period: PeriodInterface): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PeriodPreferenceRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PeriodPreferenceRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iExamTypeId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iModel: PeriodPreferenceModel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperation: Operation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSourceId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ load(sessionId: Long, locationId: Long, examTypeId: Long): PeriodPreferenceRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(locationId: Long, examTypeId: Long): PeriodPreferenceRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadForExam(examId: Long, examTypeId: Long): PeriodPreferenceRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(sessionId: Long, locationId: Long, examTypeId: Long, model: PeriodPreferenceModel): PeriodPreferenceRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(locationId: Long, examTypeId: Long, model: PeriodPreferenceModel): PeriodPreferenceRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PeriodPreferencesBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PeriodPreferencesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   examinationSolverService: SolverService&lt;ExamSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createPeriodPreferenceModel(session: Session, type: ExamType, context: SessionContext, roomPref: boolean): PeriodPreferenceModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: PeriodPreferenceRequest, context: SessionContext): PeriodPreferenceModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadExamPeriodPreferences(request: PeriodPreferenceRequest, context: SessionContext): PeriodPreferenceModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadExamPeriodPreferences(exam: Exam, type: ExamType, context: SessionContext): PeriodPreferenceModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadExamPeriodPreferences(solver: ExamSolverProxy, exam: Exam, type: ExamType, context: SessionContext): PeriodPreferenceModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadPeriodPreferences(request: PeriodPreferenceRequest, context: SessionContext): PeriodPreferenceModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadPeriodPreferences(location: Location, type: ExamType, context: SessionContext): PeriodPreferenceModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ savePeriodPreferences(request: PeriodPreferenceRequest, context: SessionContext): PeriodPreferenceModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ savePeriodPreferences(location: Location, type: ExamType, model: PeriodPreferenceModel, context: SessionContext): PeriodPreferenceModel</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PeriodicTaskDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PeriodicTaskDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Permissions1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Permissions</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># getRoles(context: SessionContext, hibSession: Session, read: boolean): List&lt;Roles&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PermissionsExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PermissionsExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PermissionsImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PermissionsImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PersistExpectedSpacesAction91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PersistExpectedSpacesAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOfferingIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forOfferings(offeringIds: Long...): PersistExpectedSpacesAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ forOfferings(offeringIds: Collection&lt;Long&gt;): PersistExpectedSpacesAction</TD></TR>
<TR><TD ALIGN="LEFT" >- getLimit(clazz: Class_): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ persistExpectedSpaces(offeringId: Long, needLock: boolean, server: OnlineSectioningServer, helper: OnlineSectioningHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PersonalSchedule2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PersonalSchedule</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PersonalScheduleLookup2084304250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PersonalScheduleLookup</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PersonalizedExamReportAction1976086910[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PersonalizedExamReportAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canDisplay(session: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDaysCode(meetings: Set): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorClassSchedule(html: boolean, instructor: DepartmentalInstructor): PdfWebTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorConflits(html: boolean, exams: TreeSet&lt;ExamAssignmentInfo&gt;, instructor: DepartmentalInstructor): PdfWebTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorExamSchedule(html: boolean, exams: TreeSet&lt;ExamAssignmentInfo&gt;, instructor: DepartmentalInstructor): PdfWebTable</TD></TR>
<TR><TD ALIGN="LEFT" ># getMeetingComparable(section: ExamSectionInfo): long</TD></TR>
<TR><TD ALIGN="LEFT" ># getMeetingComparable(clazz: Class_): long</TD></TR>
<TR><TD ALIGN="LEFT" ># getMeetingInstructor(clazz: Class_): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getMeetingRooms(html: boolean, clazz: Class_): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getMeetingTime(section: ExamSectionInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getMeetingTime(clazz: Class_): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSessions(html: boolean, sessions: HashSet&lt;Session&gt;, name: String, sessionId: Long): PdfWebTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentClassSchedule(html: boolean, student: Student): PdfWebTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentConflits(html: boolean, exams: TreeSet&lt;ExamAssignmentInfo&gt;, student: Student): PdfWebTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentConflits(html: boolean, exams: TreeSet&lt;ExamAssignmentInfo&gt;, instructor: DepartmentalInstructor): PdfWebTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentExamSchedule(html: boolean, exams: TreeSet&lt;ExamAssignmentInfo&gt;, student: Student): PdfWebTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPersonalReport(userId: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ printInstructorSchedule(file: File, instructor: DepartmentalInstructor, exams: HashSet&lt;Exam&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printStudentSchedule(file: File, student: Student, exams: HashSet&lt;ExamOwner&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ translate(uid: String, target: Source): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PersonalizedExamReportForm1821209100[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PersonalizedExamReportForm</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAdmin: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanExport: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFname: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLname: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLogout: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMname: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOp: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUid: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ reset()</TD></TR>
<TR><TD ALIGN="LEFT" >+ validate(action: UniTimeAction)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitClass629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitClass</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   locationPeriodUseMap: HashMap&lt;Long, HashSet&lt;Date&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   locationPermanentIdList: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   uniquePeriods: HashSet&lt;Date&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   weeklyClassHours: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   weeklyStudentClassHours: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- calculateWCH(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >- calculateWCHforLocationFromPeriods(location: Long, standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >- calculateWSCH(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >- calculateWSCHfromPeriodsForLocation(location: Long, standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ countRoomsForPeriod(period: Date): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPeriodEnrollmentsForCriteria(validRoomPermanentIds: HashSet&lt;Long&gt;, positionTypes: ArrayList&lt;Long&gt;): HashMap&lt;Date, Float&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllWeeklyClassHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllWeeklyRoomHoursFromUtilPeriodsForLocation(location: Long, standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllWeeklyStudentClassHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllWeeklyStudentClassHoursForLocation(location: Long, standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotOrganizedWeeklyClassHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotOrganizedWeeklyRoomHoursFromUtilPeriodsForLocation(location: Long, standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotOrganizedWeeklyStudentClassHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotOrganizedWeeklyStudentClassHoursForLocation(location: Long, standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrganizedWeeklyClassHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrganizedWeeklyRoomHoursFromUtilPeriodsForLocation(location: Long, standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrganizedWeeklyStudentClassHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrganizedWeeklyStudentClassHoursForLocation(location: Long, standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPeriodsForLocation(location: Long): HashSet&lt;Date&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeRoomData()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitClassDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitClassDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitClassEventDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitClassEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitClassInstructor629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitClassInstructor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   allWeeklyContactHours: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   allWeeklyStudentContactHours: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   organizedWeeklyContactHours: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   organizedWeeklyStudentContactHours: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- calculateAllWCH(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >- calculateAllWSCH(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >- calculateOrganizedWCH(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >- calculateOrganizedWSCH(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllWeeklyContactHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllWeeklyStudentContactHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrganizedWeeklyContactHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrganizedWeeklyStudentContactHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitClassInstructorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitClassInstructorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitClassMeetingDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitClassMeetingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitClassMeetingUtilPeriodDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitClassMeetingUtilPeriodDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitCourseOffering629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitCourseOffering</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitCourseOfferingDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitCourseOfferingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitDepartmentalInstructor629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitDepartmentalInstructor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   allWeeklyContactHours: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   allWeeklyStudentContactHours: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   organizedWeeklyContactHours: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   organizedWeeklyStudentContactHours: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getAllWeeklyContactHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllWeeklyStudentContactHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(instructorNameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrganizedWeeklyContactHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrganizedWeeklyStudentContactHours(standardMinutesInReportingHour: Float, standardWeeksInReportingTerm: Float): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitDepartmentalInstructorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitDepartmentalInstructorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitInstrOfferingConfigDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitInstrOfferingConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitInstructionalOfferingDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitInstructionalOfferingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitOfferingCoordinatorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitOfferingCoordinatorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitSchedulingSubpartDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitSchedulingSubpartDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitStudentAcadAreaMajorClassificationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitStudentAcadAreaMajorClassificationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitStudentAcadAreaMinorClassificationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitStudentAcadAreaMinorClassificationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitStudentClassEnrollmentDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitStudentClassEnrollmentDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PitStudentDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PitStudentDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PlacementMatcher648389124[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PlacementMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPlacement: Placement [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PointInTimeData629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PointInTimeData</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllForSession(acadSession: Session, hibSession: Session): ArrayList&lt;PointInTimeData&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllForSession(acadSession: Session): ArrayList&lt;PointInTimeData&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllForSession(acadSessionUniqueId: Long): ArrayList&lt;PointInTimeData&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllForSession(acadSessionUniqueId: Long, hibSession: Session): ArrayList&lt;PointInTimeData&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllSavedSuccessfullyForSession(acadSessionUniqueId: Long): ArrayList&lt;PointInTimeData&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllSavedSuccessfullyForSession(acadSessionUniqueId: Long, hibSession: Session): ArrayList&lt;PointInTimeData&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PointInTimeDataDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PointInTimeDataDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PointInTimeDataExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PointInTimeDataExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   academicAreaElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   academicAreasElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   academicClassificationElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   academicClassificationsElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   buildingElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   campusElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   campusesElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classDurationTypeElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classDurationTypesElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classEventElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   concentrationElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   courseTypeElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   courseTypesElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   creditTypeElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   creditTypesElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   creditUnitTypeElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   creditUnitTypesElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   datePatternElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   datePatternsElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   degreeElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   degreesElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   departmentElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   departmentalInstructorElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   departmentsElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructionalMethodElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructionalMethodsElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   locationElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   locationsElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   majorElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   majorsElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   minorElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   minorsElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   offeringsElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   positionTypeElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   positionTypesElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   programElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   programsElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   roomTypeElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   roomTypesElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   studentElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   studentsElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   subjectElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   teachingResponsibilitiesElement: Element [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   teachingResponsibilityElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   timePatternElements: HashMap&lt;Long, Element&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   timePatternsElement: Element [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- calcTotalMinPerMeeting(meeting: Meeting): int</TD></TR>
<TR><TD ALIGN="LEFT" >- configHasAtLeastOneStudentEnrolled(instrOfferingConfig: InstrOfferingConfig): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- exportAcadAreaMajorClassification(acadAreaMajorClassificationElement: Element, acm: StudentAreaClassificationMajor)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportAcadAreaMinorClassification(acadAreaMinorClassificationElement: Element, acm: StudentAreaClassificationMinor)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportAcademicArea(academicArea: AcademicArea)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportAcademicClassification(academicClassification: AcademicClassification)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportBuilding(building: Building)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportCampus(campus: Campus)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportClass(classElement: Element, clazz: Class_)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportClassDurationType(classDurationType: ClassDurationType)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportClassEvent(classEvent: ClassEvent, meeting: Meeting, location: Location)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportClassInstructor(instructorElement: Element, instructor: ClassInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportClassMeeting(meetingElement: Element, meeting: Meeting, clazz: Class_, location: Location)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportClassMeetingUtilPeriods(classMeetingElement: Element, meeting: Meeting, clazz: Class_)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportConcentration(conc: PosMajorConcentration)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportConfig(configElement: Element, config: InstrOfferingConfig, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportCourse(courseElement: Element, course: CourseOffering, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportCourseType(courseType: CourseType)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportCredit(subpartElement: Element, credit: CourseCreditUnitConfig)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportCreditType(creditType: CourseCreditType)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportCreditUnitType(creditUnitType: CourseCreditUnitType)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportDatePattern(datePattern: DatePattern)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportDegree(degree: Degree)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportDepartment(department: Department)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportDepartmentalInstructor(instructor: DepartmentalInstructor)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportInstructionalMethod(instructionalMethod: InstructionalMethod)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportInstructionalOffering(offeringsElement: Element, offering: InstructionalOffering, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportLocation(location: Location)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportMajor(major: PosMajor)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportMinor(minor: PosMinor)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportOfferingCoordinator(offeringCoordinatorElement: Element, oc: OfferingCoordinator, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportPositionType(positionType: PositionType)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportProgram(program: Program)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportRoomType(roomType: RoomType)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportStudent(student: Student)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportStudentClassEnrollment(studentClassEnrollment: StudentClassEnrollment)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportSubjectArea(subjectArea: SubjectArea)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportSubpart(subpartElement: Element, subpart: SchedulingSubpart, session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportTeachingResponsibility(responsibility: TeachingResponsibility)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportTimePattern(timePattern: TimePattern)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportTimePatternDays(timePatternDaysElement: Element, timePatternDays: TimePatternDays)</TD></TR>
<TR><TD ALIGN="LEFT" >- exportTimePatternTimes(timePatternTimesElement: Element, timePatternTimes: TimePatternTime)</TD></TR>
<TR><TD ALIGN="LEFT" >- findAcademicAreas(acadSession: Session): ArrayList&lt;AcademicArea&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- findClassEvents(acadSession: Session): ArrayList&lt;Object[]&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- findLocations(acadSession: Session): ArrayList&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- findOfferingsWithClasses(acadSession: Session): TreeSet&lt;InstructionalOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- findStudentClassEnrollments(acadSession: Session): ArrayList&lt;StudentClassEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- findTimePatterns(acadSession: Session): ArrayList&lt;TimePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PointInTimeDataImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PointInTimeDataImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   academicAreas: HashMap&lt;Long, AcademicArea&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   academicAreasByAbbv: HashMap&lt;String, AcademicArea&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   academicClassifications: HashMap&lt;Long, AcademicClassification&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   academicClassificationsByCode: HashMap&lt;String, AcademicClassification&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   buildings: HashMap&lt;Long, Building&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   buildingsByAbbv: HashMap&lt;String, Building&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classDurationTypes: HashMap&lt;String, ClassDurationType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classes: HashMap&lt;Long, Class_&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   concentrations: HashMap&lt;Long, PosMajorConcentration&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   concentrationsByCode: HashMap&lt;String, PosMajorConcentration&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   courseNumbersMustBeUnique: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   courseOfferings: HashMap&lt;Long, CourseOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   courseTypes: HashMap&lt;Long, CourseType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   courseTypesByRef: HashMap&lt;String, CourseType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   creditTypes: HashMap&lt;Long, CourseCreditType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   creditTypesByRef: HashMap&lt;String, CourseCreditType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   creditUnitTypes: HashMap&lt;Long, CourseCreditUnitType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   creditUnitTypesByRef: HashMap&lt;String, CourseCreditUnitType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   datePatterns: HashMap&lt;Long, DatePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   datePatternsByName: HashMap&lt;String, DatePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   departmentalInstructorsByName: HashMap&lt;String, DepartmentalInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   departments: HashMap&lt;Long, Department&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   departmentsByCode: HashMap&lt;String, Department&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instrOfferingConfigs: HashMap&lt;Long, InstrOfferingConfig&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructionalMethods: HashMap&lt;String, InstructionalMethod&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   instructionalOfferings: HashMap&lt;Long, InstructionalOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   itypes: HashMap&lt;String, ItypeDesc&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   locations: HashMap&lt;Long, Location&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   locationsByName: HashMap&lt;String, Location&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   majors: HashMap&lt;Long, PosMajor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   majorsByCode: HashMap&lt;String, PosMajor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   minors: HashMap&lt;Long, PosMinor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   minorsByCode: HashMap&lt;String, PosMinor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pitClasses: HashMap&lt;Long, PitClass&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pitCourseOfferings: HashMap&lt;Long, PitCourseOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pitDepartmentInstructors: HashMap&lt;Long, PitDepartmentalInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pointInTimeData: PointInTimeData [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   positionTypes: HashMap&lt;Long, PositionType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   positionTypesByRef: HashMap&lt;String, PositionType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   roomTypes: HashMap&lt;Long, RoomType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   roomTypesByRef: HashMap&lt;String, RoomType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   schedulingSubparts: HashMap&lt;Long, SchedulingSubpart&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   students: HashMap&lt;Long, Student&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   subjectAreas: HashMap&lt;String, SubjectArea&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   teachingResponsibilities: HashMap&lt;Long, TeachingResponsibility&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   teachingResponsibilitiesByRef: HashMap&lt;String, TeachingResponsibility&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   timePatterns: HashMap&lt;Long, TimePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   timePatternsByName: HashMap&lt;String, TimePattern&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- completeLoad()</TD></TR>
<TR><TD ALIGN="LEFT" >- elementAcadAreaMajorClassification(element: Element, s: PitStudent)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementAcadAreaMinorClassification(element: Element, s: PitStudent)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementAcademicArea(academicAreaElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementAcademicClassification(academicClassificationElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementBuilding(buildingElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementClass(classElement: Element, pitSchedulingSubpart: PitSchedulingSubpart)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementClassDurationType(classDurationTypeElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementClassEvent(classEventElement: Element, pc: PitClass)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementClassInstructor(classInstructorElement: Element, pitClass: PitClass)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementClassMeeting(classMeetingElement: Element, pce: PitClassEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementClassMeetingUtilPeriod(classMeetingUtilPeriodElement: Element, pitClassMeeting: PitClassMeeting)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementConcentration(major: PosMajor, concElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementCourse(courseElement: Element, pitInstructionalOffering: PitInstructionalOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementCourseType(courseTypeElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementCreditType(creditTypeElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementCreditUnitType(creditUnitTypeElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementDatePattern(datePatternElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementDepartment(departmentElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementDepartmentalInstructor(departmentalInstructorElement: Element, department: Department)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementEnrollment(element: Element, s: PitStudent)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementInstrOffrConfig(configElement: Element, pitInstructionalOffering: PitInstructionalOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementInstructionalMethod(instructionalMethodElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementMajor(majorElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementMinor(minorElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementNonUniversityLocation(nonUniversityLocationElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementOffering(instructionalOfferingElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementOfferingCoordinator(classInstructorElement: Element, pitInstructionalOffering: PitInstructionalOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementPositionType(positionTypeElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementRoom(roomElement: Element, building: Building)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementRoomType(roomTypeElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementStudent(studentElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementSubjectArea(subjectAreaElement: Element, department: Department)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementSubpart(subpartElement: Element, pitInstructionalOfferingConfig: PitInstrOfferingConfig, parentPitSubpart: PitSchedulingSubpart)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementTeachingResponsibility(teachingResponsibilityElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementTimePattern(timePatternElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementTimePatternDays(element: Element, tp: TimePattern)</TD></TR>
<TR><TD ALIGN="LEFT" >- elementTimePatternTime(element: Element, tp: TimePattern)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeClassDurationTypeData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeCourseTypeData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeCreditTypeData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeCreditUnitTypeData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeCurriculaData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeDatePatternData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeDateTimeFormats(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeDepartmentData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeInstructionalMethodData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeLoad(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeLocationData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializePositionTypeData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeRoomTypeData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># initializeSession(rootElement: Element, rootElementName: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># initializeSessionData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeSessionIndependentData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeTeachingResponsibilityData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- initializeTimePatternData(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># initializeTrimLeadingZeros()</TD></TR>
<TR><TD ALIGN="LEFT" >- loadDepartmentalInstructors(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingAcademicAreas(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingAcademicClassifications(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingBuildings(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingClasses(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingCourseOfferings(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingDatePatterns(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingDepartments(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingInstrOfferingConfigs(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingInstructionalOfferings(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingLocations(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingMajors(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingMinors(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingSchedulingSubparts(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingStudents(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingSubjectAreas(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadExistingTimePatterns(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadItypes()</TD></TR>
<TR><TD ALIGN="LEFT" >- loadOfferings(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadSetupData()</TD></TR>
<TR><TD ALIGN="LEFT" >- loadStudents(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- logXmlFileCreateInformation(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- postLoadAction()</TD></TR>
<TR><TD ALIGN="LEFT" >- preLoadAction()</TD></TR>
<TR><TD ALIGN="LEFT" >+ str2Slot(timeString: String, printOffset: Integer): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >- updateNormalizedPercentShare(pc: PitClass)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PointInTimeDataReportsException1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PointInTimeDataReportsException</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PointInTimeDataReportsExportToCSV1618705082[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PointInTimeDataReportsExportToCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(user: UserContext, out: Printer, report: Report, options: List&lt;IdValue&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >- length(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
<TR><TD ALIGN="LEFT" >- skip(t: Type, lazy: boolean): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PointInTimeDataSnapshots1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PointInTimeDataSnapshots</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(pointInTimeData: PointInTimeData, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(pointInTimeData: PointInTimeData, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PosMajor629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PosMajor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCode(sessionId: Long, code: String): PosMajor</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCodeAcadAreaAbbv(sessionId: Long, code: String, areaAbbv: String): PosMajor</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCodeAcadAreaAbbv(hibSession: Session, sessionId: Long, code: String, areaAbbv: String): PosMajor</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCodeAcadAreaId(sessionId: Long, code: String, areaId: Long): PosMajor</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalIdAcadAreaExternalId(sessionId: Long, externalId: String, academicArea: String): PosMajor</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalIdAcadAreaExternalId(hibSession: Session, sessionId: Long, externalId: String, academicArea: String): PosMajor</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPosMajorList(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ isUsed(hibSession: Session): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PosMajorConcentration629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PosMajorConcentration</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;PosMajorConcentration&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PosMajorConcentrationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PosMajorConcentrationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PosMajorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PosMajorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PosMajorImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PosMajorImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PosMinor629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PosMinor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCode(sessionId: Long, code: String): PosMinor</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCodeAcadAreaAbbv(sessionId: Long, code: String, areaAbbv: String): PosMinor</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByCodeAcadAreaId(sessionId: Long, code: String, areaId: Long): PosMinor</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PosMinorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PosMinorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PosMinorImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PosMinorImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PositionInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PositionInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iReference: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PositionInterface1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PositionInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSortOrder: Integer [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PositionType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PositionType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(): TreeSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ findById(uid: Long): PositionType</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByRef(ref: String): PositionType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PositionTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PositionTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PositionTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PositionTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(position: PositionType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(position: PositionType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PrefLevel21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PrefLevel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iColor: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Preference629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Preference</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ appliesTo(group: PreferenceGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSame(other: Preference): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceAbbv(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceAbbv(nameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceDescription(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceHtml(nameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceHtml(nameFormat: String, highlightClassPrefs: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceText(nameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceText(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceTitle(nameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceTitle(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ weakenHardPreferences(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceGroup629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceGroup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ effectiveDatePattern(): DatePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectivePreferences(type: Class, leadInstructors: Vector): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectivePreferences(type: Class, leadInstructors: Vector, fixDurationInTimePreferences: boolean): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectivePreferences(type: Class&lt;T&gt;): Set&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectivePreferences(type: Class, fixDurationInTimePreferences: boolean): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveTimePatternHtml(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveTimePatterns(): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEffectivePrefHtmlForPrefType(type: Class): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEffectivePrefHtmlForPrefType(type: Class, highlightClassPrefs: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEffectivePrefHtmlForPrefType(type: Class, timeVertical: boolean, gridAsText: boolean, timeGridSize: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEffectivePrefHtmlForPrefType(type: Class, nameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEffectivePrefHtmlForPrefType(type: Class, nameFormat: String, highlightClassPrefs: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEffectivePrefHtmlForPrefType(assignment: Assignment, type: Class, timeVertical: boolean, gridAsText: boolean, timeGridSize: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEffectivePrefHtmlForPrefType(assignment: Assignment, type: Class, timeVertical: boolean, gridAsText: boolean, timeGridSize: String, highlightClassPrefs: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPrefHtmlForPrefType(type: Class): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferences(type: Class&lt;T&gt;): Set&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferences(type: Class, appliesTo: PreferenceGroup): Set</TD></TR>
<TR><TD ALIGN="LEFT" >- htmlForPrefs(assignment: Assignment, prefList: Set, timeVertical: boolean, gridAsText: boolean, timeGridSize: String, nameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- htmlForPrefs(assignment: Assignment, prefList: Set, timeVertical: boolean, gridAsText: boolean, timeGridSize: String, nameFormat: String, highlightClassPrefs: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >- htmlForPrefs(assignment: Assignment, prefList: Set): String</TD></TR>
<TR><TD ALIGN="LEFT" >- htmlForTimePrefs(assignment: Assignment, timePrefList: Set, timeVertical: boolean, gridAsText: boolean, timeGridSize: String, highlightClassPrefs: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceGroupDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceGroupDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPreference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPreferenceText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iReference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iValue: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceInfo1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iComparable: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreference: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(pref: PreferenceInfo): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceInterface1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPreference: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceInterface1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iColor: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iColor: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceLevel629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceLevel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ awtPrefcolor(): Color</TD></TR>
<TR><TD ALIGN="LEFT" >+ char2prolog(charPref: char): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ combine(another: PreferenceLevel): PreferenceLevel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferenceLevel(id: int): PreferenceLevel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferenceLevel(prologId: String): PreferenceLevel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferenceLevelList(includeNotAvailable: boolean): List&lt;PreferenceLevel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ int2awtColor(intPref: int, neutralPref: Color): Color</TD></TR>
<TR><TD ALIGN="LEFT" >+ int2bgColor(intPref: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ int2color(intPref: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ int2prolog(intPref: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ int2string(intPref: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ prefcolor(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ prefcolorNeutralBlack(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ prolog2abbv(prologPref: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ prolog2awtColor(prologPref: String): Color</TD></TR>
<TR><TD ALIGN="LEFT" >+ prolog2bgColor(prologPref: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ prolog2char(prologPref: String): char</TD></TR>
<TR><TD ALIGN="LEFT" >+ prolog2color(prologPref: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ prolog2colorNohex(prologPref: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ prolog2int(prologPref: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ prolog2string(prologPref: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceLevelDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceLevelDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferenceLevels1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferenceLevels</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(pref: PreferenceLevel, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(pref: PreferenceLevel, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Preferences21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Preferences</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iItems: TreeSet&lt;IdLabel&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelections: List&lt;Selection&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addInstructorSelection(selection: Selection)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addItem(id: Long, label: String, description: String): IdLabel</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSelection(selection: Selection)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearSelections()</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(other: Preferences): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getItem(id: Long): IdLabel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSelection(item: Long): Selection</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeItem(id: Long): IdLabel</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferencesExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferencesExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   classCmp: Comparator [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   ioCmp: Comparator [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   proxy: CommitedClassAssignmentProxy [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   subpartCmp: Comparator [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># exportPrefGroup(parent: Element, group: PreferenceGroup)</TD></TR>
<TR><TD ALIGN="LEFT" ># exportPreference(parent: Element, preference: Preference): Element</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
<TR><TD ALIGN="LEFT" ># slot2time(slot: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PreferencesImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PreferencesImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBuildings: Map&lt;String, Building&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClasses: List&lt;Class_&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseOfferings: Map&lt;String, CourseOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDateFormat: SimpleDateFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePatterns: Map&lt;String, DatePattern&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: List&lt;Department&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistributionTypes: Map&lt;String, DistributionType&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamPeriods: Map&lt;String, ExamPeriod&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHHmm: DateFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorAttributes: Map&lt;String, InstructorAttribute&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: List&lt;DepartmentalInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocations: Map&lt;String, Location&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomFeatures: Map&lt;String, RoomFeature&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomGroups: Map&lt;String, RoomGroup&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: Map&lt;String, Room&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: Session [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubparts: List&lt;SchedulingSubpart&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeFormat: SimpleDateFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimePatterns: Map&lt;String, TimePattern&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># createPreference(element: Element, group: PreferenceGroup): Preference</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupAttribute(name: String, deptCode: String): InstructorAttribute</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupBuilding(abbv: String): Building</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupClass(element: Element): Class_</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupCourse(subjectAbbv: String, courseNbr: String): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupDatePattern(name: String): DatePattern</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupDepartment(element: Element): Department</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupDistributionType(name: String): DistributionType</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupExamPeriod(date: String, start: String, type: String): ExamPeriod</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupInstructor(element: Element): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupInstructor(externalId: String, deptCode: String): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupLocation(label: String, deptCode: String): Location</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupPrefGroup(element: Element): PreferenceGroup</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupRoom(buildingAbbv: String, roomNbr: String): Room</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupRoomFeature(name: String, deptCode: String): RoomFeature</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupRoomGroup(name: String, deptCode: String): RoomGroup</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupSubpart(element: Element): SchedulingSubpart</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupTimePattern(name: String): TimePattern</TD></TR>
<TR><TD ALIGN="LEFT" ># parseTime(timeString: String): Integer</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Program629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Program</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySession(hibSession: Session, sessionId: Long): List&lt;Program&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProgramDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProgramDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Programs1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Programs</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(program: Program, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(program: Program, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProgressMessage366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProgressMessage</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLevel: ProgressLogLevel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStackTrace: String[] [0..*]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectedStudentMatcher552368780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectedStudentMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iStudent: WeightedStudentId [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- eq(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- like(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ student(): WeightedStudentId</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Properties1458658222[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Properties</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iAttributes: List&lt;AttributeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iInstructors: List&lt;InstructorInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOffering: Offering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPreferences: List&lt;PreferenceInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iResponsibilities: List&lt;Responsibility&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAttribute(attribute: AttributeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructor(instructor: InstructorInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPreference(preference: PreferenceInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addResponsibility(responsibility: Responsibility)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttribute(id: Long): AttributeInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructor(id: Long): InstructorInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(id: Long): PreferenceInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getResponsibility(id: Long): Responsibility</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PropertiesInfo1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PropertiesInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ load(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Property535535422[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Property</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   bitField0_: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   key_: Object [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   memoizedIsInitialized: byte [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   value_: Object [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># internalGetFieldAccessorTable(): FieldAccessorTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ newBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ newBuilder(prototype: Property): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ newBuilderForType(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" ># newBuilderForType(parent: BuilderParent): Builder</TD></TR>
<TR><TD ALIGN="LEFT" ># newInstance(unused: UnusedPrivateParameter): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseDelimitedFrom(input: InputStream): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseDelimitedFrom(input: InputStream, extensionRegistry: ExtensionRegistryLite): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: ByteBuffer): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: ByteBuffer, extensionRegistry: ExtensionRegistryLite): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: ByteString): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: ByteString, extensionRegistry: ExtensionRegistryLite): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: byte[]): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(data: byte[], extensionRegistry: ExtensionRegistryLite): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(input: InputStream): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(input: InputStream, extensionRegistry: ExtensionRegistryLite): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(input: CodedInputStream): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseFrom(input: CodedInputStream, extensionRegistry: ExtensionRegistryLite): Property</TD></TR>
<TR><TD ALIGN="LEFT" >+ parser(): Parser&lt;Property&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ toBuilder(): Builder</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeTo(output: CodedOutputStream)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProxyHolder1058021598[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProxyHolder&lt;U extends Serializable, T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: U [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProxy: T [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ isValid(id: U): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PublishedSectioningSolutionsBackend373406240[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PublishedSectioningSolutionsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   studentSectioningSolverService: StudentSectioningSolverService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: PublishedSectioningSolutionsRequest, context: SessionContext): GwtRpcResponseList&lt;PublishedSectioningSolutionInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getConfig(data: byte[]): DataProperties</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PublishedSectioningSolutionsRequest1509627884[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PublishedSectioningSolutionsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperation: Operation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PurdueCourseDetailsProvider1860031534[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PurdueCourseDetailsProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseNumberLength: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalTermProvider: ExternalTermProvider [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCourseUrl(session: AcademicSessionInfo, subject: String, courseNbr: String): URL</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDetails(session: AcademicSessionInfo, subject: String, courseNbr: String): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getDetails(courseUrl: URL): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getTerm(session: AcademicSessionInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getYear(session: AcademicSessionInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QParams814171373[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QParams</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iParams: Map&lt;String, List&lt;String&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getParameter(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameterValues(name: String): String[]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Query1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Query</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFlags: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: Set&lt;Parameter&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addParameter(parameter: Parameter)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearParameters()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Query998479413[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Query</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iQuery: Term [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ hasAttribute(attr: String...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAttribute(attr: Collection&lt;String&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(m: TermMatcher): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(m: AmbigousTermMatcher): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- parse(query: String): Term</TD></TR>
<TR><TD ALIGN="LEFT" >- split(query: String, splits: String...): List&lt;String&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QueryEncoderBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QueryEncoderBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ decode(text: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ decode(text: String, hash: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ encode(text: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: EncodeQueryRpcRequest, context: SessionContext): EncodeQueryRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ hash(text: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >- secret(): SecretKey</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QueryInstance1209152950[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QueryInstance</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iExclude: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFrom: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iGroupBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iOrderBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iParams: Map&lt;String, Object&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSelect: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWhere: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ exclude(excludeOption: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ from(from: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ group(groupBy: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(limit: Integer): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ order(orderBy: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(hibSession: Session): Query</TD></TR>
<TR><TD ALIGN="LEFT" >+ set(param: String, value: Object): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(type: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ where(where: String): QueryInstance</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QueryInstance1219977658[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QueryInstance</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iExclude: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFrom: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iGroupBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iOrderBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iParams: Map&lt;String, Object&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSelect: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWhere: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ exclude(excludeOption: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ from(from: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ group(groupBy: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(limit: Integer): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ order(orderBy: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(hibSession: Session): Query</TD></TR>
<TR><TD ALIGN="LEFT" >+ set(param: String, value: Object): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(type: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ where(where: String): QueryInstance</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QueryInstance1868991608[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QueryInstance</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iExclude: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFrom: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iGroupBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iOrderBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iParams: Map&lt;String, Object&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSelect: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWhere: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ exclude(excludeOption: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ from(from: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ group(groupBy: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(limit: Integer): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ order(orderBy: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(hibSession: Session): Query</TD></TR>
<TR><TD ALIGN="LEFT" >+ set(param: String, value: Object): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(type: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ where(where: String): QueryInstance</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QueryLog629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QueryLog</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- encode(data: List&lt;Double&gt;, max: double): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getChart(w: ChartWindow, t: ChartType): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNrActiveUsers(days: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNrSessions(days: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTopQueries(days: int): WebTable</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QueryLogDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QueryLogDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QueueItem1094993043[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QueueItem</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAddress: Address [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreated: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iException: Throwable [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFinished: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocale: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLog: List&lt;QueueMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxProgress: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOutput: File [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOutputLink: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOutputName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProgress: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStarted: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTaskExecutionId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(item: QueueItem): int</TD></TR>
<TR><TD ALIGN="LEFT" ># createOutput(prefix: String, ext: String): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ created(): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ debug(message: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ debug(message: Object, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(): Throwable</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(message: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(message: Object, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" ># execute()</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeItem()</TD></TR>
<TR><TD ALIGN="LEFT" >+ fatal(message: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ fatal(message: Object, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ finished(): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ incProgress()</TD></TR>
<TR><TD ALIGN="LEFT" >+ incProgress(value: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ info(message: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ info(message: Object, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ log(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ log(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ output(): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ progress(): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ started(): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ status(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ trace(message: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ trace(message: Object, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ warn(message: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ warn(message: Object, t: Throwable)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QueueItemInterface15436791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QueueItemInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanDelete: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreated: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExecutionRequest: ExecuteScriptRpcRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFinished: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHost: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLog: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOutput: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOutputLink: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwner: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProgress: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStarted: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QueueMessage1094993043[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QueueMessage</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iError: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLevel: Level [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(m: QueueMessage): int</TD></TR>
<TR><TD ALIGN="LEFT" ># formatMessageHTML(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># formatMessagePlain(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ toHTML(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Record2051236629[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Record</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDeletable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValues: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iVisible: boolean[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToField(index: int, value: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ cloneRecord(): Record</TD></TR>
<TR><TD ALIGN="LEFT" >+ copyFrom(record: Record)</TD></TR>
<TR><TD ALIGN="LEFT" >+ copyTo(record: Record)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getField(index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getText(f: Field, index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValues(index: int): String[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEditable(index: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isVisible(index: int): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Record745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Record</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDeletable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOrder: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValues: String[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addToField(index: int, value: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ cloneRecord(): Record</TD></TR>
<TR><TD ALIGN="LEFT" >+ copyFrom(record: Record)</TD></TR>
<TR><TD ALIGN="LEFT" >+ copyTo(record: Record)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getField(index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getText(f: Field, index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValues(index: int): String[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEditable(index: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEmpty(data: SimpleEditInterface): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RefTableEntry629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RefTableEntry</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RefTableEntryDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RefTableEntryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RefreshThread1487510725[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RefreshThread</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(cache: CacheElement)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RejectEnrollmentsAction91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RejectEnrollmentsAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApproval: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseIdsCanApprove: Collection&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RelatedCourseInfo629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RelatedCourseInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOwnerObject: Object [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(owner: RelatedCourseInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeCourse(): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ countStudents(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByOwnerIdType(hibSession: Session, ownerId: Long, ownerType: Integer): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByOwnerIdType(ownerId: Long, ownerType: Integer): List</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RelatedCourseInfoDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RelatedCourseInfoDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RelatedObjectInterface4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RelatedObjectInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConflicts: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNames: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseTitles: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDate: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDayOfYear: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDetailPage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEndSlot: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalIds: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstruction: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionType: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: List&lt;ContactInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocations: Set&lt;ResourceInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectionNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelection: long[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartSlot: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTime: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: RelatedObjectType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCourseId(id: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseName(name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCourseTitle(title: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addExternalId(externalId: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructor(instructor: ContactInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addLocation(location: ResourceInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: RelatedObjectInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseId(index: int): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorNames(separator: String, messages: GwtMessages): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RelatedObjectLookupRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RelatedObjectLookupRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLevel: Level [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getChildren(sessionId: Long, level: Level, uniqueId: Long): RelatedObjectLookupRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ getChildren(sessionId: Long, response: RelatedObjectLookupRpcResponse...): RelatedObjectLookupRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RelatedObjectLookupRpcResponse4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RelatedObjectLookupRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLevel: Level [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRelatedObject: RelatedObjectInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReloadAllData91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReloadAllData</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSections(pref: DistributionPref): List&lt;Collection&lt;Class_&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadOffering(io: InstructionalOffering, distributions: List&lt;XDistribution&gt;, server: OnlineSectioningServer, helper: OnlineSectioningHelper): XOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadStudent(s: Student, requestMap: Map&lt;Long, List&lt;XCourseRequest&gt;&gt;, server: OnlineSectioningServer, helper: OnlineSectioningHelper): XStudent</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadStudent(s: Student, requestMap: Map&lt;Long, List&lt;XCourseRequest&gt;&gt;, server: OnlineSectioningServer, helper: OnlineSectioningHelper, resetWaitListType: WaitListType): XStudent</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadStudentNoCheck(s: Student, server: OnlineSectioningServer, helper: OnlineSectioningHelper): XStudent</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReloadOfferingAction91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReloadOfferingAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOfferingIds: List&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(offering: XOffering, course: XCourseId, distributions: Collection&lt;XDistribution&gt;, student: XStudent, enrollment: XEnrollment, server: OnlineSectioningServer): ReschedulingReason</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forOfferings(offeringIds: Long...): ReloadOfferingAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ forOfferings(offeringIds: List&lt;Long&gt;): ReloadOfferingAction</TD></TR>
<TR><TD ALIGN="LEFT" ># getEnrollment(cr: XCourseRequest, offeringId: Long): XEnrollment</TD></TR>
<TR><TD ALIGN="LEFT" ># getRequest(student: XStudent, course: XCourseId): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ isVerySame(courseId: Long, e1: List&lt;XSection&gt;, e2: List&lt;XSection&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reloadOffering(server: OnlineSectioningServer, helper: OnlineSectioningHelper, offeringId: Long, recheckOfferingIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameName(courseId: Long, s1: XSection, s2: XSection): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameRooms(s: XSection, rooms: List&lt;XRoom&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameTime(s: XSection, t: XTime): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RemoteQueueProcessor1094993043[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RemoteQueueProcessor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(item: QueueItem): QueueItem</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispatch(address: Address, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateId(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFile(id: String): DataSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ invoke(method: String, types: Class[], args: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RemoteRoomAvailability398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RemoteRoomAvailability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ dispatch(address: Address, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ invoke(method: String, types: Class[], args: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RemoveAllClassInstructorsDataBackend1850307226[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RemoveAllClassInstructorsDataBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: RemoveAllClassInstructorsDataRpcRequest, context: SessionContext): AssignClassInstructorsInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RemoveAllClassInstructorsDataRpcRequest2051236629[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RemoveAllClassInstructorsDataRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iData: AssignClassInstructorsInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ removeInstructorData(data: AssignClassInstructorsInterface): RemoveAllClassInstructorsDataRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReplicatedDummyContainer1876261413[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReplicatedDummyContainer&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createProxy(addresses: Collection&lt;Address&gt;, user: String): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispatch(addresses: Collection&lt;Address&gt;, sessionId: String, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasMaster(user: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReplicatedServer1593966791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReplicatedServer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCacheManager: EmbeddedCacheManager [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseForId: Cache&lt;Long, XCourseId&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseForName: Cache&lt;String, TreeSet&lt;XCourseId&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExpectations: Cache&lt;Long, XExpectations&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructedOfferings: Cache&lt;String, Set&lt;Long&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLockStartsTransaction: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingLocks: Cache&lt;Long, Boolean&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingRequests: Cache&lt;Long, Set&lt;XCourseRequest&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingTable: Cache&lt;Long, XOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentTable: Cache&lt;Long, XStudent&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assign(request: XCourseRequest, enrollment: XEnrollment): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >- cacheName(table: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAllStudents()</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(query: String, limit: Integer, matcher: CourseMatcher): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(query: String, limit: Integer, matcher: CourseMatcher, cmp: Comparator&lt;XCourseId&gt;): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(matcher: CourseMatcher): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findStudents(matcher: StudentMatcher): Collection&lt;XStudent&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- getCache(name: String): Cache&lt;U, T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(course: String): XCourseId</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseId: Long): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExpectations(offeringId: Long): XExpectations</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructedOfferings(instructorExternalId: String): Collection&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- getLocalServer(sessionId: Long): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOffering(offeringId: Long): XOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- getOfferingIdFromCourseName(courseName: String): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestedCourseIds(studentId: Long): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequests(offeringId: Long): Collection&lt;XCourseRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudent(studentId: Long): XStudent</TD></TR>
<TR><TD ALIGN="LEFT" >- inTransaction(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOfferingLocked(offeringId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># load(context: OnlineSectioningServerContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockAll(): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockOffering(offeringId: Long, studentIds: Collection&lt;Long&gt;, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockOffering(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockRequest(request: CourseRequestInterface, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockStudent(studentId: Long, offeringIds: Collection&lt;Long&gt;, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ readLock(): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ releaseAllOfferingLocks()</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(student: XStudent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" ># remove(offering: XOffering, removeExpectations: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># removeCache(cache: Cache&lt;?, ?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >- toCourse(course: XCourseId): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ unload()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unlockOffering(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(expectations: XExpectations)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(student: XStudent, updateRequests: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ waitlist(request: XCourseRequest, waitlist: boolean): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeLock(): Lock</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReplicatedServerWithMaster1593966791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReplicatedServerWithMaster</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCacheManager: EmbeddedCacheManager [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseForId: Map&lt;Long, XCourseId&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseForName: Map&lt;String, XCourseIdSet&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExpectations: Cache&lt;Long, XExpectations&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructedOfferings: Map&lt;String, Set&lt;Long&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingLocks: Cache&lt;Long, Boolean&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingRequests: Map&lt;Long, XCourseRequestSet&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingTable: Cache&lt;Long, XOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentTable: Cache&lt;Long, XStudent&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ assign(request: XCourseRequest, enrollment: XEnrollment): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >- cacheName(table: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAllStudents()</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(action: OnlineSectioningAction&lt;E&gt;, user: Entity): E</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(query: String, limit: Integer, matcher: CourseMatcher): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(query: String, limit: Integer, matcher: CourseMatcher, cmp: Comparator&lt;XCourseId&gt;): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(matcher: CourseMatcher): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findStudents(matcher: StudentMatcher): Collection&lt;XStudent&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># flushCache(cache: Cache)</TD></TR>
<TR><TD ALIGN="LEFT" >- getCache(name: String): Cache&lt;U, T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(course: String): XCourseId</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseId: Long): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExpectations(offeringId: Long): XExpectations</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructedOfferings(instructorExternalId: String): Collection&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOffering(offeringId: Long): XOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(name: String, defaultValue: E): E</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestedCourseIds(studentId: Long): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequests(offeringId: Long): Collection&lt;XCourseRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudent(studentId: Long): XStudent</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOfferingLocked(offeringId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># load(context: OnlineSectioningServerContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># loadOnMaster(context: OnlineSectioningServerContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockAll(): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockOffering(offeringId: Long, studentIds: Collection&lt;Long&gt;, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockOffering(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockRequest(request: CourseRequestInterface, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockStudent(studentId: Long, offeringIds: Collection&lt;Long&gt;, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ releaseAllOfferingLocks()</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(student: XStudent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" ># removeCache(cache: Cache&lt;?, ?&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >- toCourse(course: XCourseId): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ unload()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unlockOffering(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(expectations: XExpectations)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(student: XStudent, updateRequests: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ waitlist(request: XCourseRequest, waitlist: boolean): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeLock(): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeLockIfNotHeld(): Lock</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Report1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Report</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFlags: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: List&lt;Parameter&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addParameter(parameter: Parameter)</TD></TR>
<TR><TD ALIGN="LEFT" >+ parametersContain(type: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Request1458658222[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Request</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignCoordinator: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAttributePreferences: List&lt;Preference&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorPreferences: List&lt;Preference&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPercentShare: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSameCommonPref: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSameCoursePref: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTeachingLoad: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTeachingResponsibility: Responsibility [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAttributePreference(p: Preference)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructorPreference(p: Preference)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Request85005764[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Request</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAdvisorCredit: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAdvisorNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCritical: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilter: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNoSub: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestedCourse: List&lt;RequestedCourse&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitList: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListSwapWithCourseOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListedTimeStamp: Date [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAdvisorNote(note: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRequestedCourse(requestedCourse: RequestedCourse)</TD></TR>
<TR><TD ALIGN="LEFT" >+ countRequestedCourses(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getIndex(courseId: Long): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestedCourse(index: int): RequestedCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestedCourse(courseId: Long): RequestedCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRequestedCourse(course: CourseAssignment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRequestedCourse(course: RequestedCourse): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRequestedCourseActive(course: RequestedCourse): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWaitListOrNoSub(wlMode: WaitListMode, advisorWaitListedCourseIds: Set&lt;Long&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWaitlistOrNoSub(wlMode: WaitListMode): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameCourses(r: Request): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(rc: RequestedCourse): RequestedCourse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RequestInstructorSurveyBackend1948231384[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RequestInstructorSurveyBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: InstructorSurveyRequest, context: SessionContext): InstructorSurveyData</TD></TR>
<TR><TD ALIGN="LEFT" ># isAllowed(survey: InstructorSurveyData, departmentalProperty: ApplicationProperty, globalProperty: ApplicationProperty): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># propertyValue(survey: InstructorSurveyData, departmentalProperty: ApplicationProperty, globalProperty: ApplicationProperty): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RequestQuery586265501[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RequestQuery</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iFrom: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iParams: Map&lt;String, Map&lt;String, Object&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWhere: Map&lt;String, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFrom(option: String, from: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># addParameter(option: String, name: String, value: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addWhere(option: String, where: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFrom(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWhere(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(select: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ setParams(query: Query, excludeOption: Collection&lt;String&gt;): Query</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RequestSessionDetails4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RequestSessionDetails</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RequestStudentUpdates2037228697[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RequestStudentUpdates</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Collection&lt;Long&gt;): RequestStudentUpdates</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RequestedClass1458658222[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RequestedClass</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNbrInstructors: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addInstructorId(id: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RequestedCourse85005764[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RequestedCourse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanChangeAlternatives: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangePriority: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanDelete: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanWaitList: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCredit: float[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFreeTime: List&lt;FreeTime&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInactive: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverrideExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverrideTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReadOnly: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestorNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestorNoteSuggestions: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedClasses: Set&lt;Preference&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedIntructionalMethods: Set&lt;Preference&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: RequestedCourseStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatusNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListPosition: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFreeTime(freeTime: FreeTime)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRequestorNoteSuggestion(suggestion: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearSelection()</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: RequestedCourse): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassSelection(id: Long): Preference</TD></TR>
<TR><TD ALIGN="LEFT" >+ getIntructionalMethodSelection(id: Long): Preference</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSelectedClass(id: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSelectedClass(id: Long, required: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSelectedClass(p: Preference): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSelectedIntructionalMethod(id: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSelectedIntructionalMethod(id: Long, required: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSelectedIntructionalMethod(p: Preference): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameSelectedClasses(rc: RequestedCourse): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameSelectedIntructionalMethods(rc: RequestedCourse): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ toAriaString(CONSTANTS: StudentSectioningConstants): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RequiredTimeTable779606258[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RequiredTimeTable</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iModel: RequiredTimeTableModel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createBufferedImage(timeVertical: boolean): BufferedImage</TD></TR>
<TR><TD ALIGN="LEFT" >+ createBufferedImage(timeVertical: boolean, highlight: boolean): BufferedImage</TD></TR>
<TR><TD ALIGN="LEFT" >- drawHline(raster: WritableRaster, x: int, y: int, width: int, color: Color)</TD></TR>
<TR><TD ALIGN="LEFT" >- drawVline(raster: WritableRaster, x: int, y: int, width: int, color: Color)</TD></TR>
<TR><TD ALIGN="LEFT" >+ exactTime(editable: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >- fillRect(raster: WritableRaster, x: int, y: int, width: int, height: int, color: Color)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEditables(editable: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimeGridAsText(user: UserContext): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimeGridSize(user: UserContext): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimeGridVertical(user: UserContext): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ print(timeVertical: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ print(editable: boolean, timeVertical: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ print(editable: boolean, timeVertical: boolean, showLegend: boolean, showTexts: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ print(editable: boolean, timeVertical: boolean, showLegend: boolean, showTexts: boolean, name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- putPixel(raster: WritableRaster, x: int, y: int, color: Color)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(request: ServletRequest)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Reservation629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Reservation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- add(l1: int, l2: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(r: Reservation): int</TD></TR>
<TR><TD ALIGN="LEFT" >- countEnrollmentsForReservation(): int</TD></TR>
<TR><TD ALIGN="LEFT" >- hasClass(clazz: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isApplicable(student: Student, request: CourseRequest): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isMatching(enrollment: List&lt;StudentClassEnrollment&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isMatching(clazz: Class_): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- min(l1: int, l2: int): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationAdd2016207608[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationAdd</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationDefaultExpirationDatesBackend847111401[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationDefaultExpirationDatesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ReservationDefaultExpirationDatesRpcRequest, context: SessionContext): DefaultExpirationDates</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDefaultExpirationDate(session: Session, type: String): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDefaultStartDate(session: Session, type: String): Date</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationDefaultExpirationDatesRpcRequest788834012[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationDefaultExpirationDatesRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationDelete2016207608[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationEdit2016207608[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionReservationOffering: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Reservation): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Reservation&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationException1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationException</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationFilterBackend847111401[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ enumarate(request: ReservationFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: ReservationFilterRpcRequest, context: SessionContext): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getQuery(request: ReservationFilterRpcRequest, context: SessionContext): ReservationQuery</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(request: ReservationFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reservations(request: ReservationFilterRpcRequest, context: SessionContext): List&lt;Reservation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ suggestions(request: ReservationFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationFilterRpcRequest788834012[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationFilterRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationMatcher2055155989[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDateFormat: Format&lt;Date&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExpDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReservation: Reservation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- eq(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- format(date: Date): String</TD></TR>
<TR><TD ALIGN="LEFT" >- has(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- parse(date: String): Date</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationOffering2016207608[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationOffering</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeededOnlyWhenWaitListing: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: InstructionalOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;InstructionalOffering&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationQuery2055155989[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationQuery</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFrom: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iJoin: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParams: Map&lt;String, Map&lt;String, Object&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWhere: Map&lt;String, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFrom(option: String, from: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addJoin(option: String, from: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- addParameter(option: String, name: String, value: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addWhere(option: String, where: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFrom(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getJoin(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWhere(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(select: String): ReservationQueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ setParams(query: Query, excludeOption: Collection&lt;String&gt;): Query</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationQueryInstance609220555[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationQueryInstance</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iExclude: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFrom: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroupBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOrderBy: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParams: Map&lt;String, Object&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelect: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWhere: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ exclude(excludeOption: String): ReservationQueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ from(from: String): ReservationQueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ group(groupBy: String): ReservationQueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(limit: Integer): ReservationQueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ order(orderBy: String): ReservationQueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ query(hibSession: Session): Query</TD></TR>
<TR><TD ALIGN="LEFT" >+ set(param: String, value: Object): ReservationQueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(type: String): ReservationQueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ where(where: String): ReservationQueryInstance</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationServlet998479413[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationServlet</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   classAssignmentService: AssignmentService&lt;ClassAssignmentProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeededOnlyWhenWaitListing: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canAddReservation(): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- convert(io: InstructionalOffering, courseId: Long, hibSession: Session): Offering</TD></TR>
<TR><TD ALIGN="LEFT" >+ convert(io: InstructionalOffering, courseId: Long, hibSession: Session, permissionOfferingLockNeededOnlyWhenWaitListing: Permission&lt;InstructionalOffering&gt;, sessionContext: SessionContext, assignments: ClassAssignmentProxy): Offering</TD></TR>
<TR><TD ALIGN="LEFT" >- convert(reservation: Reservation, nameFormat: String, hibSession: Session): ReservationInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(reservationId: Long): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ findReservations(filter: ReservationFilterRpcRequest): List&lt;ReservationInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- getCourse(hibSession: Session, courseName: String): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCurricula(offeringId: Long): List&lt;Curriculum&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOffering(offeringId: Long, courseId: Long): Offering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOfferingByCourseName(courseName: String): Offering</TD></TR>
<TR><TD ALIGN="LEFT" >- getProjection(clasf2major2proj: Hashtable&lt;String, HashMap&lt;String, Float&gt;&gt;, majorCode: String, clasfCode: String): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getReservation(reservationId: Long): ReservationInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getReservations(offeringId: Long): List&lt;ReservationInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- getRules(hibSession: Session, acadAreaId: Long): Hashtable&lt;String, HashMap&lt;String, Float&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lastReservationFilter(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(reservation: ReservationInterface): Long</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Reservations2016207608[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Reservations</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ResourceInterface4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ResourceInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBreakTime: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisplayName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistance: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIgnoreRoomCheck: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPartitionParentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceType: ResourceType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowMessageInGrid: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSize: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(r: ResourceInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNameWithDisplayName(msg: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNameWithHint(msg: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNameWithSize(msg: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNameWithSizeAndHint(msg: GwtMessages): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameLocationOrPartition(other: ResourceInterface): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ResourceLookupBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ResourceLookupBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ResourceLookupRpcRequest, context: EventContext): GwtRpcResponseList&lt;ResourceInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findResource(sessionId: Long, type: ResourceType, name: String): ResourceInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ findResources(sessionId: Long, type: ResourceType, query: String, limit: int): List&lt;ResourceInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ResourceLookupRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ResourceLookupRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceType: ResourceType [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findResource(sessionId: Long, type: ResourceType, name: String): ResourceLookupRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ findResources(sessionId: Long, type: ResourceType, name: String, limit: int): ResourceLookupRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ResponsibilityInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ResponsibilityInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RetrieveAllSpecialRegistrationsRequest836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RetrieveAllSpecialRegistrationsRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RetrieveAvailableGradeModesRequest836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RetrieveAvailableGradeModesRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RetrieveAvailableGradeModesResponse836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RetrieveAvailableGradeModesResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCurrentCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iModes: Map&lt;String, SpecialRegistrationGradeModeChanges&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuggestions: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iVarCreds: Map&lt;String, SpecialRegistrationVariableCreditChange&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(sectionId: String, modes: SpecialRegistrationGradeModeChanges)</TD></TR>
<TR><TD ALIGN="LEFT" >+ add(sectionId: String, var: SpecialRegistrationVariableCreditChange)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSuggestion(suggestion: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(a: ClassAssignment): SpecialRegistrationGradeModeChanges</TD></TR>
<TR><TD ALIGN="LEFT" >+ getVariableCredits(a: ClassAssignment): SpecialRegistrationVariableCreditChange</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RetrieveCourseDetail21643374[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RetrieveCourseDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourse: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RetrieveCourseDetailBackend1754754932[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RetrieveCourseDetailBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: RetrieveCourseDetail, context: SessionContext): CourseDetail</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RetrieveSpecialRegistrationResponse836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RetrieveSpecialRegistrationResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanCancel: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iChanges: List&lt;ClassAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iErrors: ArrayList&lt;ErrorMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExtended: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHasLinkedConflict: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHasSpaceConflict: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHasTimeConflict: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: SpecialRegistrationStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubmitDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuggestions: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addChange(ca: ClassAssignment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addError(error: ErrorMessage)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSuggestion(suggestion: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canCancel(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: RetrieveSpecialRegistrationResponse): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNote(course: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasErrorCode(code: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasErrors(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasErrors(course: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAdd(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isApplied(courseId: Long, saved: ClassAssignmentInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isApproved(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isChange(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isDrop(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isFullyApplied(saved: ClassAssignmentInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isHonorsGradeModeNotFullyMatching(saved: ClassAssignmentInterface): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoleAuthority876918435[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoleAuthority</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoleFilter876918435[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoleFilter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: Qualifiable[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRole: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ isMatch(authority: UserAuthority): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Roles629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Roles</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Roles): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(managerOnly: boolean): Set&lt;Roles&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(managerOnly: boolean, hibSession: Session): Set&lt;Roles&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllInstructorRoles(): Set&lt;Roles&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllInstructorRoles(hibSession: Session): Set&lt;Roles&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRole(roleRef: String, hibSession: Session): Roles</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRight(right: Right): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RolesConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RolesConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RolesDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RolesDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Room1687807301[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Room</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBuilding: Building [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistances: Map&lt;Long, Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTravelTimes: Map&lt;Long, Integer&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getDistance(roomId: Long): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDistance(room: Room): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTravelTime(roomId: Long): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTravelTime(room: Room): Integer</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Room629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Room</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addExternalRoomDept(externalRoomDept: ExternalRoomDepartment, externalRoomDepts: Set)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addNewExternalRoomsToSession(session: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addToroomDepts(roomDept: RoomDept)</TD></TR>
<TR><TD ALIGN="LEFT" >+ bldgAbbvRoomNumber(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByBldgIdRoomNbr(bldgId: Long, roomNbr: String, sessionId: Long): Room</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameRoomInSession(newSession: Session): Room</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomAvailability82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomAvailability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomAvailabilityService1821660490[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomAvailabilityService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCache: Vector&lt;CacheElement&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDelete: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxAge: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRefreshRate: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRefreshThread: RefreshThread [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestFile: File [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResponseFile: File [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStop: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeToLive: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeout: long [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ activate(sessionId: Long, startTime: Date, endTime: Date, excludeType: String, waitForSync: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># createRequest(cache: CacheElement): Document</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(time: TimeFrame): CacheElement</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructorAvailability(instructorId: Long, startTime: Date, endTime: Date, excludeType: String): Collection&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomAvailability(locationId: Long, startTime: Date, endTime: Date, excludeType: String): Collection&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomAvailability(roomExternalId: String, buildingAbbv: String, roomNbr: String, startTime: Date, endTime: Date, excludeType: String): Collection&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimeStamp(startTime: Date, endTime: Date, excludeType: String): String</TD></TR>
<TR><TD ALIGN="LEFT" ># readResponse(response: Document): Hashtable&lt;Room, HashSet&lt;TimeBlock&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># receiveResponse(): Document</TD></TR>
<TR><TD ALIGN="LEFT" ># sendRequest(request: Document)</TD></TR>
<TR><TD ALIGN="LEFT" >+ startService()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopService()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDelete82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Room): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Room&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDepartments82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDepartments</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDeptDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDeptDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDetail82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDetailAvailability82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDetailAvailability</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDetailEventAvailability82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDetailEventAvailability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDetailInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDetailInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iArea: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAvailability: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBreakTime: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBuilding: BuildingInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChange: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeAvailability: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeCapacity: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeControll: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeEventAvailability: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeEventProperties: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeExamStatus: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeExternalId: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeFeatures: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeGroups: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangePicture: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangePreferences: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeRoomProperties: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeType: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanDelete: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSeeAvailability: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSeeEventAvailability: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSeePeriodPreferences: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanShowDetail: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iControlDepartment: DepartmentInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultBreakTime: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultEventNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultEventStatus: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: List&lt;DepartmentInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventAvailability: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventAvailabilityModel: RoomSharingModel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventDepartment: DepartmentInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventStatus: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamTypes: List&lt;ExamTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFeatures: List&lt;FeatureInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFutureRooms: List&lt;FutureRoomInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroups: List&lt;GroupInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIgnoreRoomCheck: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIgnoreTooFar: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastChange: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMapUrl: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiniMapUrl: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParent: RoomDetailInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPeriodPreference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPeriodPreferenceModels: Map&lt;Long, PeriodPreferenceModel&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPictures: List&lt;RoomPictureInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPrefix: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomSharingModel: RoomSharingModel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomSharingNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomType: RoomTypeInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iServices: Set&lt;EventServiceProviderInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iX: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iY: Double [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDepartment(department: DepartmentInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addExamType(type: ExamTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFeature(feature: FeatureInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFutureRoom(futureRoom: FutureRoomInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addGroup(group: GroupInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPicture(picture: RoomPictureInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addService(service: EventServiceProviderInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearServices()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDepartment(deptId: Long): DepartmentInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDepartmentalGroups(departmentId: Long): List&lt;GroupInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamType(typeId: Long, typeRef: String): ExamTypeInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExamType(typeId: Long): ExamTypeInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFeatures(type: FeatureTypeInterface): List&lt;FeatureInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFeatures(typeId: Long): List&lt;FeatureInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPeriodPreferenceModel(examTypeId: Long): PeriodPreferenceModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPictures(type: AttachmentTypeInterface): List&lt;RoomPictureInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getServices(separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasFeature(featureId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasGroup(groupId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPeriodPreferenceModel(examTypeId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPictures(type: AttachmentTypeInterface): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPreference(deptCode: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeFeature(feature: FeatureInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeGroup(group: GroupInterface)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDetailPeriodPreferences82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDetailPeriodPreferences</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDetailsBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDetailsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># checkEventStatus(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># checkPermission(request: RoomFilterRpcRequest, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ enumarate(request: RoomFilterRpcRequest, response: FilterRpcResponse, context: EventContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: RoomFilterRpcRequest, context: EventContext): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getQuery(sessionId: Long, options: Map&lt;String, Set&lt;String&gt;&gt;, context: EventContext): RoomQuery</TD></TR>
<TR><TD ALIGN="LEFT" ># load(location: Location, department: String, html: boolean, context: SessionContext, filterDepartments: boolean, types: List&lt;ExamType&gt;, courses: boolean, exams: boolean, events: boolean, editPermissions: boolean): RoomDetailInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" ># showRoomFeature(type: RoomFeatureType): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># wrap(d: Department, location: Location, pref: PreferenceLevel): DepartmentInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomDetailsRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomDetailsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDepartment: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocationIds: List&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addLocationId(locationId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(locationId: Long...): RoomDetailsRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ size(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEdit82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Room): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Room&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditAvailability82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditAvailability</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditChangeCapacity82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditChangeCapacity</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditChangeControll82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditChangeControll</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditChangeEventProperties82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditChangeEventProperties</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditChangeExaminationStatus82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditChangeExaminationStatus</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditChangeExternalId82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditChangeExternalId</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditChangePicture82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditChangePicture</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Location): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditChangeRoomProperties82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditChangeRoomProperties</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditChangeType82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditChangeType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditEventAvailability82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditEventAvailability</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditFeatures82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditFeatures</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditGlobalFeatures82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditGlobalFeatures</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditGlobalGroups82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditGlobalGroups</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditGroups82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditGroups</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomEditPreference82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomEditPreference</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomException759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomException</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRoom: RoomDetailInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFeature629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFeature</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteRoomFeatureById(id: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ featureTypeDisplayString(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameFeatureInSession(session: Session): RoomFeature</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllDepartmentRoomFeatures(dept: Department): List&lt;DepartmentRoomFeature&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllDepartmentRoomFeaturesInSession(sessionId: Long): List&lt;DepartmentRoomFeature&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllGlobalRoomFeatures(sessionId: Long): List&lt;GlobalRoomFeature&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllGlobalRoomFeatures(sessionId: Long, featureTypeId: Long): List&lt;GlobalRoomFeature&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllGlobalRoomFeatures(session: Session): List&lt;GlobalRoomFeature&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomFeatureById(id: Long): RoomFeature</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasLocation(location: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveOrUpdate()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFeatureDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFeatureDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFeaturePrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFeaturePrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFeatureTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFeatureTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFeatureTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFeatureTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: RoomFeatureType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: RoomFeatureType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFeatures82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFeatures</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFeaturesBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFeaturesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SearchRoomFeaturesRequest, context: SessionContext): GwtRpcResponseList&lt;FeatureInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFeaturesExportCSV1155462[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFeaturesExportCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># dept2string(d: DepartmentInterface, dm: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># name(room: Entity): String</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, features: List&lt;FeatureInterface&gt;, dm: int, department: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># print(out: Printer, features: List&lt;FeatureInterface&gt;, dm: int, department: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># printHeader(out: Printer)</TD></TR>
<TR><TD ALIGN="LEFT" ># printLine(out: Printer, feature: FeatureInterface, dm: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFeaturesExportPdf82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFeaturesExportPdf</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFilterBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iMetrics: DistanceMetric [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># checkEventStatus(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ enumarate(request: RoomFilterRpcRequest, response: FilterRpcResponse, context: EventContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># fixRoomFeatureTypes(request: RoomFilterRpcRequest)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getQuery(sessionId: Long, options: Map&lt;String, Set&lt;String&gt;&gt;, context: EventContext): RoomQuery</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(request: RoomFilterRpcRequest, response: FilterRpcResponse, context: EventContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ locations(sessionId: Long, filter: RoomFilterRpcRequest, limit: int, room2distance: Map&lt;Long, Double&gt;, context: EventContext): List&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># locations(sessionId: Long, options: Map&lt;String, Set&lt;String&gt;&gt;, query: Query, limit: int, room2distance: Map&lt;Long, Double&gt;, ignoreCommand: String, context: EventContext): List&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># showRoomFeature(type: RoomFeatureType): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- suggestionQuery(query: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ suggestions(request: RoomFilterRpcRequest, response: FilterRpcResponse, context: EventContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toCommand(label: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFilterBox531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFilterBox</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBuildings: ListBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartmentFilter: CustomFilter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: ListBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastSize: Chip [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMax: TextBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMin: TextBox [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createRpcRequest(): RoomFilterRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" ># onLoad(result: FilterRpcResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># populateFilter(filter: Filter, entities: List&lt;Entity&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- sizeChanged(fireChange: boolean)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFilterRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFilterRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomFilterRpcRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomFilterRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomGroup629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomGroup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findGlobalRoomGroupForName(session: Session, name: String): RoomGroup</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameRoomGroupInSession(session: Session): RoomGroup</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllDepartmentRoomGroups(dept: Department): List&lt;RoomGroup&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllGlobalRoomGroups(sessionId: Long): List&lt;RoomGroup&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllGlobalRoomGroups(session: Session): List&lt;RoomGroup&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllRoomGroupsForSession(sessionId: Long): List&lt;RoomGroup&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllRoomGroupsForSession(session: Session): List&lt;RoomGroup&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGlobalDefaultRoomGroup(sessionId: Long): RoomGroup</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGlobalDefaultRoomGroup(session: Session): RoomGroup</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasLocation(location: Location): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomGroupDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomGroupDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomGroupPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomGroupPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomGroups82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomGroups</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomGroupsBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomGroupsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SearchRoomGroupsRequest, context: SessionContext): GwtRpcResponseList&lt;GroupInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomGroupsExportCSV1155462[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomGroupsExportCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># dept2string(d: DepartmentInterface, dm: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># name(room: Entity): String</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, groups: List&lt;GroupInterface&gt;, dm: int, department: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># print(out: Printer, groups: List&lt;GroupInterface&gt;, dm: int, department: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># printHeader(out: Printer)</TD></TR>
<TR><TD ALIGN="LEFT" ># printLine(out: Printer, group: GroupInterface, dm: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomGroupsExportPdf82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomGroupsExportPdf</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomHintBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomHintBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: RoomHintRequest, context: SessionContext): RoomHintResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomHintRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomHintRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLocationId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ load(locationId: Long): RoomHintRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomHintResponse759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomHintResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iArea: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBreakTime: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisplayName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventDepartment: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFeatures: List&lt;FeatureInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroups: List&lt;GroupInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIgnoreRoomCheck: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMiniMapUrl: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPictures: List&lt;RoomPictureInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomTypeLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iServices: Set&lt;EventServiceProviderInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFeature(feature: FeatureInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addGroup(group: GroupInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPicture(picture: RoomPictureInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addService(service: EventServiceProviderInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFeatures(type: String): List&lt;FeatureInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getServices(separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasFeatures(type: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iBuilding: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLocation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomType: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomInfo1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPref: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSize: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStrike: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(r: RoomInfo): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPicture629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPicture</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clonePicture(): RoomPicture</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPictureDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPictureDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPictureInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPictureInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPictureType: AttachmentTypeInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeStamp: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPictureRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPictureRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApply: Apply [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocationId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperation: Operation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPictures: List&lt;RoomPictureInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ load(sessionId: Long, locationId: Long): RoomPictureRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(locationId: Long): RoomPictureRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(sessionId: Long, locationId: Long, apply: Apply, pictures: List&lt;RoomPictureInterface&gt;): RoomPictureRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(locationId: Long, apply: Apply, pictures: List&lt;RoomPictureInterface&gt;): RoomPictureRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ upload(sessionId: Long, locationId: Long): RoomPictureRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ upload(locationId: Long): RoomPictureRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPictureResponse759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPictureResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApply: Apply [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPictureTypes: List&lt;AttachmentTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPictures: List&lt;RoomPictureInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPicture(picture: RoomPictureInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPictureType(type: AttachmentTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPictureType(id: Long): AttachmentTypeInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPicturesBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPicturesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: RoomPictureRequest, context: SessionContext): RoomPictureResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPictureType(type: AttachmentType): AttachmentTypeInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- samePicture(p1: LocationPicture, p2: LocationPicture): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- samePictures(l1: Location, l2: Location): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPropertiesBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPropertiesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: RoomPropertiesRequest, context: SessionContext): RoomPropertiesInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPropertiesInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPropertiesInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBuildings: List&lt;BuildingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeAvailability: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeControll: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeDefaultGroup: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeEventAvailability: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeEventProperties: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeExamStatus: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeExternalId: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeFeatures: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangeGroups: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangePicture: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanChangePreferences: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEditDepartments: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEditRoomExams: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanExportCsv: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanExportPdf: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanExportRoomFeatures: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanExportRoomGroups: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSaveFilterDefaults: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSeeCourses: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSeeEvents: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSeeExams: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: List&lt;DepartmentInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEllipsoid: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventServiceProviders: Set&lt;EventServiceProviderInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamTypes: List&lt;ExamTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFeatureTypes: List&lt;FeatureTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFeatures: List&lt;FeatureInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilterDefaults: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFutureSessions: List&lt;AcademicSessionInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGridAsText: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroups: List&lt;GroupInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHorizontal: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iModes: List&lt;RoomSharingDisplayMode&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrDepartments: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPictureTypes: List&lt;AttachmentTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferences: List&lt;PreferenceInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomAreaMetricUnits: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomTypes: List&lt;RoomTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addBuilding(building: BuildingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDepartment(department: DepartmentInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addEventServiceProvider(provider: EventServiceProviderInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addExamType(examType: ExamTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFeature(feature: FeatureInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFeatureType(featureType: FeatureTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFutureSession(session: AcademicSessionInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addGroup(group: GroupInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMode(mode: RoomSharingDisplayMode)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPictureType(type: AttachmentTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPreference(preference: PreferenceInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRoomType(roomType: RoomTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBuilding(id: Long): BuildingInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDepartment(id: Long): DepartmentInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFeatureType(id: Long): FeatureTypeInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFilterDefault(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFutureSession(id: Long): AcademicSessionInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGroup(groupId: Long): GroupInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPictureType(id: Long): AttachmentTypeInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomType(id: Long): RoomTypeInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasFilterDefault(name: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPropertiesRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPropertiesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iMode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomPropertyInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomPropertyInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iColor: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomQuery29120908[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomQuery</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFrom: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParams: Map&lt;String, Map&lt;String, Object&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWhere: Map&lt;String, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFrom(option: String, from: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># addParameter(option: String, name: String, value: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addWhere(option: String, where: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFrom(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWhere(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(select: String): RoomInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(): RoomInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ setParams(query: Query, excludeOption: Collection&lt;String&gt;): Query</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomSharingBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomSharingBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: RoomSharingRequest, context: SessionContext): RoomSharingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadEventAvailability(request: RoomSharingRequest, context: SessionContext): RoomSharingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadEventAvailability(location: Location, context: SessionContext): RoomSharingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadRoomSharing(request: RoomSharingRequest, context: SessionContext): RoomSharingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadRoomSharing(location: Location, includeRoomPreferences: boolean, context: SessionContext): RoomSharingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveEventAvailability(request: RoomSharingRequest, context: SessionContext): RoomSharingModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveRoomSharing(request: RoomSharingRequest, context: SessionContext): RoomSharingModel</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomSharingDisplayMode759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomSharingDisplayMode</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFirstDay: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastDay: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStep: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ fromHex(hexMode: String): RoomSharingDisplayMode</TD></TR>
<TR><TD ALIGN="LEFT" >+ toHex(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomSharingExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomSharingExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># fillDepartmentData(rd: RoomDept, element: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillDepartmentData(dept: Department, element: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillLocationData(location: Location, element: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
<TR><TD ALIGN="LEFT" ># slot2time(slot: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomSharingImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomSharingImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iTimeFormat: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomSharingModel629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomSharingModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowFreeForAll: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultSelection: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartmentAbbvs: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartmentColors: Color[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartmentNames: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean[][] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditingDepartments: Set [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iModes: List&lt;RoomSharingDisplayMode&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ allAvailable(departmentId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBorder(day: int, time: int): Color</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayHeader(day: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndTime(time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFieldText(day: int, time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(day: int, time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferenceAbbv(deptId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferenceColor(pref: String): Color</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferenceText(pref: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSelectionLimits(idx: int): int[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSelectionName(idx: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartTime(time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEditable(day: int, time: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPreferenceEnabled(pref: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomSharingModel759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomSharingModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDefaultEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultHorizontal: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultMode: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultOption: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultPreference: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: Map&lt;Integer, Map&lt;Integer, Boolean&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iModel: Map&lt;Integer, Map&lt;Integer, Long&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iModes: List&lt;RoomSharingDisplayMode&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNoteEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOptions: List&lt;RoomSharingOption&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOtherOptions: List&lt;RoomSharingOption&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferences: List&lt;PreferenceInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addMode(mode: RoomSharingDisplayMode)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addOption(option: RoomSharingOption)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addOther(option: RoomSharingOption)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPreference(preference: PreferenceInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ countOptions(optionId: Long): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOption(id: Long): RoomSharingOption</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOption(day: int, slot: int): RoomSharingOption</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(id: Long): PreferenceInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEditable(day: int, slot: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEditable(day: int, slot: int, step: int): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomSharingRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomSharingRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEventAvailability: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIncludeRoomPreferences: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocationId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iModel: RoomSharingModel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperation: Operation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ load(sessionId: Long, locationId: Long, eventAvailability: boolean, includeRoomPreferences: boolean): RoomSharingRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(locationId: Long, eventAvailability: boolean): RoomSharingRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(locationId: Long, eventAvailability: boolean, includeRoomPreferences: boolean): RoomSharingRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(sessionId: Long, locationId: Long, eventAvailability: boolean): RoomSharingRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(sessionId: Long, locationId: Long, model: RoomSharingModel, eventAvailability: boolean, includeRoomPreferences: boolean): RoomSharingRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(locationId: Long, model: RoomSharingModel, eventAvailability: boolean, includeRoomPreferences: boolean): RoomSharingRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(locationId: Long, model: RoomSharingModel, eventAvailability: boolean): RoomSharingRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canScheduleEvents(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(t: RoomType): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ countManagableRooms(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ countManagableRooms(sessionId: Long): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ countManagableRoomsOfBuilding(buildingId: Long): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ countRooms(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ countRooms(sessionId: Long): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(): TreeSet&lt;RoomType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): TreeSet&lt;RoomType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(isRoom: boolean): TreeSet&lt;RoomType&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByReference(ref: String): RoomType</TD></TR>
<TR><TD ALIGN="LEFT" >+ getManagableRooms(sessionId: Long): List&lt;Location&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOption(department: Department): RoomTypeOption</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomTypeInterface759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomTypeInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOrder: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoom: boolean [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomTypeOptionDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomTypeOptionDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: RoomType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" ># nextOrd(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, order: Integer, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: RoomType, record: Record, order: Integer, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomUpdateBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomUpdateBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># create(room: RoomDetailInterface, context: SessionContext, sessionId: Long, permId: Long, flags: int): Location</TD></TR>
<TR><TD ALIGN="LEFT" ># delete(locationId: Long, context: SessionContext, future: boolean): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: RoomUpdateRpcRequest, context: SessionContext): RoomDetailInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># lookuDepartment(hibSession: Session, original: DepartmentInterface, future: boolean, sessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" ># lookuDepartment(hibSession: Session, original: Department, future: boolean, sessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" ># lookuDepartment(hibSession: Session, originalId: Long, future: boolean, sessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupBuilding(hibSession: Session, original: BuildingInterface, future: boolean, sessionId: Long): Building</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupFeature(hibSession: Session, original: FeatureInterface, future: boolean, sessionId: Long): RoomFeature</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupGroup(hibSession: Session, original: GroupInterface, future: boolean, sessionId: Long): RoomGroup</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupPreferenceLevel(hibSession: Session, original: PreferenceInterface): PreferenceLevel</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupRoomType(hibSession: Session, original: RoomTypeInterface): RoomType</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupService(hibSession: Session, original: EventServiceProviderInterface, future: boolean, sessionId: Long): EventServiceProvider</TD></TR>
<TR><TD ALIGN="LEFT" ># samePicture(p1: RoomPictureInterface, p2: LocationPicture): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># sameType(p1: RoomPictureInterface, p2: LocationPicture): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># update(room: RoomDetailInterface, context: SessionContext, future: boolean, flags: int, examTypes: List&lt;ExamType&gt;): Location</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomUpdateRpcRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomUpdateRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFutureFlags: Map&lt;Long, Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocationId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperation: Operation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoom: RoomDetailInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clearFutureFlags()</TD></TR>
<TR><TD ALIGN="LEFT" >+ createDeleteRequest(sessionId: Long, locationId: Long): RoomUpdateRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSaveOrUpdateRequest(room: RoomDetailInterface): RoomUpdateRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFutureFlag(id: Long): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFutureFlag(id: Long, defaultValue: int): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomUtilization1281202891[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomUtilization</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iDepartmentIds: ArrayList&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRoomTypeIds: ArrayList&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- addRowForLocation(location: Location, locationHours: LocationHours)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createRoomUtilizationReportFor(pointInTimeData: PointInTimeData, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># findAllPitClassesWithContactHoursForRoomDepartmentAndRoomTypes(departmentId: Long, pointInTimeData: PointInTimeData, hibSession: Session): List&lt;PitClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># intializeHeader()</TD></TR>
<TR><TD ALIGN="LEFT" ># parseParameters()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportDescription(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># runReport(hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Rooms82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Rooms</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomsConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomsConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># createHelper(request: HttpServletRequest, response: HttpServletResponse): ApiHelper</TD></TR>
<TR><TD ALIGN="LEFT" >+ doDelete(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPost(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPut(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># updatePicture(helper: ApiHelper, location: Location, file: BinaryFile)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomsExportCSV1155462[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomsExportCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># getCell(room: RoomDetailInterface, column: Column, context: ExportContext): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getColumnName(column: Column, context: ExportContext): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getNbrCells(column: RoomsColumn, ec: ExportContext): int</TD></TR>
<TR><TD ALIGN="LEFT" ># getNbrColumns(context: ExportContext): int</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, rooms: List&lt;RoomDetailInterface&gt;, context: ExportContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomsExportCsv82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomsExportCsv</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomsExportJSON1155462[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomsExportJSON</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, rooms: List&lt;RoomDetailInterface&gt;, context: ExportContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomsExportJson82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomsExportJson</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomsExportPDF1155462[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomsExportPDF</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># availability(room: RoomDetailInterface, events: boolean, context: ExportContext): A</TD></TR>
<TR><TD ALIGN="LEFT" ># features(features: Collection&lt;FeatureInterface&gt;, type: FeatureTypeInterface, context: ExportContext): A</TD></TR>
<TR><TD ALIGN="LEFT" ># getCell(room: RoomDetailInterface, column: Column, context: ExportContext): A</TD></TR>
<TR><TD ALIGN="LEFT" ># isColumnVisible(column: Column, context: ExportContext): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># periodPreferences(room: RoomDetailInterface, context: ExportContext): A</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, rooms: List&lt;RoomDetailInterface&gt;, context: ExportContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomsExportPdf82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomsExportPdf</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoomsExporter1155462[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoomsExporter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># getColumnName(column: Column, ec: ExportContext): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getNbrCells(column: RoomsColumn, context: ExportContext): int</TD></TR>
<TR><TD ALIGN="LEFT" ># getWebTableNbrCells(column: RoomsColumn, context: ExportContext): int</TD></TR>
<TR><TD ALIGN="LEFT" ># hasShowHideOperation(column: RoomsColumn): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># isColumnVisible(column: Column, context: ExportContext): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># print(helper: ExportHelper, rooms: List&lt;RoomDetailInterface&gt;, context: ExportContext)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RunningItem856171861[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RunningItem</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iInterrupted: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRunningItem: QueueItem [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ cancel()</TD></TR>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SameSubpartBalancingGroup524255001[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SameSubpartBalancingGroup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourses: HashSet[][] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: int[][] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUsage: int[][] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getClasses(slot: int, day: int): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClasses(slot: int): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExcess(slot: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLimit(slot: int, day: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLimit(slot: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUsage(slot: int, day: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUsage(slot: int): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveDataBackend1850307226[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveDataBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SaveDataRpcRequest, context: SessionContext): AssignClassInstructorsInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveDataBackend330628327[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveDataBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SaveDataRpcRequest, context: SessionContext): SimpleEditInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveDataGoToNextRpcRequest1850307226[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveDataGoToNextRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SaveDataGoToNextRpcRequest, context: SessionContext): AssignClassInstructorsInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveDataGoToNextRpcRequest2051236629[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveDataGoToNextRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iData: AssignClassInstructorsInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveDataAndNext(data: AssignClassInstructorsInterface): SaveDataGoToNextRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveDataGoToPreviousRpcRequest1850307226[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveDataGoToPreviousRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SaveDataGoToPreviousRpcRequest, context: SessionContext): AssignClassInstructorsInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveDataGoToPreviousRpcRequest2051236629[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveDataGoToPreviousRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iData: AssignClassInstructorsInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveDataAndPrev(data: AssignClassInstructorsInterface): SaveDataGoToPreviousRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveDataRpcRequest2051236629[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveDataRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iData: AssignClassInstructorsInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveData(data: AssignClassInstructorsInterface): SaveDataRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveDataRpcRequest745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveDataRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iData: SimpleEditInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilter: String[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveData(type: String, data: SimpleEditInterface): SaveDataRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveData(type: String, data: SimpleEditInterface, filter: String[]): SaveDataRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveEventRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveEventRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveEvent(event: EventInterface, sessionId: Long, message: String, emailConfirmation: boolean): SaveEventRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveFilterDefaultBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveFilterDefaultBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SaveFilterDefaultRpcRequest, context: SessionContext): GwtRpcResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveFilterDefaultRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveFilterDefaultRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveInstructorSurveyBackend1948231384[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveInstructorSurveyBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: InstructorSurveySaveRequest, context: SessionContext): InstructorSurveyData</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveOrApproveEventRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveOrApproveEventRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEmailConfirmation: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEvent: EventInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveOrApproveEventRpcResponse4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveOrApproveEventRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAddedServices: TreeSet&lt;EventServiceProviderInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iApprovedMeetings: TreeSet&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCancelledMeetings: TreeSet&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreatedMeetings: TreeSet&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeletedMeetings: TreeSet&lt;MeetingInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEvent: EventInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessages: List&lt;MessageInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotes: List&lt;NoteInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRemovedServices: TreeSet&lt;EventServiceProviderInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUpdatedMeetings: TreeSet&lt;MeetingInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addApprovedMeeting(meeting: MeetingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCancelledMeeting(meeting: MeetingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCreatedMeeting(meeting: MeetingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDeletedMeeting(meeting: MeetingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMessage(level: Level, message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addNote(note: NoteInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addService(service: EventServiceProviderInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addUpdatedMeeting(meeting: MeetingInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ info(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeService(service: EventServiceProviderInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ warn(message: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveOrUpdateScriptBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveOrUpdateScriptBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SaveOrUpdateScriptRpcRequest, context: SessionContext): ScriptInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveOrUpdateScriptRpcRequest15436791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveOrUpdateScriptRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iScript: ScriptInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveRecordBackend330628327[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveRecordBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SaveRecordRpcRequest, context: SessionContext): Record</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveRecordRpcRequest745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveRecordRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRecord: Record [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveRecord(type: String, record: Record): SaveRecordRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveRequestsRpcRequest1458658222[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveRequestsRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequests: List&lt;Request&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRequest(request: Request)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveStudentRequests91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveStudentRequests</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCustomValidation: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iKeepEnrollments: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: CourseRequestInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CourseRequestInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): SaveStudentRequests</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(hibSession: Session, sessionId: Long, studentId: Long, rc: RequestedCourse): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- getCourse(hibSession: Session, courseId: long): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" ># isCritical(alternative: boolean, courses: List&lt;CourseOffering&gt;, critical: CriticalCourses): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveRequest(server: OnlineSectioningServer, helper: OnlineSectioningHelper, student: Student, request: CourseRequestInterface, keepEnrollments: boolean, critical: CriticalCourses): Map&lt;Long, CourseRequest&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveTaskBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveTaskBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SaveTaskDetailsRpcRequest, context: SessionContext): TaskInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getScheduleDate(session: Session, date: int, slot: int): Date</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveTaskDetailsRpcRequest160962237[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveTaskDetailsRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iTask: TaskInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SaveTeachingRequestsBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SaveTeachingRequestsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SaveRequestsRpcRequest, context: SessionContext): GwtRpcResponseNull</TD></TR>
<TR><TD ALIGN="LEFT" ># fillRequestInfo(r: Request, tr: TeachingRequest, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClasses(clazz: Class_, subpartId: Long, hibSession: Session): Collection&lt;Class_&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SavedHQL629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SavedHQL</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clear(f: Flag)</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasQueries(appearance: Flag, admin: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSet(f: Flag): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ listAll(hibSession: Session, appearance: Flag, admin: boolean): List&lt;SavedHQL&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SavedHQLDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SavedHQLDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SavedHQLException1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SavedHQLException</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SavedHQLParameter629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SavedHQLParameter</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SavedHQLParameterDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SavedHQLParameterDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SavedHqlExportToCSV1255872879[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SavedHqlExportToCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(user: UserContext, out: Printer, hql: String, options: List&lt;IdValue&gt;, fromRow: int, maxRows: int, parameters: Collection&lt;SavedHQLParameter&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >- format(column: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- header(ret: String[], o: Object, alias: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >- length(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >- line(ret: String[], o: Object, session: SessionImplementor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
<TR><TD ALIGN="LEFT" >- skip(t: Type, lazy: boolean): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SavedHqlExportToJSON1255872879[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SavedHqlExportToJSON</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SavedHqlExportToXLS1255872879[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SavedHqlExportToXLS</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Saver1944833282[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Saver</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iActive: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLogLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQueries: List&lt;QueryLog&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(q: QueryLog)</TD></TR>
<TR><TD ALIGN="LEFT" >+ interrupt()</TD></TR>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SchedulingAssistant539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SchedulingAssistant</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># hasInstance(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SchedulingDashboard539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SchedulingDashboard</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SchedulingReports539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SchedulingReports</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SchedulingSubpart629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SchedulingSubpart</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canInheritParentPreferences(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ cloneDeep(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ cloneWithPreferences(): Object</TD></TR>
<TR><TD ALIGN="LEFT" ># combinePreferences(type: Class, subpartPrefs: Set, parentPrefs: Set): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteAllDistributionPreferences(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveDatePattern(): DatePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveDistributionPreferences(owningDept: Department): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectivePreferences(type: Class, fixDurationInTimePreferences: boolean): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectivePreferences(type: Class, appliesTo: PreferenceGroup): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ effectiveTimePatternHtml(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByIdRolledForwardFrom(sessionId: Long, uniqueIdRolledForwardFrom: Long): SchedulingSubpart</TD></TR>
<TR><TD ALIGN="LEFT" >- fixDurationInTimePreferences(prefs: Set): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDates(datePattern: DatePattern, dayCode: int, minutesPerMeeting: int): List&lt;Date&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayCodes(datePattern: DatePattern, timePattern: TimePattern): Set&lt;Integer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNextSchedulingSubpart(context: SessionContext, right: Right): SchedulingSubpart</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNextSchedulingSubpart(context: SessionContext, cmp: Comparator, right: Right): SchedulingSubpart</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreviousSchedulingSubpart(context: SessionContext, right: Right): SchedulingSubpart</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreviousSchedulingSubpart(context: SessionContext, cmp: Comparator, right: Right): SchedulingSubpart</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSchedulingSubpartSuffix(hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSchedulingSubpartSuffix(save: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSchedulingSubpartSuffix(hibSession: Session, save: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >- htmlForTimePatterns(patterns: Set): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isParentOf(subpart: SchedulingSubpart): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isValidCombination(datePattern: DatePattern, timePattern: TimePattern): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- removeDepartmentalPreferences(prefs: Set): Set</TD></TR>
<TR><TD ALIGN="LEFT" >- removeNeutralPreferences(prefs: Set): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ timePatternHtml(): String</TD></TR>
<TR><TD ALIGN="LEFT" >- weakenHardPreferences(prefs: Set): Set</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SchedulingSubpartComparator1628636464[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SchedulingSubpartComparator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   subjectUID: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compare(o1: Object, o2: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ isParent(s1: SchedulingSubpart, s2: SchedulingSubpart): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SchedulingSubpartDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SchedulingSubpartDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SchedulingSubpartDetail317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SchedulingSubpartDetail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SchedulingSubpart): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SchedulingSubpart&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SchedulingSubpartDetailClearClassPreferences317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SchedulingSubpartDetailClearClassPreferences</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SchedulingSubpartEdit317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SchedulingSubpartEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SchedulingSubpart): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SchedulingSubpart&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SchedulingSubpartEditClearPreferences317154439[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SchedulingSubpartEditClearPreferences</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScriptConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScriptConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># convertParameter(value: String, type: String, helper: ApiHelper): String</TD></TR>
<TR><TD ALIGN="LEFT" ># createHelper(request: HttpServletRequest, response: HttpServletResponse): ApiHelper</TD></TR>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPost(helper: ApiHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScriptDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScriptDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScriptExecution54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScriptExecution</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFile: FileItem [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: ExecuteScriptRpcRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUserContext: UserContext [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkPermission(targetObject: Object, right: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(targerId: Serializable, targetType: String, right: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createOutput(prefix: String, ext: String): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ debug(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(message: String, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" ># execute()</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeItem()</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(targetObject: Object, right: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(targerId: Serializable, targetType: String, right: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ info(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupBuilding(hibSession: Session, value: String): Building</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupDepartment(hibSession: Session, value: String): Department</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupLocation(hibSession: Session, value: String): Location</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupRoom(hibSession: Session, value: String): Room</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupSubjectArea(hibSession: Session, value: String): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># sendEmail(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ warn(message: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScriptExportXML54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScriptExportXML</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScriptImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScriptImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># importScript(scriptEl: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScriptInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScriptInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanDelete: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanEdit: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanExecute: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEngine: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: List&lt;ScriptParameterInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPermission: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iScript: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addParameter(parameter: ScriptParameterInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canDelete(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canEdit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canExecute(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: ScriptInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameter(name: String): ScriptParameterInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ isFileParameter(name: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScriptOptionsBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScriptOptionsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetScriptOptionsRpcRequest, context: SessionContext): ScriptOptionsInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScriptOptionsInterface15436791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScriptOptionsInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanAdd: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEngines: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPermissions: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addEngine(engine: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPermission(permission: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canAdd(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScriptParameterDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScriptParameterDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ScriptParameterInterface15436791[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ScriptParameterInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDefault: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMultiSelect: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOptions: Set&lt;ListItem&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addOption(value: String, text: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: ScriptParameterInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOption(key: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SearchRoomFeaturesRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SearchRoomFeaturesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: RoomFilterRpcRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SearchRoomGroupsRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SearchRoomGroupsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: RoomFilterRpcRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectionInfo1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectionInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCommon: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDate: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoom: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectionName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTime: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(section: SectionInfo): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectionMatcher2061009026[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectionMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourse: Course [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSection: Section [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- eq(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- has(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- parseDay(token: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >- parseStart(token: String): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningException1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningException</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanRequestOverride: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCheck: EligibilityCheck [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iErrors: ArrayList&lt;ErrorMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectionMessages: Map&lt;Long, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: Type [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addError(error: ErrorMessage)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSectionMessage(classId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSectionMessage(classId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCanRequestOverride(canRequestOverride: boolean): SectioningException</TD></TR>
<TR><TD ALIGN="LEFT" >+ withTypeError(): SectioningException</TD></TR>
<TR><TD ALIGN="LEFT" >+ withTypeInfo(): SectioningException</TD></TR>
<TR><TD ALIGN="LEFT" >+ withTypeWarning(): SectioningException</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningInfoDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningInfoDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningReportRpcRequest215558974[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningReportRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iParameters: Map&lt;String, String&gt; [0..*]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningReportRpcResponse215558974[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningReportRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iReport: List&lt;String[]&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addLine(line: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningReportTypesBackend373406240[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningReportTypesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   studentSectioningSolverService: SolverService&lt;StudentSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SectioningReportTypesRpcRequest, context: SessionContext): GwtRpcResponseList&lt;ReportTypeInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningReportTypesRpcRequest215558974[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningReportTypesRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOnline: boolean [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningReportsBackend373406240[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningReportsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   studentSectioningSolverService: SolverService&lt;StudentSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SectioningReportRpcRequest, context: SessionContext): SectioningReportRpcResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningReportsExporter373406240[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningReportsExporter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   studentSectioningSolverService: StudentSectioningSolverService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningSolutionLogDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningSolutionLogDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningStatusFilterAction1580621848[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningStatusFilterAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: FilterRpcRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ enumarate(server: OnlineSectioningServer, helper: OnlineSectioningHelper): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ forRequest(request: FilterRpcRequest): SectioningStatusFilterAction</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAdvisorCourseRequests(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Map&lt;Long, List&lt;AdvisorCourseRequest&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseIds(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseQuery(request: FilterRpcRequest, server: OnlineSectioningServer, helper: OnlineSectioningHelper): CourseQuery</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourses(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;XCourse&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getQuery(request: FilterRpcRequest, server: OnlineSectioningServer, helper: OnlineSectioningHelper): StudentQuery</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudens(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;XStudent&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentIds(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasNoMatchCourses(request: FilterRpcRequest, helper: OnlineSectioningHelper): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(server: OnlineSectioningServer, helper: OnlineSectioningHelper): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ suggestions(server: OnlineSectioningServer, helper: OnlineSectioningHelper): FilterRpcResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningStatusFilterBackend373406240[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningStatusFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   solverServerService: SolverServerService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   studentSectioningSolverService: SolverService&lt;StudentSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- currentUser(context: SessionContext): Entity</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: SectioningStatusFilterRpcRequest, context: SessionContext): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >- getStatusPageSessionId(context: SessionContext): Long</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningStatusFilterRpcRequest1440491676[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningStatusFilterRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SelectedAssignment1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SelectedAssignment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDays: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartSlot: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRoomId(roomId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomId(index: int): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomIds(separator: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SelectedAssignmentBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SelectedAssignmentBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ computeSuggestion(context: SuggestionsContext, solver: TimetableSolver, assignments: List&lt;SelectedAssignment&gt;, placement: Placement): Suggestion</TD></TR>
<TR><TD ALIGN="LEFT" >+ createClassAssignmentDetails(context: SuggestionsContext, solver: Solver, lecture: Lecture, oldPlacement: Placement, newPlacement: Placement): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSuggestion(context: SuggestionsContext, solver: TimetableSolver, initialAssignments: Map&lt;Lecture, Placement&gt;, order: List&lt;Long&gt;, unresolvedConflicts: Collection&lt;Placement&gt;): Suggestion</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSuggestion(context: SuggestionsContext, solver: TimetableSolver, initialAssignments: Map&lt;Lecture, Placement&gt;, order: List&lt;Long&gt;, unresolvedConflicts: Collection&lt;Placement&gt;, unresolvedAssignments: Map&lt;Lecture, Placement&gt;): Suggestion</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(value: long): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: SelectedAssignmentsRequest, context: SessionContext): Suggestion</TD></TR>
<TR><TD ALIGN="LEFT" ># fillDescriptions(assignment: Assignment&lt;Lecture, Placement&gt;, p: Placement, descriptions: Map&lt;Long, String&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPlacement(model: TimetableModel, assignment: SelectedAssignment, checkValidity: boolean): Placement</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SelectedAssignmentsRequest1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SelectedAssignmentsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignments: List&lt;SelectedAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAssignment(a: SelectedAssignment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAssignment(classId: Long): SelectedAssignment</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SemesterMinutes1488568904[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SemesterMinutes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getArrangedHours(semesterMinutes: int, datePattern: DatePattern): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExactTimeMinutesPerMeeting(semesterMinutes: int, datePattern: DatePattern, dayCode: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ isValidCombination(semesterMinutes: int, datePattern: DatePattern, timePattern: TimePattern): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SendStudentEmailsRpcRequest4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SendStudentEmailsRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCC: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEventId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentIds: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubject: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ServerTimeZoneBackend1801756021[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ServerTimeZoneBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: ServerTimeZoneRequest, context: SessionContext): ServerTimeZoneResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ServerTimeZoneRequest258040539[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ServerTimeZoneRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ServerTimeZoneResponse258040539[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ServerTimeZoneResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNames: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeZoneOffsetInMinutes: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTransitions: List&lt;Integer&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addName(name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTransition(transition: int, adjustment: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toJsonString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ServiceProviders1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ServiceProviders</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(provider: EventServiceProvider, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(provider: EventServiceProvider, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Session629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Session</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ academicInitiativeDisplayString(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ building(bldgUniqueId: String): Building</TD></TR>
<TR><TD ALIGN="LEFT" >+ canNoRoleReport(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canNoRoleReportClass(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canNoRoleReportExam(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canNoRoleReportExamFinal(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canNoRoleReportExamMidterm(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canOnlineSectionStudents(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(s: Session): int</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteObjects(hibSession: Session, objectName: String, idIterator: Iterator)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteSessionById(id: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ earliestSessionRelatedDate(): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBorder(day: int, month: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDate(index: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayOfYear(day: int, month: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDistance(date: Date): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHoliday(day: int, month: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHoliday(day: int, month: int, year: int, startMonth: int, holidays: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHolidaysHtml(editable: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHolidaysHtml(sessionBeginTime: Date, sessionEndTime: Date, classesEndTime: Date, examBeginTime: Date, eventBeginTime: Date, eventEndTime: Date, acadYear: int, holidays: String, editable: boolean, class2eventDateMap: Class2EventDateMap): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSessionById(id: Long): Session</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSessionStatusList(includeTestSessions: boolean): ReferenceList</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSessionUsingCampusYearTerm(campus: String, year: String, term: String, hibSession: Session): Session</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSessionUsingInitiativeYearTerm(academicInitiative: String, academicYear: String, academicTerm: String): Session</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSessionUsingInitiativeYearTerm(academicInitiative: String, academicYear: String, academicTerm: String, hibSession: Session): Session</TD></TR>
<TR><TD ALIGN="LEFT" >+ getYear(acadYrTerm: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasStudentSchedule(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOfferingLocked(offeringId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ latestSessionRelatedDate(): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadInstrAndCrsOffering(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockOffering(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveOrUpdate()</TD></TR>
<TR><TD ALIGN="LEFT" >+ statusDisplayString(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ unlockOffering(offering: InstructionalOffering, user: UserContext)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionConfig629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List&lt;SessionConfig&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfig(key: String, sessionId: Long): SessionConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfigValue(key: String, sessionId: Long, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ toProperties(sessionId: Long): Properties</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionConfigDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionDatesSelector531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionDatesSelector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iAcademicSession: AcademicSessionProvider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanSelectPast: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPanel: UniTimeWidget&lt;DatesPanel&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionYear: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addValueChangeHandler(handler: ValueChangeHandler&lt;List&lt;Date&gt;&gt;): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearMessage()</TD></TR>
<TR><TD ALIGN="LEFT" >- dayOfYear(year: int, month: int, day: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDate(day: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasFlag(date: Date, flag: Flag): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ init(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ init(months: List&lt;SessionMonth&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEnabled(date: Date): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCampus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iReference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iTerm: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iYear: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionInfoBackend1058982626[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionInfoBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SessionInfoRpcRequest, context: SessionContext): SessionInfoInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionInfoInterface1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionInfoInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iSession: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionInfoRpcRequest1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionInfoRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionMonth4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionMonth</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDays: int[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMonth: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iYear: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clearFlag(day: int, f: Flag)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFirst(flag: Flag): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFlags(day: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasFlag(day: int, f: Flag): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SetLastDepartmentBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SetLastDepartmentBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SetLastDepartmentRequest, context: SessionContext): GwtRpcResponseNull</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SetLastDepartmentRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SetLastDepartmentRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iDepartmentId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SetUserDataBackend1058982626[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SetUserDataBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SetUserDataRpcRequest, context: SessionContext): GwtRpcResponseNull</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SetUserDataRpcRequest1044312147[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SetUserDataRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SettingsDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SettingsDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SimpleDepartmentPermission493742050[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SimpleDepartmentPermission</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, department: Department): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, department: Department, status: Status...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, controllingDepartment: Department, ownerStatus: Status, managingDepartment: Department, managerStatus: Status): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkStatus(status: DepartmentStatusType): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Department&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SimpleEditInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SimpleEditInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAddable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowSort: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanMoveUpAndDown: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEditable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFields: Field[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPageName: PageName [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRecords: List&lt;Record&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSaveOrder: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSort: int[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRecord(uniqueId: Long, deletable: boolean): Record</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecord(uniqueId: Long): Record</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRecord(uniqueId: Long): Record</TD></TR>
<TR><TD ALIGN="LEFT" >+ indexOf(name: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertEmptyRecord(pos: int): Record</TD></TR>
<TR><TD ALIGN="LEFT" >+ moveRecord(row: int, before: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SimpleEditRpcRequest2051236629[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SimpleEditRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SimpleEditRpcRequest745105542[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SimpleEditRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SimpleExaminationPermission493742050[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SimpleExaminationPermission</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, session: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, session: Session, examType: ExamType, status: Status...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, department: Department, examType: ExamType, status: Status...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkManager(authority: UserAuthority, examStatus: ExamStatus, status: Status...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkStatus(authority: UserAuthority, type: DepartmentStatusType, status: Status...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SimpleForm864400258[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SimpleForm</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iColSpan: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># addBottomRow(widget: Widget, printable: boolean): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addBottomRow(widget: Widget): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDoubleRow(text1: String, widget1: Widget, c1: int, text2: String, widget2: Widget, c2: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDoubleRow(header1: Widget, widget1: Widget, c1: int, header2: Widget, widget2: Widget, c2: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addHeaderRow(widget: Widget): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addHeaderRow(text: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addNotPrintableBottomRow(widget: Widget): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRow(widget: Widget): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRow(text: String, widget: Widget): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRow(text: String, widget: Widget, colspan: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRow(header: Widget, widget: Widget): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRow(header: Widget, widget: Widget, colSpan: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRow(text: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRowForWidget(w: Widget): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SimplePastOrOutside672799877[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SimplePastOrOutside</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iToday: Date [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ isOutside(date: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPast(date: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPastOrOutside(date: Date): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SimpleQualifier54601263[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SimpleQualifier</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SimpleSessionPermission493742050[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SimpleSessionPermission</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, session: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, session: Session, status: Status...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkStatus(status: DepartmentStatusType): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SingleDateSelector531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SingleDateSelector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicSession: AcademicSessionProvider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultFormat: DateTimeFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFormat: DateTimeFormat [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHint: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMonth: SingleMonth [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPicker: AriaTextBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPopup: PopupPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRegExp: RegExp[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addValueChangeHandler(handler: ValueChangeHandler&lt;Date&gt;): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" ># dayOfYear(year: int, month: int, day: int): int</TD></TR>
<TR><TD ALIGN="LEFT" ># dayOfYear(year: int, dayOfYear: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># daysInMonth(year: int, month: int): int</TD></TR>
<TR><TD ALIGN="LEFT" ># firstDayOfWeek(year: int, month: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ init(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ insert(panel: RootPanel): SingleDateSelector</TD></TR>
<TR><TD ALIGN="LEFT" ># isWeekend(dayOfWeek: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># monthName(year: int, month: int): String</TD></TR>
<TR><TD ALIGN="LEFT" ># startingDayOfWeek(): int</TD></TR>
<TR><TD ALIGN="LEFT" ># toDate(year: int, month: int, day: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ today(): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># weekNumber(year: int, month: int): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SingleRequest1458658222[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SingleRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClasses: List&lt;IncludeLine&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNbrInstructors: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addClass(clazz: IncludeLine)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructorId(id: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClazz(id: Long): IncludeLine</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Solution629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Solution</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignmentTable: Hashtable [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPropertiesCache: DataProperties [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ commitSolution(messages: Vector, hibSession: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ commitSolution(messages: List&lt;String&gt;, hibSession: Session, sendNotificationPuid: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ commitSolution(messages: List&lt;String&gt;, hibSession: Session, sendNotificationPuid: String, ownerIds: Long[]): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ createDivSecNumbers(hibSession: Session, messages: Vector)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- deleteObjects(hibSession: Session, objectName: String, idQuery: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ empty(hibSession: Session, proxy: TimetableInfoFileProxy)</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(file: CSVFile, instructorFormat: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySessionId(sessionId: Long): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ findConflictingStudents(classId: Long, startSlot: int, length: int, dates: List&lt;Date&gt;): Hashtable&lt;Long, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(classId: Long): Assignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(clazz: Class_): Assignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfo(clazz: Class_): AssignmentPreferenceInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfo(classId: Long): AssignmentPreferenceInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfoTable(classesOrClassIds: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentTable(classesOrClassIds: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflictingTimeBlocks(classId: Long): Set&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflicts(classId: Long): Set&lt;Assignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInfo(name: String): TimetableInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolutionInfo(name: String): SolutionInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasConflicts(offeringId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasTimetable(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshSolution(solutionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeDivSecNumbers(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendNotification(uncommittedSolution: Solution, committedSolution: Solution, puid: String, success: boolean, messages: List&lt;String&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ shareRooms(a1: Assignment, a2: Assignment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- takenDivisionNumbers(subpart: SchedulingSubpart): HashSet</TD></TR>
<TR><TD ALIGN="LEFT" >+ uncommitSolution(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ uncommitSolution(hibSession: Session, sendNotificationPuid: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateCommittedStudentEnrollmentInfos(hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionChanges676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionChanges</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionChangesBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionChangesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCrosslistedNames(table: TableInterface, showClassSuffix: boolean, showConfigNames: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(value: int): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(value: double): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: SolutionChangesRequest, context: SessionContext): SolutionChangesResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionChangesFilterBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionChangesFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SolutionChangesFilterRequest, context: SessionContext): SolutionChangesFilterResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionChangesFilterRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionChangesFilterRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionChangesFilterResponse926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionChangesFilterResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionChangesRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionChangesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: FilterInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionInfo366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCommitted: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreated: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLog: List&lt;ProgressMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwner: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPairs: List&lt;InfoPair&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addMessage(level: int, date: Date, message: String, trace: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPair(name: String, value: String): InfoPair</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionInfoDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionInfoDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionLog366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionLog</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLog: List&lt;ProgressMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwner: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addMessage(level: int, date: Date, message: String, trace: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionReports676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionReports</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolutionUnassignedClassesModel1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolutionUnassignedClassesModel</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Solver676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Solver</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverAllocatedMemoryBackend1801756021[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverAllocatedMemoryBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SolverAllocatedMemoryRpcRequest, context: SessionContext): SolverAllocatedMemoryRpcResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverAllocatedMemoryRpcRequest730357269[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverAllocatedMemoryRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iSolverId: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverAllocatedMemoryRpcResponse730357269[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverAllocatedMemoryRpcResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverConfiguration366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverConfiguration</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: Map&lt;Long, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addParameter(id: Long, value: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameter(id: Long): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverContainerWrapper398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverContainerWrapper&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCheckLocal: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iContainer: RemoteSolverContainer&lt;T&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createSolver(user: String, config: DataProperties): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMemUsage(user: String): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(user: String): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSolver(user: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolver(user: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverGroup629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverGroup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySessionId(sessionId: Long): Set&lt;SolverGroup&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySessionIdAbbv(sessionId: Long, abbv: String): SolverGroup</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBySessionIdName(sessionId: Long, name: String): SolverGroup</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotAssignedClasses(solution: Solution): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUserSolverGroups(user: UserContext): TreeSet&lt;SolverGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverGroupDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverGroupDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># getConfig(root: Element): DataProperties</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># toData(root: Element): byte[]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverInfoBackend1058982626[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverInfoBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   examinationSolverService: SolverService&lt;ExamSolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   studentSectioningSolverService: StudentSectioningSolverService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SolverInfoRpcRequest, context: SessionContext): SolverInfoInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInfo(solver: CommonSolverInterface, includeSolutionInfo: boolean): SolverInfoInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverInfoDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverInfoDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverInfoDefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverInfoDefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverInfoDefs1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverInfoDefs</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(def: SolverInfoDef, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(def: SolverInfoDef, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverInfoInterface1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverInfoInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iSolver: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUrl: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverInfoRpcRequest1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverInfoRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iIncludeSolutionInfo: boolean [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverLog676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverLog</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverLogPageBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverLogPageBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   examinationSolverService: SolverService&lt;ExamSolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   studentSectioningSolverService: SolverService&lt;StudentSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SolverLogPageRequest, context: SessionContext): SolverLogPageResponse</TD></TR>
<TR><TD ALIGN="LEFT" ># getSolverService(type: SolverType): SolverService&lt;? extends CommonSolverInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverLogPageRequest366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverLogPageRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLast: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLevel: ProgressLogLevel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: SolverType [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverLogPageResponse366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverLogPageResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLevel: ProgressLogLevel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLog: List&lt;ProgressMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolutionLogs: List&lt;SolutionLog&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addMessage(level: int, date: Date, message: String, trace: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSolutionLog(log: SolutionLog)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverPageBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverPageBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   examinationSolverService: SolverService&lt;ExamSolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   studentSectioningSolverService: SolverService&lt;StudentSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SolverPageRequest, context: SessionContext): SolverPageResponse</TD></TR>
<TR><TD ALIGN="LEFT" ># executeOperation(context: SessionContext, service: SolverService&lt;? extends CommonSolverInterface&gt;, request: SolverPageRequest, response: SolverPageResponse): CommonSolverInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># fillAvailableOperations(context: SessionContext, solver: CommonSolverInterface, request: SolverPageRequest, response: SolverPageResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillHosts(context: SessionContext, solver: CommonSolverInterface, request: SolverPageRequest, response: SolverPageResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillOwners(context: SessionContext, request: SolverPageRequest, response: SolverPageResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillParameters(context: SessionContext, request: SolverPageRequest, response: SolverPageResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillSolverInfos(context: SessionContext, solver: CommonSolverInterface, request: SolverPageRequest, response: SolverPageResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillSolverLog(context: SessionContext, solver: CommonSolverInterface, request: SolverPageRequest, response: SolverPageResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillSolverStatus(context: SessionContext, solver: CommonSolverInterface, request: SolverPageRequest, response: SolverPageResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># fillSolverWarnings(context: SessionContext, solver: CommonSolverInterface, request: SolverPageRequest, response: SolverPageResponse)</TD></TR>
<TR><TD ALIGN="LEFT" >+ fillSolverWarnings(context: SessionContext, solver: CommonSolverInterface, solverType: SolverType, response: HasPageMessages)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInfoTranslations(type: SolverType): Map&lt;String, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getSolver(type: SolverType): CommonSolverInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># getSolverService(type: SolverType): SolverService&lt;? extends CommonSolverInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ translateInfo(type: SolverType, info: Map&lt;String, String&gt;): Map&lt;String, String&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverPageMessages366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverPageMessages</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPageMessages: List&lt;PageMessage&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPageMessage(message: PageMessage)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverPageMessagesBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverPageMessagesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   examinationSolverService: SolverService&lt;ExamSolverProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   studentSectioningSolverService: SolverService&lt;StudentSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SolverPageMessagesRequest, context: SessionContext): SolverPageMessages</TD></TR>
<TR><TD ALIGN="LEFT" ># getSolver(type: SolverType): CommonSolverInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverPageMessagesRequest366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverPageMessagesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iType: SolverType [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverPageRequest366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverPageRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConfigurationId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHost: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperation: SolverOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: Map&lt;Long, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: SolverType [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addOwnerId(ownerId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParameter(id: Long, value: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameter(id: Long): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverPageResponse366849455[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverPageResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowMultipleOwners: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBestSolution: SolutionInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConfigurationId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConfigurations: List&lt;SolverConfiguration&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCurrentSolution: SolutionInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHost: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHosts: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLoadDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLog: List&lt;ProgressMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperation: SolverOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperations: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwnerIds: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPageMessages: List&lt;PageMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: List&lt;SolverParameter&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRefresh: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedSolutions: List&lt;SolutionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolverOwners: List&lt;SolverOwner&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolverProgress: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolverStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolverType: SolverType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWorking: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addConfiguration(config: SolverConfiguration)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addHost(host: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addHost(index: int, host: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMessage(level: int, date: Date, message: String, trace: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ addOwnerId(ownerId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPageMessage(message: PageMessage)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParameter(parameter: SolverParameter)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSelectedSolution(selected: SolutionInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSolverOwner(solverOwner: SolverOwner)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canExecute(operation: SolverOperation): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfiguration(id: Long): SolverConfiguration</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameter(id: Long): SolverParameter</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverOwner(id: Long): SolverOwner</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverParameterDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverParameterDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverParameterDef629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverParameterDef</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteSolverParameterDefById(id: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByGroup(group: SolverParameterGroup): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByNameGroup(name: String): SolverParameterDef</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByNameGroup(name: String, group: String): SolverParameterDef</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByNameGroup(hibSession: Session, name: String, group: String): SolverParameterDef</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByNameType(name: String, type: SolverType): SolverParameterDef</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByNameType(hibSession: Session, name: String, type: SolverType): SolverParameterDef</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverParameterDefById(id: Long): SolverParameterDef</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveOrUpdate()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverParameterDefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverParameterDefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverParameterDefs1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverParameterDefs</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(def: SolverParameterDef, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFilter(context: SessionContext, hibSession: Session): Filter</TD></TR>
<TR><TD ALIGN="LEFT" ># getSolverParameterDefs(filter: String[], context: SessionContext): List&lt;SolverParameterDef&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(filter: String[], context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" ># nextOrd(ords: Set&lt;Integer&gt;): int</TD></TR>
<TR><TD ALIGN="LEFT" ># nextOrd(groupId: Long): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(filter: String[], data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># save(record: Record, order: Integer, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(def: SolverParameterDef, record: Record, order: Integer, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverParameterGroupDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverParameterGroupDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverParameterGroups1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverParameterGroups</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(group: SolverParameterGroup, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFilter(context: SessionContext, hibSession: Session): Filter</TD></TR>
<TR><TD ALIGN="LEFT" ># getSolverParameterGroups(filter: String[], context: SessionContext): List&lt;SolverParameterGroup&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(filter: String[], context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" ># nextOrd(ords: Set&lt;Integer&gt;): int</TD></TR>
<TR><TD ALIGN="LEFT" ># nextOrd(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(filter: String[], data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># save(record: Record, order: Integer, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(group: SolverParameterGroup, record: Record, order: Integer, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverPredefinedSettingDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverPredefinedSettingDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverReportsBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverReportsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ dispNumber(value: int): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispNumber(value: double): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: SolverReportsRequest, context: SessionContext): SolverReportsResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDeptBalancingReportTable(deptBalancingReport: DeptBalancingReport): TableInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDiscouragedInstructorBtbReportReportTable(report: DiscouragedInstructorBtbReport): TableInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPerturbationReportTable(report: PerturbationReport): TableInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomReportTable(report: RoomReport, type: RoomType): TableInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSameSubpartBalancingReportTable(report: SameSubpartBalancingReport): TableInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentConflictsReportTable(report: StudentConflictsReport): TableInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getViolatedDistrPreferencesReportTable(report: ViolatedDistrPreferencesReport): TableInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverReportsRequest926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverReportsRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverReportsResponse926228794[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverReportsResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPageMessages: List&lt;PageMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferences: List&lt;PreferenceInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTables: List&lt;TableInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPageMessage(message: PageMessage)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPreference(preference: PreferenceInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTable(table: TableInterface)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverServerImplementation398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverServerImplementation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iChannel: JChannel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseSolverContainer: CourseSolverContainerRemote [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamSolverContainer: ExaminationSolverContainerRemote [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorSchedulingContainer: InstructorSchedulingContainerRemote [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLocal: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOnlineStudentSchedulingContainer: OnlineStudentSchedulingContainerRemote [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRemoteQueueProcessor: RemoteQueueProcessor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRemoteRoomAvailability: RemoteRoomAvailability [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentSolverContainer: StudentSolverContainerRemote [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUpdater: OnlineStudentSchedulingGenericUpdater [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ block()</TD></TR>
<TR><TD ALIGN="LEFT" >+ configureLogging(logFile: String, properties: Properties)</TD></TR>
<TR><TD ALIGN="LEFT" >+ crateServerProxy(address: Address): SolverServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ createCourseSolverContainerProxy(address: Address): SolverContainer&lt;SolverProxy&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ createExamSolverContainerProxy(address: Address): SolverContainer&lt;ExamSolverProxy&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ createInstructorSchedulingContainerProxy(address: Address): SolverContainer&lt;InstructorSchedulingProxy&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ createOnlineStudentSchedulingContainerProxy(address: Address): SolverContainer&lt;OnlineSectioningServer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ createStudentSolverContainerProxy(address: Address): SolverContainer&lt;StudentSolverProxy&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getServers(onlyAvailable: boolean): List&lt;SolverServer&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getState(output: OutputStream)</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ receive(msg: Message)</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshCourseSolution(solutionIds: Long...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshCourseSolutionLocal(solutionIds: Long...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshExamSolution(sessionId: Long, examTypeId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshExamSolutionLocal(sessionId: Long, examTypeId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshInstructorSolution(solverGroupIds: Collection&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshInstructorSolutionLocal(solverGroupIds: Collection&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reset()</TD></TR>
<TR><TD ALIGN="LEFT" >+ shutdown()</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ suspect(suspected_mbr: Address)</TD></TR>
<TR><TD ALIGN="LEFT" >+ unblock()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolver(type: SolverType, id: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolverLocal(type: Integer, id: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ viewAccepted(view: View)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverServerService1058021598[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverServerService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iChannel: JChannel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseSolverContainer: SolverContainer&lt;SolverProxy&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamSolverContainer: SolverContainer&lt;ExamSolverProxy&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorSchedulingContainer: SolverContainer&lt;InstructorSchedulingProxy&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOnlineStudentSchedulingContainer: SolverContainer&lt;OnlineSectioningServer&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iServer: SolverServer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentSolverContainer: SolverContainer&lt;StudentSolverProxy&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ createCourseSolver(host: String, user: String, properties: DataProperties): SolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ createExamSolver(host: String, user: String, properties: DataProperties): ExamSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ createInstructorScheduling(host: String, user: String, properties: DataProperties): InstructorSchedulingProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ createStudentSolver(host: String, user: String, properties: DataProperties): StudentSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ destroy()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHost(regExp: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getServer(host: String): SolverServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getServers(onlyAvailable: boolean): List&lt;SolverServer&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverSolutionExportCsv676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverSolutionExportCsv</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverSolutionExportXml676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverSolutionExportXml</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverSolutionSave676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverSolutionSave</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SolverGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SolverGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SolverUnassignedClassesModel1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SolverUnassignedClassesModel</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialEventDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationCancel1865969213[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationCancel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: CancelSpecialRegistrationRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CancelSpecialRegistrationResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationChangeGradeModes1865969213[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationChangeGradeModes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: ChangeGradeModesRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): ChangeGradeModesResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationCreditChange836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationCreditChange</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApprovals: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourse: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCrn: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOriginalCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubject: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addApproval(app: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationEligibility1865969213[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationEligibility</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: SpecialRegistrationEligibilityRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): SpecialRegistrationEligibilityResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationEligibilityRequest836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationEligibilityRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassAssignments: Collection&lt;ClassAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iErrors: ArrayList&lt;ErrorMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestId: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addError(error: ErrorMessage)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationGradeModeChange836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationGradeModeChange</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApprovals: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourse: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCredit: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCrn: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOriginalGradeMode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedGradeMode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedGradeModeDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubject: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addApproval(app: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCrn(crn: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasCRN(extId: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationGradeModeChanges836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationGradeModeChanges</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAvailableChanges: Set&lt;SpecialRegistrationGradeMode&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCurrentGradeMode: SpecialRegistrationGradeMode [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAvailableChange(mode: SpecialRegistrationGradeMode)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAvailableChange(code: String): SpecialRegistrationGradeMode</TD></TR>
<TR><TD ALIGN="LEFT" >+ isCurrentGradeMode(code: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationRequestVariableTitleCourse1865969213[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationRequestVariableTitleCourse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: VariableTitleCourseRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): VariableTitleCourseResponse</TD></TR>
<TR><TD ALIGN="LEFT" ># getFirstDate(section: XSection, session: Session): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># getLastDate(section: XSection, session: Session): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationRetrieveAll1865969213[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationRetrieveAll</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: RetrieveAllSpecialRegistrationsRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;RetrieveSpecialRegistrationResponse&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationRetrieveGradeModes1865969213[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationRetrieveGradeModes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: RetrieveAvailableGradeModesRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): RetrieveAvailableGradeModesResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationSubmit1865969213[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationSubmit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: SubmitSpecialRegistrationRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): SubmitSpecialRegistrationResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationUpdate1865969213[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationUpdate</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: UpdateSpecialRegistrationRequest [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): UpdateSpecialRegistrationResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpecialRegistrationVariableCreditChange836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpecialRegistrationVariableCreditChange</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApprovals: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAvailableCredits: Set&lt;Float&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addApproval(app: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addAvailableCredit(credit: Float)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SponsoringOrganization629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SponsoringOrganization</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(): List&lt;SponsoringOrganization&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SponsoringOrganizationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SponsoringOrganizationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SponsoringOrganizationDelete1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SponsoringOrganizationDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SponsoringOrganizationEdit1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SponsoringOrganizationEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: Permission&lt;Session&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SponsoringOrganization): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SponsoringOrganization&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SponsoringOrganizationInterface4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SponsoringOrganizationInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SponsoringOrganizations1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SponsoringOrganizations</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(sponsor: SponsoringOrganization, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(sponsor: SponsoringOrganization, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpringApplicationContextHolder1791609515[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpringApplicationContextHolder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getBean(beanName: String): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpringLdapExternalUidLookup1093250208[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpringLdapExternalUidLookup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doLookup(uid: String): UserInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpringLdapExternalUidTranslation1093250208[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpringLdapExternalUidTranslation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ ext2uid(externalUserId: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ translate(uid: String, source: Source, target: Source): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ uid2ext(uid: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Staff629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Staff</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findMatchingName(fname: String, lname: String): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDeptName(sessionId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(instructorNameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStaffByDept(deptCode: String, acadSessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ nameLastNameFirst(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StaffDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StaffDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StaffImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StaffImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   trimLeadingZerosFromExternalId: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- findByExternalId(externalId: String, deptCode: String): Staff</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadFromStream(fis: FileInputStream)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadFromXML(filename: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StandardEventNoteDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StandardEventNoteDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StandardEventNoteDepartmentDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StandardEventNoteDepartmentDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StandardEventNoteGlobalDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StandardEventNoteGlobalDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StandardEventNoteSessionDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StandardEventNoteSessionDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StandardEventNotes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StandardEventNotes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(note: StandardEventNote, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(note: StandardEventNote, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StartEndTime183175081[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StartEndTime</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEnd: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStart: Integer [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StartEndTimeSelector531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StartEndTimeSelector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEnd: TimeSelector [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPanel: UniTimeWidget&lt;HorizontalPanel&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStart: TimeSelector [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addValueChangeHandler(handler: ValueChangeHandler&lt;StartEndTime&gt;): HandlerRegistration</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StatusPageSuggestionsAction1580621848[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StatusPageSuggestionsAction</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQuery: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUserId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUserName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): List&lt;String[]&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StringSolverProperty546475809[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StringSolverProperty</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getComparable(value: String): Comparable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getText(value: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Student629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Student</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addWaitList(co: CourseOffering, type: WaitListType, waitListed: boolean, changedBy: String, timeStamp: Date, hibSession: Session): WaitList</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(student: Student): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalId(sessionId: Long, externalId: String): Student</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalIdBringBackEnrollments(hibSession: Session, sessionId: Long, externalId: String): Student</TD></TR>
<TR><TD ALIGN="LEFT" >+ findConflictingStudents(classId: Long, startSlot: int, length: int, dates: List&lt;Date&gt;): Hashtable&lt;Long, Set&lt;Long&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAdvisorWaitListedCourseIds(useWaitLists: boolean, useNoSubs: boolean): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAdvisorWaitListedCourseIds(server: OnlineSectioningServer): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseRequest(co: CourseOffering): CourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExams(examType: Integer): Set&lt;Exam&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExams(examType: ExamType): Set&lt;Exam&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(instructorNameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSectioningStatusOption(option: Option): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEnrolled(co: CourseOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAllEnrollments(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetWaitLists(type: WaitListType, changedBy: String, timeStamp: Date, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentAccommodations1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentAccommodations</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(accomodation: StudentAccomodation, context: SessionContext, hibSession: Session, studentIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># save(record: Record, context: SessionContext, hibSession: Session, studentIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(accomodation: StudentAccomodation, record: Record, context: SessionContext, hibSession: Session, studentIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentAccomodationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentAccomodationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentAccomodationImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentAccomodationImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentAdvisorsExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentAdvisorsExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentAdvisorsImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentAdvisorsImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentAreaClassificationMajorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentAreaClassificationMajorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentAreaClassificationMinorDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentAreaClassificationMinorDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentAuthority723888399[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentAuthority</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowNoRole: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilter: Qualifiable[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRole: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ isMatch(authority: UserAuthority): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentClassEnrollment629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentClassEnrollment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllForStudent(studentId: Long): Iterator</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllForStudentAndTerm(studentId: Long, termId: Long): List&lt;StudentClassEnrollment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ sessionHasEnrollments(sessionId: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentClassEnrollmentDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentClassEnrollmentDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentClassPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentClassPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentConflictInfo1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentConflictInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAnother: ClassAssignmentDetails [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInfo: JenrlInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOther: ClassAssignmentDetails [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: StudentConflictInfo): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentEmail91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentEmail</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAdvisorRequestsPDF: byte[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCC: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseUrlProvider: CourseUrlProvider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDropEnrollment: XEnrollment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFailedCourseId: XCourseId [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFailedEnrollment: XEnrollment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFailedOffering: XOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFailure: SectioningException [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIncludeAdvisorRequests: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIncludeAdvisorRequestsPDF: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIncludeClassSchedule: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIncludeCourseRequests: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOldCourseId: XCourseId [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOldEnrollment: XEnrollment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOldOffering: XOffering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOldStudent: XStudent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOptional: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPermisionCheck: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReason: ReschedulingReason [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSourceAction: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: XStudent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubject: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectExt: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimetableImage: byte[] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- consent(server: OnlineSectioningServer, enrollment: XEnrollment): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dropEnrollment(dropEnrollment: XEnrollment): StudentEmail</TD></TR>
<TR><TD ALIGN="LEFT" >- endTime(time: XTime): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ failedEnrollment(failedOffering: XOffering, failedCourseId: XCourseId, failedEnrollment: XEnrollment, failure: SectioningException): StudentEmail</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudent(studentId: Long): StudentEmail</TD></TR>
<TR><TD ALIGN="LEFT" >+ fromAction(actionName: String): StudentEmail</TD></TR>
<TR><TD ALIGN="LEFT" ># generateAdvisorRequests(student: Student, requests: CourseRequestInterface, server: OnlineSectioningServer, helper: OnlineSectioningHelper, wlMode: WaitListMode): CourseRequestsTable</TD></TR>
<TR><TD ALIGN="LEFT" ># generateCourseRequests(student: Student, requests: CourseRequestInterface, server: OnlineSectioningServer, helper: OnlineSectioningHelper, wlMode: WaitListMode): CourseRequestsTable</TD></TR>
<TR><TD ALIGN="LEFT" ># generateListOfClasses(student: Student, server: OnlineSectioningServer, helper: OnlineSectioningHelper, wlMode: WaitListMode): Table</TD></TR>
<TR><TD ALIGN="LEFT" >- generateMessage(student: Student, server: OnlineSectioningServer, helper: OnlineSectioningHelper): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateTimetable(out: PrintWriter, server: OnlineSectioningServer, helper: OnlineSectioningHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateTimetableImage(server: OnlineSectioningServer): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" ># getCourseUrl(session: AcademicSessionInfo, course: XCourse): URL</TD></TR>
<TR><TD ALIGN="LEFT" ># getCourseUrl(server: OnlineSectioningServer, rc: RequestedCourse): URL</TD></TR>
<TR><TD ALIGN="LEFT" >+ includeAdvisorRequestsPDF(): StudentEmail</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ oldEnrollment(oldOffering: XOffering, oldCourseId: XCourseId, oldEnrollment: XEnrollment): StudentEmail</TD></TR>
<TR><TD ALIGN="LEFT" >+ oldStudent(oldStudent: XStudent): StudentEmail</TD></TR>
<TR><TD ALIGN="LEFT" >+ overridePermissions(courseRequests: boolean, classSchedule: boolean, advisorRequests: boolean): StudentEmail</TD></TR>
<TR><TD ALIGN="LEFT" >+ rescheduling(reason: ReschedulingReason): StudentEmail</TD></TR>
<TR><TD ALIGN="LEFT" >+ setOptional(optional: Boolean): StudentEmail</TD></TR>
<TR><TD ALIGN="LEFT" >- startTime(time: XTime): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentEnrollmentDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentEnrollmentDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentEnrollmentExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentEnrollmentExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentEnrollmentImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentEnrollmentImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(rootElement: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentEnrollmentMessageDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentEnrollmentMessageDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentEnrollments539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentEnrollments</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Student): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Student&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentExamReport921076682[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentExamReport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iClass2event: Hashtable&lt;Long, ClassEvent&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLocations: Hashtable&lt;Long, Location&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStudents: Hashtable&lt;Long, Student&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- generateCache()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLastChange(sections: TreeSet&lt;ExamSectionInfo&gt;): ChangeLog</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOfSubjectArea(sections: TreeSet&lt;ExamSectionInfo&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ printReport()</TD></TR>
<TR><TD ALIGN="LEFT" >+ printReport(studentId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printReport(student: Student, sections: TreeSet&lt;ExamSectionInfo&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printStudentReports(filePrefix: String, gen: FileGenerator): Hashtable&lt;Student, File&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCreditDF: DecimalFormat [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># exportStudent(studentEl: Element, student: Student)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentGroupDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentGroupDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentGroupImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentGroupImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentGroupInfo1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentGroupInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClasses: List&lt;ClassInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWeight: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ countStudentWeights(): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ countStudents(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ countStudentsOfConfiguration(configId: Long): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ countStudentsOfOffering(offeringId: Long): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGroupAssignment(classId: Long): ClassInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentAssignments(classId: Long): List&lt;StudentInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(root: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ value(group: StudentGroup): double</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentGroupReservationDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentGroupReservationDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentGroupType629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentGroupType</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByReference(reference: String, hibSession: Session): StudentGroupType</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentGroupTypeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentGroupTypeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentGroupTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentGroupTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(type: StudentGroupType, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(type: StudentGroupType, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentGroups1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentGroups</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(group: StudentGroup, context: SessionContext, hibSession: Session, studentIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFilter(context: SessionContext, hibSession: Session): Filter</TD></TR>
<TR><TD ALIGN="LEFT" ># getGroups(filter: String[], context: SessionContext, hibSession: Session): List&lt;StudentGroup&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(filter: String[], context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(filter: String[], data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># save(record: Record, context: SessionContext, hibSession: Session, studentIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(group: StudentGroup, record: Record, context: SessionContext, hibSession: Session, studentIds: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentGroupsConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentGroupsConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># eq(a: String, b: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># eq(a: Float, b: Float): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># importStudent(element: Element, externalId: String, students: Hashtable&lt;String, Student&gt;, session: Session, updatedStudents: Set&lt;Long&gt;, abbv2area: Map&lt;String, AcademicArea&gt;, code2clasf: Map&lt;String, AcademicClassification&gt;, code2major: Map&lt;String, PosMajor&gt;, code2minor: Map&lt;String, PosMinor&gt;, code2group: Map&lt;String, StudentGroup&gt;, code2accomodation: Map&lt;String, StudentAccomodation&gt;, code2conc: Map&lt;String, PosMajorConcentration&gt;, code2degree: Map&lt;String, Degree&gt;, code2program: Map&lt;String, Program&gt;, code2campus: Map&lt;String, Campus&gt;): Student</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" ># saveOrUpdateStudent(student: Student, updatedStudents: Set&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># updateStudentAccomodations(element: Element, student: Student, updatedStudents: Set&lt;Long&gt;, code2accomodation: Map&lt;String, StudentAccomodation&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># updateStudentGroups(element: Element, student: Student, updatedStudents: Set&lt;Long&gt;, code2group: Map&lt;String, StudentGroup&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># updateStudentInfo(element: Element, externalId: String, students: Hashtable&lt;String, Student&gt;, session: Session, updatedStudents: Set&lt;Long&gt;): Student</TD></TR>
<TR><TD ALIGN="LEFT" ># updateStudentMajors(element: Element, student: Student, updatedStudents: Set&lt;Long&gt;, abbv2area: Map&lt;String, AcademicArea&gt;, code2clasf: Map&lt;String, AcademicClassification&gt;, code2major: Map&lt;String, PosMajor&gt;, code2conc: Map&lt;String, PosMajorConcentration&gt;, code2degree: Map&lt;String, Degree&gt;, code2program: Map&lt;String, Program&gt;, code2campus: Map&lt;String, Campus&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># updateStudentMinors(element: Element, student: Student, updatedStudents: Set&lt;Long&gt;, abbv2area: Map&lt;String, AcademicArea&gt;, code2clasf: Map&lt;String, AcademicClassification&gt;, code2minor: Map&lt;String, PosMinor&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentInstrMthPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentInstrMthPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentMatcher1932076738[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDefaultStatus: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMyStudent: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iServer: OnlineSectioningServer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: XStudent [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- eq(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- has(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- like(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ server(): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >+ status(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ student(): XStudent</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentMatcher83644043[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignment: Assignment&lt;Request, Enrollment&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: Student [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- eq(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- has(name: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ status(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ student(): Student</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentNoteDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentNoteDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentQuery1541604099[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentQuery</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iFrom: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iParams: Map&lt;String, Map&lt;String, Object&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWhere: Map&lt;String, String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFrom(option: String, from: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addParameter(option: String, name: String, value: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addWhere(option: String, where: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFrom(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWhere(excludeOption: Collection&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(select: String): QueryInstance</TD></TR>
<TR><TD ALIGN="LEFT" >+ setParams(query: Query, excludeOption: Collection&lt;String&gt;): Query</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSchedulingCanEnroll539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSchedulingCanEnroll</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Student): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Student&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSchedulingCanRegister539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSchedulingCanRegister</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Student): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Student&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSchedulingCanRequirePreferences539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSchedulingCanRequirePreferences</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Student): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Student&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSchedulingChangeCriticalOverride539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSchedulingChangeCriticalOverride</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Student): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Student&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSchedulingDashboardExportCSV2111147082[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSchedulingDashboardExportCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ available(e: EnrollmentInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ credit(info: StudentInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ enrollment(enrl: int, tEnrl: int, swap: int, tSwap: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ enrollment(e: StudentInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ enrollment(e: EnrollmentInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ number(value: Integer, total: Integer): String</TD></TR>
<TR><TD ALIGN="LEFT" ># populateChangeLogTable(helper: ExportHelper, changelog: List&lt;SectioningAction&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># populateCourseTable(helper: ExportHelper, enrollments: List&lt;EnrollmentInfo&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># populateStudentTable(helper: ExportHelper, online: boolean, students: List&lt;StudentInfo&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reqCredit(min: float, max: float, totalMin: float, totalMax: float): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ waitlist(wait: int, tWait: int, noSub: int, tNoSub: int, unasg: int, tUnasg: int, topWaitingPriority: Integer): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ waitlist(e: StudentInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ waitlist(e: EnrollmentInfo): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSchedulingStatusExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSchedulingStatusExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># getAttribute(option: Option): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSchedulingStatusImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSchedulingStatusImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   dateFormat: Format&lt;Date&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   h24: Format&lt;Date&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   timeFormat: Format&lt;Date&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># getAttribute(option: Option): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSchedulingStatusTypes1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSchedulingStatusTypes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(status: StudentSectioningStatus, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(status: StudentSectioningStatus, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectHistoryDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectHistoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningContext1896556946[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningContext</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iOnline: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPin: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectioning: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCreditDF: DecimalFormat [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
<TR><TD ALIGN="LEFT" >- startSlot2startTime(startSlot: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- eq(a: String, b: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- eq(a: Float, b: Float): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># importPreferences(cr: CourseRequest, requestEl: Element, course: CourseOffering, extId2class: Map&lt;String, Set&lt;Class_&gt;&gt;, name2class: Map&lt;String, Set&lt;Class_&gt;&gt;, ref2im: Map&lt;String, InstructionalMethod&gt;, name2im: Map&lt;String, InstructionalMethod&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># importPreferences(cr: AdvisorCourseRequest, requestEl: Element, course: CourseOffering, extId2class: Map&lt;String, Set&lt;Class_&gt;&gt;, name2class: Map&lt;String, Set&lt;Class_&gt;&gt;, ref2im: Map&lt;String, InstructionalMethod&gt;, name2im: Map&lt;String, InstructionalMethod&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(rootElement: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >- makeTime(dp: DatePattern, days: String, startTime: String, endTime: String, length: String): TimeLocation</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningPref629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningPref</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ updateStudentSectioningPreferences()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningPrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningPrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningQueue629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningQueue</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># addItem(hibSession: Session, user: UserContext, sessionId: Long, type: Type, ids: Collection&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># addItem(hibSession: Session, user: UserContext, sessionId: Long, type: Type, ids: Long...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ allStudentsChanged(hibSession: Session, user: UserContext, sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ classAssignmentChanged(hibSession: Session, user: UserContext, sessionId: Long, classIds: Collection&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ classAssignmentChanged(hibSession: Session, user: UserContext, sessionId: Long, classIds: Long...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(q: StudentSectioningQueue): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getItems(hibSession: Session, sessionId: Long, lastTimeStamp: Date): TreeSet&lt;StudentSectioningQueue&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLastTimeStamp(hibSession: Session, sessionId: Long): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ offeringChanged(hibSession: Session, user: UserContext, sessionId: Long, offeringId: Collection&lt;Long&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ offeringChanged(hibSession: Session, user: UserContext, sessionId: Long, offeringId: Long...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sessionStatusChanged(hibSession: Session, user: UserContext, sessionId: Long, reload: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ studentChanged(hibSession: Session, user: UserContext, sessionId: Long, studentIds: Collection&lt;Long&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningQueueDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningQueueDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningSolverDashboard539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningSolverDashboard</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   studentSectioningSolverService: SolverService&lt;StudentSolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Session&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningSolverReports539497787[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningSolverReports</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningSolverService1058021598[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningSolverService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   sessionContext: SessionContext [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createConfig(settingsId: Long, options: Map&lt;Long, String&gt;): DataProperties</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSolver(properties: DataProperties): StudentSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSolver(properties: DataProperties, backup: byte[]): StudentSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(puid: String, sessionId: Long): StudentSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(includePublishedSolver: boolean): StudentSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ publishSolver(id: Long, properties: DataProperties, backup: byte[]): StudentSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ reload(properties: DataProperties): StudentSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeSolver()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningStatus629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningStatus</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addOption(option: Option)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long): List&lt;StudentSectioningStatus&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(hibSession: Session, sessionId: Long): List&lt;StudentSectioningStatus&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMatchingStatuses(sessionId: Long, options: Option...): Set&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPresentStatus(status: StudentSectioningStatus): StudentSectioningStatus</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPresentStatus(reference: String, sessionId: Long, hibSession: Session): StudentSectioningStatus</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStatus(reference: String, sessionId: Long, hibSession: Session): StudentSectioningStatus</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasEffectiveOption(status: StudentSectioningStatus, session: Session, options: Option...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasOption(options: Option...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasOption(option: Option, reference: String, sessionId: Long, hibSession: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeOption(option: Option)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSectioningStatusDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSectioningStatusDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findAll(): List&lt;StudentSectioningStatus&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSolver1936015484[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSolver</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseInfoCache: Map&lt;Long, XCourse&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistanceMetric: DistanceMetric [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructedOfferingsCache: Map&lt;String, Set&lt;Long&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingCache: Map&lt;Long, XOffering&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOnlineProperties: Map&lt;String, Object&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReports: Map&lt;String, InMemoryReport&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentCache: Map&lt;Long, Student&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># afterLoad()</TD></TR>
<TR><TD ALIGN="LEFT" >+ assign(request: XCourseRequest, enrollment: XEnrollment): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ backupXml(): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ canPassivate(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkDeadline(courseId: Long, sectionTime: XTime, type: Deadline): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearAllStudents()</TD></TR>
<TR><TD ALIGN="LEFT" >- clearCachedData()</TD></TR>
<TR><TD ALIGN="LEFT" >- clearCourseInfoTable()</TD></TR>
<TR><TD ALIGN="LEFT" >- clearInstructedOfferingsCache()</TD></TR>
<TR><TD ALIGN="LEFT" >- clearOfferingCache()</TD></TR>
<TR><TD ALIGN="LEFT" >- clearStudentCache()</TD></TR>
<TR><TD ALIGN="LEFT" >- convert(reservation: Reservation, assignment: Assignment&lt;Request, Enrollment&gt;): ReservationInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ createAction(clazz: Class&lt;X&gt;): X</TD></TR>
<TR><TD ALIGN="LEFT" ># createCurrentSolutionBackup(anonymize: boolean, idconv: boolean): Document</TD></TR>
<TR><TD ALIGN="LEFT" ># createModel(properties: DataProperties): StudentSectioningModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ currentSolutionInfo(): Map&lt;String, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># disposeNoInherit(unregister: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(action: OnlineSectioningAction&lt;E&gt;, user: Entity): E</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(action: OnlineSectioningAction&lt;E&gt;, user: Entity, callback: ServerCallback&lt;E&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(query: String, limit: Integer, matcher: CourseMatcher): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(query: String, limit: Integer, matcher: CourseMatcher, cmp: Comparator&lt;XCourseId&gt;): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findCourses(matcher: CourseMatcher): Collection&lt;XCourseId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findStudents(matcher: StudentMatcher): Collection&lt;XStudentId&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># finishBeforeSave()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseId: Long): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseName: String): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseId: Long, courseName: String): XCourseId</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseDeadlines(courseId: Long): CourseDeadlines</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseDetails(courseId: Long, provider: CourseDetailsProvider): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getCustomValidator(solver: Solver&lt;Request, Enrollment&gt;): ProblemSaver&lt;Request, Enrollment, StudentSectioningModel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getDatabaseLoader(model: StudentSectioningModel, assignment: Assignment&lt;Request, Enrollment&gt;): ProblemLoader&lt;Request, Enrollment, StudentSectioningModel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getDatabaseSaver(solver: Solver&lt;Request, Enrollment&gt;): ProblemSaver&lt;Request, Enrollment, StudentSectioningModel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEnrollments(offeringId: Long): XEnrollments</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExpectations(offeringId: Long): XExpectations</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructedOfferings(instructorExternalId: String): Collection&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOffering(offeringId: Long): XOffering</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOfferingsToPersistExpectedSpaces(minimalAge: long): List&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(name: String, defaultValue: E): E</TD></TR>
<TR><TD ALIGN="LEFT" >+ getReport(parameters: DataProperties): CSVFile</TD></TR>
<TR><TD ALIGN="LEFT" >+ getReport(reference: String): InMemoryReport</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestedCourseIds(studentId: Long): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequests(offeringId: Long): Collection&lt;XCourseRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getReservations(offeringId: Long): List&lt;ReservationInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudent(studentId: Long): XStudent</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOfferingLocked(offeringId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockAll(): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockOffering(offeringId: Long, studentIds: Collection&lt;Long&gt;, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockOffering(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockRequest(request: CourseRequestInterface, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockStudent(studentId: Long, offeringIds: Collection&lt;Long&gt;, actionName: String): Lock</TD></TR>
<TR><TD ALIGN="LEFT" >+ needPersistExpectedSpaces(offeringId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ persistExpectedSpaces(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ readLock(): Lock</TD></TR>
<TR><TD ALIGN="LEFT" ># readReports(document: Document)</TD></TR>
<TR><TD ALIGN="LEFT" >+ releaseAllOfferingLocks()</TD></TR>
<TR><TD ALIGN="LEFT" >+ releaseMasterLockIfHeld()</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(student: XStudent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ restore(folder: File, puid: String, removeFiles: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ restoreXml(data: byte[]): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># restureCurrentSolutionFromBackup(document: Document)</TD></TR>
<TR><TD ALIGN="LEFT" ># saveReports(document: Document)</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopSolver()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unload()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unlockOffering(offeringId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(expectations: XExpectations)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(student: XStudent, updateRequests: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(offering: XOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ waitlist(request: XCourseRequest, waitlist: boolean): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeLock(): Lock</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSolverContainer398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSolverContainer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPassivation: PassivationThread [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStudentSolvers: Map&lt;String, StudentSolver&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createSolver(user: String, config: DataProperties): StudentSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMemUsage(user: String): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolver(user: String): StudentSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSolver(user: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ start()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ unloadSolver(user: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentSolverContainerRemote398558421[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentSolverContainerRemote</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDispatcher: RpcDispatcher [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createProxy(address: Address, user: String): StudentSolverProxy</TD></TR>
<TR><TD ALIGN="LEFT" >+ createRemoteSolver(user: String, config: DataProperties, caller: Address): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispatch(address: Address, user: String, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ invoke(method: String, user: String, types: Class[], args: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubjectArea629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubjectArea</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(s: SubjectArea): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByAbbv(sessionId: Long, subjectAreaAbbr: String): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByAbbv(hibSession: Session, sessionId: Long, subjectAreaAbbr: String): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ findSameSubjectAreaInSession(session: Session): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ findUsingCampusYearTermExternalSubjectAbbreviation(campus: String, year: String, term: String, externalSubjectAreaAbbreviation: String, hibSession: Session): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ findUsingInitiativeYearTermSubjectAbbreviation(academicInitiative: String, academicYear: String, term: String, subjectAreaAbbreviation: String, hibSession: Session): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllSubjectAreas(sessionId: Long): TreeSet&lt;SubjectArea&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSubjectAreaList(sessionId: Long): List&lt;SubjectArea&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUserSubjectAreas(user: UserContext): TreeSet&lt;SubjectArea&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUserSubjectAreas(user: UserContext, allSubjectsIfExternalManager: boolean): TreeSet&lt;SubjectArea&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubjectAreaChangeDepartment1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubjectAreaChangeDepartment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SubjectArea): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubjectAreaDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubjectAreaDAO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getSubjectAreaForSession(subjectAreaAbbreviation: String, session: Session): SubjectArea</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubjectAreaDelete1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubjectAreaDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SubjectArea): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubjectAreaEdit1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubjectAreaEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: Permission&lt;Department&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SubjectArea): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SubjectArea&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubjectAreaImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubjectAreaImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- findByDeptCode(deptCode: String, sessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" >- findByExternalId(externalId: String, sessionId: Long): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubjectAreaInterface1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubjectAreaInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubjectAreaInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubjectAreaInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubjectAreas1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubjectAreas</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(area: SubjectArea, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- lastChangeForAllSubjects(context: SessionContext, hibSession: Session): HashMap&lt;Long, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- managersForAllDepts(context: SessionContext, hibSession: Session): HashMap&lt;Long, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(area: SubjectArea, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubjectHistoryDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubjectHistoryDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SubmitSpecialRegistrationRequest836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SubmitSpecialRegistrationRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassAssignments: Collection&lt;ClassAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourses: CourseRequestInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iErrors: ArrayList&lt;ErrorMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestId: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addError(error: ErrorMessage)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNote(course: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Suggestion1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Suggestion</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBaseCriteria: Map&lt;String, Double&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBaseUnassignedVariables: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBaseValue: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBtbInstructorConflicts: List&lt;BtbInstructorInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanAssign: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCriteria: Map&lt;String, Double&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDifferentAssignments: List&lt;ClassAssignmentDetails&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistributionConflicts: List&lt;DistributionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPlacement: ClassAssignmentDetails [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedPlacement: ClassAssignmentDetails [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentConflictSummary: TableCellMulti [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentConflicts: List&lt;StudentConflictInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUnassignedVariables: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUnresolvedConflicts: List&lt;ClassAssignmentDetails&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addBtbInstructorConflict(conf: BtbInstructorInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDifferentAssignment(assignment: ClassAssignmentDetails)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDistributionConflict(conf: DistributionInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStudentConflict(conf: StudentConflictInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addUnresolvedConflict(conflict: ClassAssignmentDetails)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(other: Suggestion): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ countStudentConflicts(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(classId: Long): SelectedAssignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(conflicts: boolean): List&lt;SelectedAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBaseCriterion(name: String): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCriterion(name: String): double</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Suggestion402768419[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Suggestion</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iAssignments: List&lt;InstructorAssignment&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ computeConflicts(assignment: InstructorAssignment, conflicts: Set&lt;InstructorAssignment&gt;, context: Context)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(tr: TeachingRequest, index: int): DepartmentalInstructor</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignments(instructor: DepartmentalInstructor): List&lt;InstructorAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ toInfo(context: Context): SuggestionInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ toInfo(context: Context, selected: InstructorAssignment): SuggestionInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuggestionInfo1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuggestionInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignments: List&lt;AssignmentInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrConflicts: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValues: Map&lt;String, Double&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAssignment(assignment: AssignmentInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addValue(criterion: String, value: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(s: SuggestionInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValue(criterion: String): Double</TD></TR>
<TR><TD ALIGN="LEFT" >+ nrConflicts(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuggestionMenu1706206988[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuggestionMenu</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addBlurHandler(handler: BlurHandler): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFocusHandler(handler: FocusHandler): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeSelected(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onBrowserEvent(event: Event)</TD></TR>
<TR><TD ALIGN="LEFT" >+ scrollToView()</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectItem(index: int): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuggestionProperties1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuggestionProperties</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFirstDay: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferences: List&lt;PreferenceInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedAssignments: List&lt;SelectedAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSolver: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPreference(preference: PreferenceInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSelectedAssignment(assignment: SelectedAssignment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(prefProlog: String): PreferenceInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(intPref: int): PreferenceInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuggestionPropertiesBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuggestionPropertiesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: SuggestionPropertiesRequest, context: SessionContext): SuggestionProperties</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuggestionPropertiesRequest1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuggestionPropertiesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iHistoryId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuggestionRpcRequest1374338342[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuggestionRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConfiguration: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Suggestions1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Suggestions</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowBreakHard: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBaseSuggestion: Suggestion [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepth: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilter: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrCombinationsConsidered: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrSolutions: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPlacements: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSameRoom: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSameTime: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuggestions: TreeSet&lt;Suggestion&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeoutReached: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addSuggestion(suggestion: Suggestion)</TD></TR>
<TR><TD ALIGN="LEFT" >+ last(): Suggestion</TD></TR>
<TR><TD ALIGN="LEFT" >+ size(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Suggestions676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Suggestions</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuggestionsContext43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuggestionsContext</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBaseStudentConflicts: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBaseStudentConflictsCommitted: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBaseStudentConflictsDistance: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBaseStudentConflictsHard: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseObjectives: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorNameFormat: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ courseObjectives(): Map&lt;String, String&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuggestionsFilterBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuggestionsFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ enumarate(request: SuggestionsFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: SuggestionsFilterRpcRequest, context: SessionContext): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDaysName(days: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(request: SuggestionsFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(lecture: Lecture): Map&lt;String, Collection&lt;Entity&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2time(timeSinceMidnight: int, useAmPm: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ suggestions(request: SuggestionsFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuggestionsFilterRpcRequest1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuggestionsFilterRpcRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SuggestionsResponse1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SuggestionsResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignment: SuggestionInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDomain: List&lt;SuggestionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDomainSize: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrCombinationsConsidered: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrSolutions: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuggestions: List&lt;SuggestionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeoutReached: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDomainValue(suggestion: SuggestionInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSuggestion(suggestion: SuggestionInfo)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SumPrefMix380494733[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SumPrefMix</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iCnt: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPref: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPref(prologPref: String, count: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Table1849130278[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Table</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iData: List&lt;String[]&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(line: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(row: int): String[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ size(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Table1951770193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Table</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iData: List&lt;String[]&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(line: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(row: int): String[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ size(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableCellBoolean442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableCellBoolean</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(c: TableCellInterface): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableCellClassName442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableCellClassName</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAlternatives: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAlternative(alternative: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableCellClickableClassName442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableCellClickableClassName</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClassId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableCellInterface442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableCellInterface&lt;T extends Comparable&lt;T&gt;&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iColor: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFormattedValue: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStyleName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUnderline: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: T [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(c: TableCellInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ setColor(color: String): TableCellInterface&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ setFormattedValue(formattedValue: String): TableCellInterface&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ setStyleName(styleName: String): TableCellInterface&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ setTitle(title: String): TableCellInterface&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ setValue(value: T): TableCellInterface&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableCellItems442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableCellItems</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iItems: List&lt;String[]&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(name: String, formatted: String, color: String, id: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ add(name: String, color: String, id: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getColor(index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFormattedValue(index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFormattedValue(separator: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getId(index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValue(index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValue(separator: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableCellMulti442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableCellMulti</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iChunks: List&lt;TableCellInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(chunk: TableCellInterface): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ add(chunk: String): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(c: TableCellInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(index: int): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ last(): TableCellInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableCellRooms442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableCellRooms</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iRooms: List&lt;String[]&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(name: String, color: String, id: Long, preference: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getColor(index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getId(index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(index: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValue(separator: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableCellText442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableCellText</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(c: TableCellInterface): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableCellTime442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableCellTime</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   iId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   iOrder: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(c: TableCellInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ setId(id: String): TableCellTime</TD></TR>
<TR><TD ALIGN="LEFT" >+ setOrder(order: Integer): TableCellTime</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableExporter64367429[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableExporter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># convertCSV(cell: TableCellInterface): String</TD></TR>
<TR><TD ALIGN="LEFT" ># convertPDF(cell: TableCellInterface): A</TD></TR>
<TR><TD ALIGN="LEFT" ># fillInFilter(filter: FilterInterface, helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># printTableCSV(table: TableInterface, helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># printTablePDF(table: TableInterface, helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># sort(table: TableInterface, helper: ExportHelper)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableHeaderIterface442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableHeaderIterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAlignment: Alignment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iComparable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDescription: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iVisible: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ setAlignment(alignment: Alignment): TableHeaderIterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ setComparable(comparable: boolean): TableHeaderIterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ setDescription(description: String): TableHeaderIterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ setVisible(visible: boolean): TableHeaderIterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iErrorMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHeader: TableHeaderIterface[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRows: List&lt;TableRowInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowPrefLegend: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTableId: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRow(row: TableRowInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHeader(index: int): TableHeaderIterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableRowInterface442142882[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableRowInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCells: TableCellInterface[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLink: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLinkName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelected: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compare(c1: TableCellInterface, c2: TableCellInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(row: TableRowInterface, column: int, asc: boolean): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCell(index: int): TableCellInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ setSelected(selected: boolean): TableRowInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskContext561943622[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskContext</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAttributes: Map&lt;String, Object&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCheck: PermissionCheck [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUser: UserContext [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkPermission(right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(targetId: Serializable, targetType: String, right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(targetObject: Object, right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(targetObject: Object, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(targetObject: Object, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(targetId: Serializable, targetType: String, right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionOtherAuthority(targetObject: Object, right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttribute(name: String): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttribute(attribute: SessionAttribute): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(targetId: Serializable, targetType: String, right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(targetObject: Object, right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(targetObject: Object, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(targetObject: Object, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(targetId: Serializable, targetType: String, right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionOtherAuthority(targetObject: Object, right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAttribute(name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAttribute(attribute: SessionAttribute)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskExecutionDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskExecutionDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskExecutionInterface160962237[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskExecutionInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCreated: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDayOfWeek: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDayOfYear: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExecutionDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFinished: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOutput: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iQueued: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSlot: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStarted: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: ExecutionStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatusMessage: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(exec: TaskExecutionInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExecutionTime(constants: GwtConstants): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskExecutionItem54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskExecutionItem</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createGson(): Gson</TD></TR>
<TR><TD ALIGN="LEFT" >- createRequest(execution: TaskExecution): ExecuteScriptRpcRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeItem()</TD></TR>
<TR><TD ALIGN="LEFT" ># onFinished()</TD></TR>
<TR><TD ALIGN="LEFT" ># onStarted()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskExecutionLogInterface160962237[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskExecutionLogInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iLog: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanEdit: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCanView: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExecutions: TreeSet&lt;TaskExecutionInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastExecuted: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastStatus: ExecutionStatus [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOwner: ContactInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParameters: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iScript: ScriptInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addExecution(execution: TaskExecutionInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canEdit(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ canView(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearExecutions()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearParameters()</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: TaskInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMultiExecutions(executions: Collection&lt;TaskExecutionInterface&gt;, checkPast: boolean): TreeSet&lt;MultiExecutionInterface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getParameter(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasExecutionsOfStatus(status: ExecutionStatus): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskOptionsBackend54906482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskOptionsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: GetTaskOptionsRpcRequest, context: SessionContext): TaskOptionsInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskOptionsInterface160962237[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskOptionsInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCanAdd: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstDayOfWeek: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iManager: ContactInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMonths: List&lt;SessionMonth&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iScripts: List&lt;ScriptInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSession: AcademicSessionInfo [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addScript(script: ScriptInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ canAdd(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskParameterDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskParameterDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingAssignmentsBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingAssignmentsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: TeachingAssignmentsPageRequest, context: SessionContext): GwtRpcResponseList&lt;InstructorInfo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingAssignmentsDetailBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingAssignmentsDetailBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: TeachingAssignmentsDetailRequest, context: SessionContext): InstructorInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingAssignmentsDetailRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingAssignmentsDetailRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iInstructorId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingAssignmentsExportCSV77043836[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingAssignmentsExportCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># export(request: TeachingAssignmentsPageRequest, list: List&lt;SingleTeachingAssingment&gt;, helper: ExportHelper, hasRequests: boolean, cookie: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCell(request: TeachingRequestInfo, instructor: InstructorInfo, column: Column): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getColumnName(column: Column): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNbrCells(column: COLUMN): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ isColumnVisible(column: Column, hasRequests: boolean, cookie: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferences(list: List&lt;PreferenceInfo&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingAssignmentsPageRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingAssignmentsPageRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: TeachingRequestsFilterRpcRequest [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingClassRequest629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingClassRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: TeachingClassRequest): int</TD></TR>
<TR><TD ALIGN="LEFT" ># isParentOf(r: TeachingClassRequest): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingClassRequestDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingClassRequestDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequest629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canCombine(other: TeachingRequest): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(r: TeachingRequest): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClasses(master: Class_, subparts: Set&lt;SchedulingSubpart&gt;): List&lt;Class_&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMasterRequest(checkClassRequests: boolean): TeachingClassRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ htmlLabel(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isStandard(master: TeachingClassRequest): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestDetailBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestDetailBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: TeachingRequestDetailRequest, context: SessionContext): TeachingRequestInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestDetailRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestDetailRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequestId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestInfo1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAttributePreferences: List&lt;PreferenceInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConflict: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourse: CourseInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorPreferences: List&lt;PreferenceInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: List&lt;InstructorInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLoad: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMatching: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrInstructors: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSections: List&lt;SectionInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValues: Map&lt;String, Double&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAttributePreference(preference: PreferenceInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructor(instructor: InstructorInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructorPreference(preference: PreferenceInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSection(section: SectionInfo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(r: TeachingRequestInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructor(index: int): InstructorInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructor(instructorId: Long): InstructorInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getValue(criterion: String): Double</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestMatcher586265501[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestMatcher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: FilterRpcRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructor: InstructorInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: TeachingRequestInfo [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ match(attr: String, term: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestsExportCSV77043836[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestsExportCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" ># export(request: TeachingRequestsPageRequest, list: List&lt;SingleTeachingAssingment&gt;, helper: ExportHelper, hasInstructors: boolean, cookie: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCell(request: TeachingRequestInfo, instructor: InstructorInfo, column: Column): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getColumnName(column: Column): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNbrCells(column: COLUMN): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ isColumnVisible(column: Column, hasInstructors: boolean, cookie: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferences(list: List&lt;PreferenceInfo&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestsFilterBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestsFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ enumarate(request: TeachingRequestsFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: TeachingRequestsFilterRpcRequest, context: SessionContext): FilterRpcResponse</TD></TR>
<TR><TD ALIGN="LEFT" ># fixAttributeTypes(request: TeachingRequestsFilterRpcRequest)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getQuery(request: FilterRpcRequest, user: UserContext): InstructorQuery</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestQuery(request: FilterRpcRequest, user: UserContext): RequestQuery</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(request: TeachingRequestsFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ suggestions(request: TeachingRequestsFilterRpcRequest, response: FilterRpcResponse, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toQuery(request: FilterRpcRequest): Query</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestsFilterRpcRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestsFilterRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestsPageBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestsPageBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: TeachingRequestsPageRequest, context: SessionContext): GwtRpcResponseList&lt;TeachingRequestInfo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestsPagePropertiesBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestsPagePropertiesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   instructorSchedulingSolverService: SolverService&lt;InstructorSchedulingProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: TeachingRequestsPagePropertiesRequest, context: SessionContext): TeachingRequestsPagePropertiesResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestsPagePropertiesRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestsPagePropertiesRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestsPagePropertiesResponse1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestsPagePropertiesResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAttributeTypes: List&lt;AttributeTypeInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAvailabilityModel: InstructorAvailabilityModel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartments: List&lt;DepartmentInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHasSolver: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastDepartmentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastSubjectAreaId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iModes: List&lt;RoomSharingDisplayMode&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferences: List&lt;PreferenceInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjecAreas: List&lt;SubjectAreaInterface&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAttributeType(type: AttributeTypeInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDepartment(department: DepartmentInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMode(mode: RoomSharingDisplayMode)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPreference(preference: PreferenceInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSubjectArea(subjectArea: SubjectAreaInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAttributeType(typeId: Long): AttributeTypeInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(p: String): PreferenceInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingRequestsPageRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingRequestsPageRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: TeachingRequestsFilterRpcRequest [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingResponsibilities1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingResponsibilities</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(responsibility: TeachingResponsibility, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" ># options(record: Record): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(responsibility: TeachingResponsibility, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingResponsibility629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingResponsibility</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addOption(option: Option)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMatchingResponsibilities(option: Option): Set&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTeachingResponsibility(reference: String, hibSession: Session): TeachingResponsibility</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasOption(option: Option): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasOption(option: Option, reference: String, hibSession: Session): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeOption(option: Option)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeachingResponsibilityDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeachingResponsibilityDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TestHqlExportToCSV1255872879[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TestHqlExportToCSV</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(user: UserContext, out: Printer, hql: String, fromRow: int, maxRows: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(helper: ExportHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >- format(column: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- header(ret: String[], o: Object, alias: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >- length(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >- line(ret: String[], o: Object, session: SessionImplementor)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reference(): String</TD></TR>
<TR><TD ALIGN="LEFT" >- skip(t: Type, lazy: boolean): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimeGrid531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimeGrid</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllSelections: List&lt;SelectionInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCellHeight: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCellWidth: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iColors: HashMap&lt;Long, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iContainer: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDayLabels: List&lt;P&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDayOfWeeks: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDays: int[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDock: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnd: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGrid: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHandlerRegistrations: List&lt;HandlerRegistration&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHeader: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetingClickHandlers: ArrayList&lt;MeetingClickHandler&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetingTable: ArrayList&lt;Meeting&gt;[][] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMeetings: ArrayList&lt;ArrayList&lt;Meeting&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMode: Mode [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPanel: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPropertiesProvider: EventPropertiesProvider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRTL: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceType: ResourceType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomNote: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomResources: List&lt;ResourceInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iScrollPanel: ScrollPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectedWeeks: List&lt;WeekInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelectionLayer: SelectionLayer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSelections: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSeparators: P[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowRoomNote: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowShadows: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStart: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimes: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTotalNrColumns: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iVLines: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iVerticalSplitByWeek: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWorkingHours: P [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addEvent(event: EventInterface): ArrayList&lt;Meeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ addEvent(event: EventInterface, eventMeetings: Collection&lt;MeetingInterface&gt;): ArrayList&lt;Meeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># addMeeting(event: EventInterface, firstMeeting: MeetingInterface, day: int, startSlot: int, length: int, startOffset: int, endOffset: int, name: String, note: ArrayList&lt;String&gt;, color: String, firstWeekIndex: int, nrMeetings: int, meetings: ArrayList&lt;Meeting&gt;, dates: String, rooms: String): Meeting</TD></TR>
<TR><TD ALIGN="LEFT" >+ addMeetingClickHandler(h: MeetingClickHandler)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPrintEvent(event: EventInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPrintEvent(event: EventInterface, meetings: Collection&lt;MeetingInterface&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" >+ destroy()</TD></TR>
<TR><TD ALIGN="LEFT" >+ firstSlot(): int</TD></TR>
<TR><TD ALIGN="LEFT" >- firstWorkDay(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getColor(event: EventInterface): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ gray(firstDay: int, lastDay: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ hideSelectionPopup()</TD></TR>
<TR><TD ALIGN="LEFT" >+ labelDays(first: WeekInterface, last: WeekInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ labelDays(dows: List&lt;String&gt;, week: WeekInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ lastSlot(): int</TD></TR>
<TR><TD ALIGN="LEFT" >- lastWorkDay(): int</TD></TR>
<TR><TD ALIGN="LEFT" >- list2string(list: List&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >- nrWorkDays(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeMeetingClickHandler(h: MeetingClickHandler)</TD></TR>
<TR><TD ALIGN="LEFT" >+ showSelections()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showVerticalSplit()</TD></TR>
<TR><TD ALIGN="LEFT" >+ shrink(skipDays: boolean, showUnavailable: boolean, day: boolean...)</TD></TR>
<TR><TD ALIGN="LEFT" >- weekIndex(m: MeetingInterface): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ yellow(start: int, stop: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimeHintBackend1801756021[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimeHintBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: TimeHintRequest, context: SessionContext): TimeHintResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimeHintRequest1640483035[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimeHintRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iParameter: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimeHintResponse1640483035[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimeHintResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iContent: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimeInfo1582234977[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimeInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDatePattern: DateInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDays: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMin: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPref: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStrike: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(t: TimeInfo, firstDay: Integer): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(t: TimeInfo): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDaysName(firstDay: Integer, CONSTANTS: GwtConstants): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDaysName(firstDay: Integer, shortDays: String[]): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDaysOrder(firstWorkDay: Integer): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndTime(CONSTANTS: GwtConstants): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(firstDay: Integer, endTime: boolean, CONSTANTS: GwtConstants): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartTime(CONSTANTS: GwtConstants): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2time(timeSinceMidnight: int, useAmPm: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2time(timeSinceMidnight: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimeObject1060204932[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimeObject</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   days: Set&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   endPeriod: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   patternName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startPeriod: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ asMeeting(): Meeting</TD></TR>
<TR><TD ALIGN="LEFT" >+ str2Slot(timeString: String): Integer</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimePattern629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimePattern</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(t: TimePattern): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ contains(other: TimePattern, strongComparison: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(session: Session, visible: Boolean): List&lt;TimePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(sessionId: Long, visible: Boolean): List&lt;TimePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllUsed(session: Session): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAllUsed(sessionId: Long): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ findApplicable(user: UserContext, minPerWeek: int, includeExactTime: boolean, department: Department): List&lt;TimePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findApplicable(user: UserContext, minutes: int, datePattern: DatePattern, model: DurationModel, includeExactTime: boolean, department: Department): List&lt;TimePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findApplicable(session: Session, includeHidden: boolean, includeExtended: boolean, includeExactTime: boolean, minutes: int, datePattern: DatePattern, model: DurationModel, department: Department): List&lt;TimePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findApplicable(sessionId: Long, includeHidden: boolean, includeExtended: boolean, includeExactTime: boolean, minutes: int, datePattern: DatePattern, model: DurationModel, department: Department): List&lt;TimePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByMinPerWeek(session: Session, includeHidden: boolean, includeExtended: boolean, includeExactTime: boolean, minPerWeek: int, department: Department): List&lt;TimePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByMinPerWeek(sessionId: Long, includeHidden: boolean, includeExtended: boolean, includeExactTime: boolean, minPerWeek: int, department: Department): List&lt;TimePattern&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByName(session: Session, name: String): TimePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByName(sessionId: Long, name: String): TimePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ findExactTime(sessionId: Long): TimePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDepartments(sessionId: Long): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMatchingTimePattern(sessionId: Long, pattern: TimePattern): TimePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMatchingTimePreference(sessionId: Long, timePref: TimePref): TimePref</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequiredTimeTable(allowHardPreferences: boolean): RequiredTimeTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequiredTimeTable(assignment: TimeLocation, allowHardPreferences: boolean): RequiredTimeTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimePatternModel(allowHardPreferences: boolean): TimePatternModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimePatternModel(assignment: TimeLocation, allowHardPreferences: boolean): TimePatternModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(other: TimePattern, strongComparison: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- possibleMatch(other: TimePattern, strongComparison: boolean): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimePatternDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimePatternDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimePatternDaysDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimePatternDaysDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimePatternModel629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimePatternModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iAllowHard: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iAssignment: TimeLocation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iBreakTime: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDayCodes: int[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iDays: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultSelection: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMinutes: int[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iModes: List&lt;RoomSharingDisplayMode&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPref: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPreferences: String[][] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimePattern: TimePattern [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ changeProhibited2Required(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ changeRequired2Prohibited(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" >+ combineMatching(model: TimePatternModel)</TD></TR>
<TR><TD ALIGN="LEFT" >+ combineMatching(model: TimePatternModel, clear: boolean, alg: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ combineWith(model: TimePatternModel, clear: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ combineWith(model: TimePatternModel, clear: boolean, alg: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ contains(assignment: Assignment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ countPreferences(prologPref: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBorder(day: int, time: int): Color</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCombinedPreference(givenDayCode: int, givenSlot: int, givenNrSlots: int, alg: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayCode(day: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayHeader(day: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEndTime(time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFieldText(day: int, time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getHour(time: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMinute(time: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMixAlg(algNum: int): PrefMix</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNormalizedPreference(day: int, time: int, decreaseFactor: double): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNrSharedSlots(dayCode1: int, slot1: int, nrSlots1: int, dayCode2: int, slot2: int, nrSlots2: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreference(day: int, time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferenceColor(pref: String): Color</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferenceText(pref: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSelectionLimits(idx: int): int[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSelectionName(idx: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSlot(time: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSlots(day: int, time: int): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartSlot(time: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartSlots(day: int, time: int): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStartTime(time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getText(day: int, time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTime(time: int): long</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimeHeaderShort(time: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEditable(day: int, time: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPreferenceEnabled(pref: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ setPreferenceUsingDayCodeStartSlot(dayCode: int, startSlot: int, pref: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2hour(slot: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2min(slot: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ time2slot(hour: int, min: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ weakenHardPreferences()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimePatternTimeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimePatternTimeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimePref629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimePref</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ combineWith(other: TimePref, clear: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ combineWith(other: TimePref, clear: boolean, alg: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequiredTimeTable(assignment: TimeLocation): RequiredTimeTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimePatternModel(assignment: TimeLocation): TimePatternModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSame(other: Preference): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ preferenceText(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ weakenHardPreferences(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimePrefDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimePrefDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimePrefInfo1304083885[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimePrefInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iDayOfWeek: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iEndTime: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPreference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iPreferenceText: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iStartTime: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- slot2time(slot: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimeUtils227704156[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimeUtils</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ parseMilitary(text: String): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseTime(constants: GwtConstants, text: String, start: Integer): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseTime2(constants: GwtConstants, text: String, start: Integer): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2aria(slot: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2military(slot: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2short(slot: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ slot2time(slot: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGrid676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGrid</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   courseTimetablingSolverService: SolverService&lt;SolverProxy&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: TimetableGridRequest, context: SessionContext): TimetableGridResponse</TD></TR>
<TR><TD ALIGN="LEFT" >- match(q: Query, name: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- match(q: Query, location: Location): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridCell602157687[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridCell</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBackground: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCommitted: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDate: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDay: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDays: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroup: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIndex: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iIndexPerDate: Map&lt;Integer, Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iItalics: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLength: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNames: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrLines: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrLinesPerDate: Map&lt;Integer, Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreference: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProperties: Map&lt;Integer, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTime: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitles: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: Type [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWeekCode: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addInstructor(name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addName(name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRoom(name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTitle(title: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearName()</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(c: TimetableGridCell): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getIndex(date: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructor(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getMinLines(showRoom: boolean, showInstructor: boolean, showTime: boolean, showPreference: boolean, showDate: boolean): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNrLines(date: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(p: Property, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoom(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTitle(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWeekCode(n: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWeekCodeNextBitSet(n: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasDate(n: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasProperty(p: Property): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetInstructors()</TD></TR>
<TR><TD ALIGN="LEFT" >+ sameClassOrMeeting(c: TimetableGridCell): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridContext43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridContext</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBgMode: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassFilter: Query [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDayCode: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDispMode: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFilter: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstDay: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstSessionDay: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionalTypeColors: HashMap&lt;Integer, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorNameFormat: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLocale: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrWeeks: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPattern: BitSet [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceType: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionEndDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionStartDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowClassNameTwoLines: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowClassSuffix: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowConfigName: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowCourseTitle: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowCrossLists: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowDate: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowEvents: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowFreeTimes: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowInstructor: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowPreference: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iShowTime: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSlotsPerWeek: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartDayDayOfWeek: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWeekOffset: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ ensureLocalizationIsSet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstructionalTypeColor(id: Integer): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridFilterBackend43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridFilterBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: TimetableGridFilterRequest, context: SessionContext): TimetableGridFilterResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridFilterRequest602157687[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridFilterRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridFilterResponse602157687[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridFilterResponse</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridHelper43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- addCell(data: TimetableGridCell[][][], day: int, slot: int, length: int, cell: TimetableGridCell)</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeIndexes(model: TimetableGridModel, context: TimetableGridContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ conflicts2color(nrConflicts: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ conflicts2colorFast(nrConflicts: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getCell(data: TimetableGridCell[][][], day: int, slot: int, idx: int): TimetableGridCell</TD></TR>
<TR><TD ALIGN="LEFT" >- getIndex(data: TimetableGridCell[][][], day: int, slot: int, length: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >- gradient(min: int, v1: int, max: int, v2: int, value: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ hardConflicts2pref(assignmentInfo: AssignmentPreferenceInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ initBgModeUselessSlots(model: TimetableGridModel, data: TimetableGridCell[][][])</TD></TR>
<TR><TD ALIGN="LEFT" >- isUseless(data: TimetableGridCell[][][], d: int, s: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- isUselessFirst(data: TimetableGridCell[][][], d: int, s: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- nrCells(data: TimetableGridCell[][][], day: int, slot: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >- nrEmptyAbove(data: TimetableGridCell[][][], day: int, slot: int, index: int, length: int, cell: TimetableGridCell): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ pattern2string(pattern: BitSet): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ percentage2color(p: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ pref2color(pref: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ pref2color(pref: int): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridModel602157687[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBackgrounds: List&lt;TimetableGridBackground&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCells: List&lt;TimetableGridCell&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstDay: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFirstSessionDay: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNameColor: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iResourceType: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSize: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUtilization: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addBackground(background: TimetableGridBackground)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCell(cell: TimetableGridCell)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNrDateLines(day: int, date: int, minLines: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNrLines(day: int, minLines: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasDate(day: int, date: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAvailable(day: int, slot: int): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridRequest602157687[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iFilter: FilterInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridResponse602157687[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignedLegend: List&lt;TimetableGridLegend&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultDatePatternName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iModels: List&lt;TimetableGridModel&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNotAssignedLegend: List&lt;TimetableGridLegend&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPageMessages: List&lt;PageMessage&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWeekOffset: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAssignedLegend(color: String, label: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addModel(model: TimetableGridModel)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addNotAssignedLegend(color: String, label: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPageMessage(message: PageMessage)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridSolutionHelper43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridSolutionHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ countUtilization(assignments: Iterable&lt;Assignment&gt;, context: TimetableGridContext): double</TD></TR>
<TR><TD ALIGN="LEFT" ># createCell(model: TimetableGridModel, day: int, slot: int, hibSession: Session, assignment: Assignment, context: TimetableGridContext, notAvailable: boolean): TimetableGridCell</TD></TR>
<TR><TD ALIGN="LEFT" >+ createCells(model: TimetableGridModel, assignments: List&lt;Assignment&gt;, hibSession: Session, context: TimetableGridContext, notAvailable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># createCells(model: TimetableGridModel, assignment: Assignment, hibSession: Session, context: TimetableGridContext, notAvailable: boolean): List&lt;TimetableGridCell&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># createMeetingCells(model: TimetableGridModel, session: Session, context: TimetableGridContext, times: Collection&lt;TimeBlock&gt;, room: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solutionIdsStr: String, room: Location, hibSession: Session, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solutionIdsStr: String, instructor: DepartmentalInstructor, hibSession: Session, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solutionIdsStr: String, department: Department, hibSession: Session, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solutionIdsStr: String, sa: SubjectArea, hibSession: Session, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solutionIdsStr: String, cc: CurriculumClassification, hibSession: Session, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solutionIdsStr: String, g: StudentGroup, hibSession: Session, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solutionIdsStr: String, g: StudentGroupInfo, hibSession: Session, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ formatDatePattern(dp: DatePattern, dayCode: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hardConflicts2pref(assignmentInfo: AssignmentPreferenceInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >- match(context: TimetableGridContext, a: Assignment, m: TimetableGridModel): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableGridSolverHelper43990826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableGridSolverHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addCrosslistedNames(model: TimetableGridModel, context: TimetableGridContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># countUtilization(context: TimetableGridContext, placements: Iterable&lt;Placement&gt;): double</TD></TR>
<TR><TD ALIGN="LEFT" ># createCell(model: TimetableGridModel, solver: TimetableSolver, day: int, slot: int, lecture: Lecture, placement: Placement, context: TimetableGridContext, notAvailable: boolean): TimetableGridCell</TD></TR>
<TR><TD ALIGN="LEFT" ># createCells(model: TimetableGridModel, solver: TimetableSolver, placements: Collection&lt;Placement&gt;, context: TimetableGridContext, notAvailable: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" ># createCells(model: TimetableGridModel, solver: TimetableSolver, resource: Placement[], context: TimetableGridContext, firstDay: int, lastDay: int)</TD></TR>
<TR><TD ALIGN="LEFT" ># createCells(model: TimetableGridModel, solver: TimetableSolver, placement: Placement, context: TimetableGridContext, notAvailable: boolean): List&lt;TimetableGridCell&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solver: TimetableSolver, room: RoomConstraint, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solver: TimetableSolver, instructor: InstructorConstraint, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solver: TimetableSolver, department: DepartmentSpreadConstraint, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solver: TimetableSolver, resourceType: int, resourceId: long, name: String, size: int, placements: Collection&lt;Placement&gt;, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solver: TimetableSolver, name: String, students: List&lt;Student&gt;, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ createModel(solver: TimetableSolver, group: StudentGroup, context: TimetableGridContext): TimetableGridModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ fixClassName(context: TimetableGridContext, cell: TimetableGridCell, clazz: Class_, course: CourseOffering)</TD></TR>
<TR><TD ALIGN="LEFT" >+ fixClassNames(model: TimetableGridModel, context: TimetableGridContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ fixInstructors(model: TimetableGridModel, context: TimetableGridContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ hardConflicts2pref(assignment: Assignment&lt;Lecture, Placement&gt;, lecture: Lecture, placement: Placement): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hardConflicts2prefNoCache(assignment: Assignment&lt;Lecture, Placement&gt;, lecture: Lecture, placement: Placement): String</TD></TR>
<TR><TD ALIGN="LEFT" >- match(q: Query, p: Placement, m: TimetableGridModel): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableInfoUtil1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableInfoUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ deleteFile(name: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadFromFile(name: String): TimetableInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToFile(name: String, info: TimetableInfo): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableManager629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableManager</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(o: Object): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ departmentsForSession(sessionId: Long): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByExternalId(externalId: String): TimetableManager</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClasses(session: Session): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDistributionPreferences(session: Session): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(instructorNameFormat: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotAssignedClasses(solution: Solution): Collection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSolverGroups(session: Session): Set</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWithUniqueId(uniqueId: Long): TimetableManager</TD></TR>
<TR><TD ALIGN="LEFT" >+ sessionsCanManage(): Set</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableManagerDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableManagerDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableManagerDelete1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableManagerDelete</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: TimetableManager): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableManagerEdit1530278742[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableManagerEdit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionSession: Permission&lt;Session&gt; [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: TimetableManager): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;TimetableManager&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetableSolver1792699557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetableSolver</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAssignmentRecords: Vector&lt;AssignmentRecord&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBestAssignmentRecords: Vector&lt;AssignmentRecord&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCbsInfo: ConflictStatisticsInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCommitedClassAssignmentProxy: CommitedClassAssignmentProxy [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartmentIds: HashSet [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># afterFinalSectioning()</TD></TR>
<TR><TD ALIGN="LEFT" >+ assign(hints: Collection)</TD></TR>
<TR><TD ALIGN="LEFT" >+ assignSelectedAssignments(assignments: List&lt;SelectedAssignment&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># beforeStart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeConfTable(context: SuggestionsContext, request: ComputeConflictTableRequest): List&lt;ClassAssignmentDetails&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeSuggestions(context: SuggestionsContext, request: ComputeSuggestionsRequest): Suggestions</TD></TR>
<TR><TD ALIGN="LEFT" >+ conflictInfo(hints: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" ># createCurrentSolutionBackup(anonymize: boolean, idconv: boolean): Document</TD></TR>
<TR><TD ALIGN="LEFT" ># createModel(properties: DataProperties): TimetableModel</TD></TR>
<TR><TD ALIGN="LEFT" ># disposeNoInherit(unregister: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ export(useAmPm: boolean): CSVFile</TD></TR>
<TR><TD ALIGN="LEFT" >+ finalSectioning()</TD></TR>
<TR><TD ALIGN="LEFT" ># finishBeforeSave()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignedClasses(prefix: String...): List&lt;ClassAssignmentDetails&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(clazz: Class_): Assignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignment(classId: Long): Assignment</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfo(clazz: Class_): AssignmentPreferenceInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfo(classId: Long): AssignmentPreferenceInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfoTable(classesOrClassIds: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentInfoTable2(classesOrClassIds: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentTable(classesOrClassIds: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAssignmentTable2(classesOrClassIds: Collection): Hashtable</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCbsInfo(classId: Long): ConflictStatisticsInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getChangesToSolution(solutionId: Long): List&lt;RecordedAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getChangesToSolution(solutionId: Long, closeSession: boolean): List&lt;RecordedAssignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassAssignmentDetails(classId: Long, includeConstraints: boolean): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassAssignmentDetails(context: SuggestionsContext, classId: Long, includeDomain: boolean, includeConstraints: boolean): ClassAssignmentDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflictingTimeBlocks(classId: Long): Set&lt;TimeBlock&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConflicts(classId: Long): Set&lt;Assignment&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConstraintName(constraint: Constraint&lt;Lecture, Placement&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getDatabaseLoader(model: TimetableModel, assignment: Assignment&lt;Lecture, Placement&gt;): ProblemLoader&lt;Lecture, Placement, TimetableModel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getDatabaseSaver(solver: Solver&lt;Lecture, Placement&gt;): ProblemSaver&lt;Lecture, Placement, TimetableModel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInfo(hint: Hint): AssignmentPreferenceInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotValidReason(hint: Hint): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotValidReason(lecture: Lecture, assignment: Assignment&lt;Lecture, Placement&gt;, placement: Placement, useAmPm: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNotValidReason(placement: Placement, assignment: Assignment&lt;Lecture, Placement&gt;, useAmPm: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRoomReport(sessionDays: BitSet, startDayDayOfWeek: int, roomType: Long, nrWeeks: Float): RoomReport</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSelectedSuggestion(context: SuggestionsContext, request: SelectedAssignmentsRequest): Suggestion</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimetableGridTables(context: TimetableGridContext): List&lt;TimetableGridModel&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUnassignedClassesModel(prefix: String...): SolverUnassignedClassesModel</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasConflicts(offeringId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(properties: DataProperties)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadSuggestionFilter(classId: Long): Map&lt;String, Collection&lt;Entity&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >- match(q: Query, name: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- match(q: Query, rc: RoomConstraint): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ restoreBest()</TD></TR>
<TR><TD ALIGN="LEFT" ># restureCurrentSolutionFromBackup(document: Document)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(createNewSolution: boolean, commitSolution: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save()</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveBest()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopSolver()</TD></TR>
<TR><TD ALIGN="LEFT" ># useAmPm(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Timetables676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Timetables</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SolverGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SolverGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetablesSolutionChangeNote676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetablesSolutionChangeNote</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetablesSolutionCommit676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetablesSolutionCommit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SolverGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- hasInstance(sessionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SolverGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetablesSolutionDelete676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetablesSolutionDelete</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetablesSolutionExportCsv676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetablesSolutionExportCsv</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetablesSolutionLoad676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetablesSolutionLoad</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: Solution): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;Solution&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TimetablesSolutionLoadEmpty676728335[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TimetablesSolutionLoadEmpty</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ check(user: UserContext, source: SolverGroup): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ type(): Class&lt;SolverGroup&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Tracker1875904956[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Tracker</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCounters: Map&lt;String, Counter&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ create(id: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ decrement(id: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ destroy(id: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ increment(id: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWorking(id: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TravelTime629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TravelTime</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ populateTravelTimes(metric: DistanceMetric, sessionId: Long, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ populateTravelTimes(metric: DistanceMetric, sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ populateTravelTimes(metric: DistanceMetric, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ populateTravelTimes(metric: DistanceMetric)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TravelTimeDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TravelTimeDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TravelTimeResponse1687807301[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TravelTimeResponse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRooms: List&lt;Room&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRoom(room: Room)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TravelTimesBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TravelTimesBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: TravelTimesRequest, context: SessionContext): TravelTimeResponse</TD></TR>
<TR><TD ALIGN="LEFT" ># load(sessionId: Long, request: TravelTimesRequest, response: TravelTimeResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># save(sessionId: Long, request: TravelTimesRequest)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TravelTimesExport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TravelTimesExport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- fillLocationData(location: Location, element: Element)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveXml(document: Document, session: Session, parameters: Properties)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TravelTimesImport876794133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TravelTimesImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- findLocation(sessionId: Long, element: Element): Location</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadXml(root: Element)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TravelTimesLoad82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TravelTimesLoad</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TravelTimesRequest1687807301[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TravelTimesRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCommand: Command [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: List&lt;Room&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRoom(room: Room)</TD></TR>
<TR><TD ALIGN="LEFT" >+ init(): TravelTimesRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadRooms(): TravelTimesRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveRooms(rooms: List&lt;Room&gt;): TravelTimesRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TravelTimesSave82359199[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TravelTimesSave</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UCCCoursesLookup1860031534[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UCCCoursesLookup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCache: Map&lt;Long, CourseAttributeCache&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalTermProvider: ExternalTermProvider [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addSuggestions(server: OnlineSectioningServer, helper: OnlineSectioningHelper, query: String, filter: FilterRpcResponse)</TD></TR>
<TR><TD ALIGN="LEFT" >+ dispose()</TD></TR>
<TR><TD ALIGN="LEFT" ># fixQuery(query: String): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getBannerTerm(session: AcademicSessionInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getCourseAttributes(session: AcademicSessionInfo, hibSession: Session): Collection&lt;CourseAttribute&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseIds(session: AcademicSessionInfo, hibSession: Session, query: String, allowPartialMatch: boolean): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourses(server: OnlineSectioningServer, helper: OnlineSectioningHelper, query: String, allowPartialMatch: boolean): List&lt;XCourse&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourses(session: AcademicSessionInfo, hibSession: Session, query: String, allowPartialMatch: boolean): List&lt;CourseOffering&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># useCache(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UnassignedClassRow1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UnassignedClassRow</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iClazz: Class_ [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInitial: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNrStudents: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOrd: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(ucr: UnassignedClassRow): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UnassignedClassesModel1605871111[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UnassignedClassesModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRows: List&lt;UnassignedClassRow&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getRow(row: int): UnassignedClassRow</TD></TR>
<TR><TD ALIGN="LEFT" >+ rows(): List&lt;UnassignedClassRow&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UnavailableDay1136156345[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UnavailableDay</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDate: Date [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(block: TimeBlock): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UnavailableEventDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UnavailableEventDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UniTimeAction1976086910[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UniTimeAction&lt;T extends UniTimeForm&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   form: T [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   op: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   request: HttpServletRequest [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   response: HttpServletResponse [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   sessionContext: SessionContext [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># getPermission(name: String): Permission&lt;X&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ guessAccessKey(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ stripAccessKey(name: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UniTimeFilterBox531165846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UniTimeFilterBox&lt;T extends FilterRpcRequest&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAcademicSession: AcademicSessionProvider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFilter: UniTimeWidget&lt;FilterBox&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInitialized: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addBlurHandler(handler: BlurHandler): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >+ addChip(chip: Chip, fireEvents: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFilter(filter: Filter)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addFocusHandler(handler: FocusHandler): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >+ addKeyDownHandler(handler: KeyDownHandler): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >+ addKeyPressHandler(handler: KeyPressHandler): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >+ addKeyUpHandler(handler: KeyUpHandler): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" ># addSuggestion(suggestions: List&lt;Suggestion&gt;, entity: Entity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addValueChangeHandler(handler: ValueChangeHandler&lt;String&gt;): HandlerRegistration</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearHint()</TD></TR>
<TR><TD ALIGN="LEFT" ># createRpcRequest(): T</TD></TR>
<TR><TD ALIGN="LEFT" ># createRpcRequest(command: Command, sessionId: Long, chips: List&lt;Chip&gt;, text: String): T</TD></TR>
<TR><TD ALIGN="LEFT" ># fireValueChangeEvent()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getChip(command: String): Chip</TD></TR>
<TR><TD ALIGN="LEFT" >+ getChips(command: String): List&lt;Chip&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getElements(callback: AsyncCallback&lt;List&lt;Entity&gt;&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasChip(chip: Chip): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hideFilterPopup()</TD></TR>
<TR><TD ALIGN="LEFT" ># init(init: boolean, academicSessionId: Long, onSuccess: Command)</TD></TR>
<TR><TD ALIGN="LEFT" ># initAsync()</TD></TR>
<TR><TD ALIGN="LEFT" ># onLoad(result: FilterRpcResponse)</TD></TR>
<TR><TD ALIGN="LEFT" ># populateFilter(filter: Filter, entities: List&lt;Entity&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeChip(chip: Chip, fireEvents: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ showFilterPopup()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toAriaString(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UniTimeHeaderPanel864400258[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UniTimeHeaderPanel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iButtons: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClickHandlers: HashMap&lt;String, ClickHandler&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClones: List&lt;UniTimeHeaderPanel&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iContent: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iKeyDownHandler: KeyDownHandler [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLeft: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLoadingImage: Image [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOpenCloseImage: OpenCloseSectionImage [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOperations: HashMap&lt;String, Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRight: P [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRotateFocus: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: P [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addButton(operation: String, name: String, clickHandler: ClickHandler)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addButton(operation: String, name: String, width: Integer, clickHandler: ClickHandler)</TD></TR>
<TR><TD ALIGN="LEFT" >- addButton(operation: String, name: String, accessKey: Character, width: String, clickHandler: ClickHandler): Button</TD></TR>
<TR><TD ALIGN="LEFT" >+ addCollapsibleHandler(handler: ValueChangeHandler&lt;Boolean&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearMessage()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clonePanel(newTitle: String): UniTimeHeaderPanel</TD></TR>
<TR><TD ALIGN="LEFT" >+ clonePanel(): UniTimeHeaderPanel</TD></TR>
<TR><TD ALIGN="LEFT" >+ getButton(operation: String): Button</TD></TR>
<TR><TD ALIGN="LEFT" >+ guessAccessKey(name: String): Character</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertLeft(widget: Widget, first: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertRight(widget: Widget, first: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertWidget(widget: Widget)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEnabled(button: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEnabled(operation: String): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ showLoading()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stripAccessKey(name: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UniTimeNotifications179015904[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UniTimeNotifications</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createTriggers()</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(text: String, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(text: String, t: Throwable, callback: Command)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(text: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(text: String, callback: Command)</TD></TR>
<TR><TD ALIGN="LEFT" >+ info(text: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ info(text: String, callback: Command)</TD></TR>
<TR><TD ALIGN="LEFT" >+ warn(text: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ warn(text: String, callback: Command)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UniTimePermissionCheck944572514[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UniTimePermissionCheck</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   applicationContext: ApplicationContext [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionDepartment: PermissionDepartment [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionSession: PermissionSession [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(user: UserContext, targetId: Serializable, targetType: String, right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(user: UserContext, domainObject: Object, right: Right)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(user: UserContext, targetId: Serializable, targetType: String, right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermission(user: UserContext, targetObject: Object, right: Right, other: OtherAuthority)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(user: UserContext, targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnyAuthority(user: UserContext, targetObject: Object, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(user: UserContext, targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkPermissionAnySession(user: UserContext, targetObject: Object, right: Right, filter: Qualifiable...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(user: UserContext, targetId: Serializable, targetType: String, right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(user: UserContext, domainObject: Object, right: Right): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(user: UserContext, targetId: Serializable, targetType: String, right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermission(user: UserContext, targetObject: Object, right: Right, other: OtherAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(user: UserContext, targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnyAuthority(user: UserContext, targetObject: Object, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(user: UserContext, targetId: Serializable, targetType: String, right: Right, filter: Qualifiable...): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasPermissionAnySession(user: UserContext, targetObject: Object, right: Right, filter: Qualifiable...): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UniTimePrincipal998479413[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UniTimePrincipal</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: HashMap&lt;Long, Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addStudentId(sessionId: Long, studentId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStudentId(sessionId: Long): Long</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UniTimeUserContext641976759[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UniTimeUserContext</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLogin: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPassword: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ defaultSession(sessions: TreeSet&lt;Session&gt;, role: HasRights, primaryCampus: String): Session</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultSession(sessions: TreeSet&lt;Session&gt;, role: HasRights): Session</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Update2045803708[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Update</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Long...): Update</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Collection&lt;Long&gt;): Update</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateBuildingBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateBuildingBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(buildingInterface: BuildingInterface, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: UpdateBuildingRequest, context: SessionContext): BuildingInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># saveOrUpdate(buildingInterface: BuildingInterface, updateRoomCoordinates: boolean, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" ># updateRooms(context: SessionContext)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateBuildingRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateBuildingRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAction: UpdateBuildingAction [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBuilding: BuildingInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUpdateRoomCoordinates: Boolean [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateCourseOfferingBackend1624300373[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateCourseOfferingBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   limitedEdit: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   logger: Logger [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   permissionOfferingLockNeeded: Permission&lt;InstructionalOffering&gt; [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   updateCoordinators: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   updateNote: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: UpdateCourseOfferingRequest, context: SessionContext): CourseOfferingInterface</TD></TR>
<TR><TD ALIGN="LEFT" >- isWaitlistingProhibited(courseOfferingInterface: CourseOfferingInterface, prohibitedOverride: OverrideType): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># save(courseOfferingInterface: CourseOfferingInterface, context: SessionContext): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" ># update(courseOfferingInterface: CourseOfferingInterface, context: SessionContext): CourseOffering</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateCourseOfferingRequest1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateCourseOfferingRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAction: UpdateCourseOfferingAction [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseOffering: CourseOfferingInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateDepartmentBackend1360869250[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateDepartmentBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(DepartmentInterface: DepartmentInterface, context: SessionContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: UpdateDepartmentRequest, context: SessionContext): DepartmentInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># saveOrUpdate(departmentInterface: DepartmentInterface, context: SessionContext): Department</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateDepartmentRequest1559014573[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateDepartmentRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAction: UpdateDepartmentAction [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: DepartmentInterface [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateInstructorAttributeBackend1334400992[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateInstructorAttributeBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># createOrUpdateAttribute(attribute: AttributeInterface, add: List&lt;Long&gt;, drop: List&lt;Long&gt;, sessionId: Long, hibSession: Session, context: SessionContext, future: boolean): InstructorAttribute</TD></TR>
<TR><TD ALIGN="LEFT" ># dropAttribute(attributeId: Long, sessionId: Long, hibSession: Session, context: SessionContext, future: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: UpdateInstructorAttributeRequest, context: SessionContext): AttributeInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># lookuDepartment(hibSession: Session, original: DepartmentInterface, future: boolean, sessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupAttribute(hibSession: Session, original: AttributeInterface, future: boolean, sessionId: Long): InstructorAttribute</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupAttribute(hibSession: Session, attributeId: Long, future: boolean, sessionId: Long): InstructorAttribute</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupInstructors(hibSession: Session, ids: List&lt;Long&gt;, future: boolean, sessionId: Long): Collection&lt;DepartmentalInstructor&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateInstructorAttributeRequest1591923739[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateInstructorAttributeRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAddInstructors: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAttribute: AttributeInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeleteAttributeId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDropInstructors: List&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addInstructor(instructorId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ dropInstructor(instructorId: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateRoomDepartmentsBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateRoomDepartmentsBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: UpdateRoomDepartmentsRequest, context: SessionContext): GwtRpcResponseNull</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateRoomDepartmentsRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateRoomDepartmentsRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAddLocations: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: DepartmentInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDropLocations: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExamType: ExamTypeInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addLocation(locationId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ dropLocation(locationId: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateRoomFeatureBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateRoomFeatureBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># createOrUpdateFeature(feature: FeatureInterface, add: List&lt;Long&gt;, drop: List&lt;Long&gt;, sessionId: Long, hibSession: Session, context: SessionContext, future: boolean): RoomFeature</TD></TR>
<TR><TD ALIGN="LEFT" ># dropFeature(featureId: Long, sessionId: Long, hibSession: Session, context: SessionContext, future: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: UpdateRoomFeatureRequest, context: SessionContext): FeatureInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># lookuDepartment(hibSession: Session, original: DepartmentInterface, future: boolean, sessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupFeature(hibSession: Session, original: FeatureInterface, future: boolean, sessionId: Long): RoomFeature</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupFeature(hibSession: Session, featureId: Long, future: boolean, sessionId: Long): RoomFeature</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupLocations(hibSession: Session, ids: List&lt;Long&gt;, future: boolean, sessionId: Long): Collection&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateRoomFeatureRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateRoomFeatureRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAddLocations: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeleteFeatureId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDropLocations: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFeature: FeatureInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFutureSessions: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFutureSession(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addLocation(locationId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ dropLocation(locationId: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateRoomGroupBackend1526360619[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateRoomGroupBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># createOrUpdateGroup(group: GroupInterface, add: List&lt;Long&gt;, drop: List&lt;Long&gt;, sessionId: Long, hibSession: Session, context: SessionContext, future: boolean): RoomGroup</TD></TR>
<TR><TD ALIGN="LEFT" ># dropGroup(groupId: Long, sessionId: Long, hibSession: Session, context: SessionContext, future: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(request: UpdateRoomGroupRequest, context: SessionContext): GroupInterface</TD></TR>
<TR><TD ALIGN="LEFT" ># lookuDepartment(hibSession: Session, original: DepartmentInterface, future: boolean, sessionId: Long): Department</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupGroup(hibSession: Session, original: GroupInterface, future: boolean, sessionId: Long): RoomGroup</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupGroup(hibSession: Session, groupId: Long, future: boolean, sessionId: Long): RoomGroup</TD></TR>
<TR><TD ALIGN="LEFT" ># lookupLocations(hibSession: Session, ids: List&lt;Long&gt;, future: boolean, sessionId: Long): Collection&lt;Location&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateRoomGroupRequest759770151[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateRoomGroupRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAddLocations: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDeleteGroupId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDropLocations: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFutureSessions: List&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroup: GroupInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFutureSession(sessionId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addLocation(locationId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ dropLocation(locationId: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateSpecialRegistrationRequest836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateSpecialRegistrationRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreReg: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequestId: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Updater1771088866[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Updater</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iLog: Log [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPause: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRun: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSleepTimeInSeconds: long [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ checkForNewServers()</TD></TR>
<TR><TD ALIGN="LEFT" >+ pauseUpading()</TD></TR>
<TR><TD ALIGN="LEFT" >+ resumeUpading()</TD></TR>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stopUpdating()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UrlSigner56632454[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UrlSigner</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ signRequest(mapsUrl: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

User629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)User</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findByExternalId(externalId: String): User</TD></TR>
<TR><TD ALIGN="LEFT" >+ findByUserName(userName: String): User</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserContextWrapper2054707704[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserContextWrapper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iAuthority: UserAuthority [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iContext: UserContext [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getAuthorities(role: String, filter: Qualifiable...): List&lt;? extends UserAuthority&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAuthority(authority: String): UserAuthority</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAuthority(role: String, uniqueId: Long): UserAuthority</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(property: UserProperty): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(key: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(key: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAuthority(authority: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAuthority(role: String, uniqueId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAuthority(authority: UserAuthority): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasDepartment(departmentId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRole(role: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserData629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserData</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getProperties(externalUniqueId: String, names: Collection&lt;String&gt;): HashMap&lt;String, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperties(externalUniqueId: String): HashMap&lt;String, String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(externalUniqueId: String, name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(externalUniqueId: String, name: String, defaultValue: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPropertyBoolean(externalUniqueId: String, name: String, defaultValue: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeProperty(externalUniqueId: String, name: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserDataDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserDataDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserDataInterface1000739671[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserDataInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserInfoBackend1058982626[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserInfoBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   sessionContext: SessionContext [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: UserInfoRpcRequest, context: SessionContext): UserInfoInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserInfoInterface1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserInfoInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iChameleon: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRole: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserInfoRpcRequest1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserInfoRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserRoles1542390228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserRoles</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># delete(role: Roles, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(context: SessionContext, hibSession: Session): SimpleEditInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): PageName</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(data: SimpleEditInterface, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># update(role: Roles, record: Record, context: SessionContext, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(record: Record, context: SessionContext, hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserTableExternalUidTranslation355886009[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserTableExternalUidTranslation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ ext2uid(externalUniqueId: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ translate(uid: String, source: Source, target: Source): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ uid2ext(username: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UsersApiToken79803438[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UsersApiToken</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ decode(text: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ encode(text: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getContext(token: String): UserContext</TD></TR>
<TR><TD ALIGN="LEFT" >+ getToken(externalId: String, secret: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUserId(token: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- secret(): SecretKey</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Validate2045803708[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Validate</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iStudentIds: Collection&lt;Long&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Long...): Validate</TD></TR>
<TR><TD ALIGN="LEFT" >+ forStudents(studentIds: Collection&lt;Long&gt;): Validate</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># revalidateStudent(server: OnlineSectioningServer, helper: OnlineSectioningHelper, studentId: Long): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VariableFixedCreditUnitConfig629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VariableFixedCreditUnitConfig</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ creditAbbv(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ creditText(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VariableFixedCreditUnitConfigDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VariableFixedCreditUnitConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VariableRangeCreditUnitConfigDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VariableRangeCreditUnitConfigDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VariableTitleCourseConnector537604450[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VariableTitleCourseConnector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   solverServerService: SolverServerService [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- createClass(variableTitleQuery: VariableTitleQuery, subjectArea: SubjectArea, ss: SchedulingSubpart, hibSession: Session): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >- createConfiguration(instructionalOffering: InstructionalOffering, configName: String, hibSession: Session): InstrOfferingConfig</TD></TR>
<TR><TD ALIGN="LEFT" >- createExternalSectionAndReturnStatus(co: CourseOffering, clazz: Class_, externalConfigChangeActionExists: boolean, configChangeAction: ExternalInstrOffrConfigChangeAction, hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" >- createOffering(variableTitleQuery: VariableTitleQuery, subjectArea: SubjectArea, hibSession: Session): InstructionalOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- createSubpart(instrOfferingConfig: InstrOfferingConfig, hibSession: Session): SchedulingSubpart</TD></TR>
<TR><TD ALIGN="LEFT" >- createVariableTitleDatePattern(variableTitleQuery: VariableTitleQuery, hibSession: Session): DatePattern</TD></TR>
<TR><TD ALIGN="LEFT" >+ doGet(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >+ doPost(helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >- findClass(variableTitleQuery: VariableTitleQuery, courseOffering: CourseOffering, hibSession: Session): Class_</TD></TR>
<TR><TD ALIGN="LEFT" >- findClassAndUpdateQueryData(variableTitleQuery: VariableTitleQuery, courseOffering: CourseOffering, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >- findClassCreationStatus(courseOffering: CourseOffering, clazz: Class_, hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" >- findConfigWithName(instructionalOffering: InstructionalOffering, name: String): InstrOfferingConfig</TD></TR>
<TR><TD ALIGN="LEFT" >- findCourse(variableTitleQuery: VariableTitleQuery, hibSession: Session): CourseOffering</TD></TR>
<TR><TD ALIGN="LEFT" >- findOrCreateVariableTitleConfig(instructionalOffering: InstructionalOffering, hibSession: Session): InstrOfferingConfig</TD></TR>
<TR><TD ALIGN="LEFT" >- findOrCreateVariableTitleSection(variableTitleQuery: VariableTitleQuery, helper: ApiHelper)</TD></TR>
<TR><TD ALIGN="LEFT" >- generateCourseNumber(subjectArea: SubjectArea, courseNumber: String, hibSession: Session): String</TD></TR>
<TR><TD ALIGN="LEFT" >- generatedVariableTitleDatePatternName(variableTitleQuery: VariableTitleQuery): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getAcadSession(variableTitleQuery: VariableTitleQuery, hibSession: Session): Session</TD></TR>
<TR><TD ALIGN="LEFT" ># getOnlineSectioningServer(sessionId: Long): OnlineSectioningServer</TD></TR>
<TR><TD ALIGN="LEFT" >- getProperlyCasedTitle(originalTitle: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getSubjectObject(variableTitleQuery: VariableTitleQuery, hibSession: Session): SubjectArea</TD></TR>
<TR><TD ALIGN="LEFT" >- isConfigValidForVariableTitle(instrOfferingConfig: InstrOfferingConfig): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- lookupDatePattern(variableTitleQuery: VariableTitleQuery, hibSession: Session): DatePattern</TD></TR>
<TR><TD ALIGN="LEFT" >- lookupExternalConfigChangeAction(): ExternalInstrOffrConfigChangeAction</TD></TR>
<TR><TD ALIGN="LEFT" >- lookupExternalSectionMonitoredUpdateMessageAction(): ExternalSectionMonitoredUpdateMessage</TD></TR>
<TR><TD ALIGN="LEFT" >- lookupExternalVariableTitleDataLookup(): ExternalVariableTitleDataLookup</TD></TR>
<TR><TD ALIGN="LEFT" >- validateRequest(variableTitleQuery: VariableTitleQuery, helper: ApiHelper): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VariableTitleCourseInfo836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VariableTitleCourseInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAvailableCredits: Set&lt;Float&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNbr: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDefaultGradeModeCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDetails: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisclaimer: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEndDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGradeModes: Set&lt;GradeMode&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: Set&lt;InstructorInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubject: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSuggestions: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAvailableCredit(credit: Float)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addGradeMode(gradeMode: GradeMode)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addInstructor(id: Long, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSuggestion(suggestion: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ compareTo(c: VariableTitleCourseInfo): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VariableTitleCourseRequest836856674[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VariableTitleCourseRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCheckIfExists: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourse: VariableTitleCourseInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEndDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGradeMode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructor: InstructorInfo [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSection: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStartDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VersionInfoBackend1058982626[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VersionInfoBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(request: VersionInfoRpcRequest, context: SessionContext): VersionInfoInterface</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VersionInfoInterface1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VersionInfoInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBuildNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReleaseDate: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iVersion: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VersionInfoRpcRequest1160801315[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VersionInfoRpcRequest</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WSCHByDayOfWeekAndHourOfDay1281202891[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WSCHByDayOfWeekAndHourOfDay</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   periodEnrollmentMap: HashMap&lt;String, PeriodEnrollment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   startOnHalfHour: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># addTimeColumns(header: ArrayList&lt;String&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >- calculatePeriodsWithEnrollments(pointInTimeData: PointInTimeData, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createRoomUtilizationReportFor(pointInTimeData: PointInTimeData, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ dayOfWeekTimeLabelFor(date: Date): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDayOfWeekLabel(period: Date): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getPeriodTag(id: String, period: Date): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getPeriodTag(period: Date): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getPeriodTag(id: String, dayOfWeek: int, hourOfDay: int, minute: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getPeriodTag(dayOfWeek: int, hourOfDay: int, minute: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTimeLabel(period: Date): String</TD></TR>
<TR><TD ALIGN="LEFT" ># intializeHeader()</TD></TR>
<TR><TD ALIGN="LEFT" ># periodDayOfWeek(dayOfWeek: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" ># periodTime(hourOfDay: int, minute: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportDescription(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># runReport(hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WSCHByDepartment1281202891[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WSCHByDepartment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createWeeklyStudentContactHoursByDepartmentReportFor(pointInTimeData: PointInTimeData, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># intializeHeader()</TD></TR>
<TR><TD ALIGN="LEFT" ># runReport(hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" ># weeklyClassHours(pitClass: PitClass): float</TD></TR>
<TR><TD ALIGN="LEFT" ># weeklyStudentClassHours(pitClass: PitClass): float</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WSEByDayOfWeekAndPeriod1281202891[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WSEByDayOfWeekAndPeriod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDepartmentIds: ArrayList&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaximumLocationCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinimumLocationCapacity: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPositionTypeIds: ArrayList&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoomTypeIds: ArrayList&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectAreaIds: ArrayList&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   periodEnrollmentMap: HashMap&lt;String, PeriodEnrollment&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createRoomUtilizationReportFor(pointInTimeData: PointInTimeData, hibSession: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ dayOfWeekTimeLabelFor(date: Date): String</TD></TR>
<TR><TD ALIGN="LEFT" ># intializeHeader()</TD></TR>
<TR><TD ALIGN="LEFT" ># parseParameters()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportDescription(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ reportName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># runReport(hibSession: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WaitList629358305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WaitList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(wl: WaitList): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeEnrollment(student: Student, enrolledCourse: CourseOffering): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ computeRequest(cd: CourseDemand): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ fillInNotes()</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasMatchingCourse(cr: CourseRequest): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasMatchingCourse(cd: CourseDemand): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WaitListCheckValidation1865969213[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WaitListCheckValidation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iRequest: CourseRequestInterface [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubmitIfNoConfims: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CheckCoursesResponse</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WaitListDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WaitListDAO</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WaitListInterface1912414017[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WaitListInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iValue: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WaitListSubmitOverrides1865969213[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WaitListSubmitOverrides</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iNeededCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequest: CourseRequestInterface [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(server: OnlineSectioningServer, helper: OnlineSectioningHelper): CourseRequestInterface</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WaitlistedOnlineSectioningAction91943020[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WaitlistedOnlineSectioningAction&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iPriorityStudentGroupReference: Map&lt;StudentPriority, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPriorityStudentQuery: Map&lt;StudentPriority, Query&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReschedulingStatuses: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitlistStatuses: Set&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getStudentPriority(student: XStudent, server: OnlineSectioningServer, helper: OnlineSectioningHelper): StudentPriority</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWaitListPosition(offering: XOffering, student: XStudent, request: XCourseRequest, courseId: XCourseId, server: OnlineSectioningServer, helper: OnlineSectioningHelper): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasReSchedulingStatus(student: XStudent, server: OnlineSectioningServer): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasWaitListingStatus(student: XStudent, server: OnlineSectioningServer): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWaitListed(student: XStudent, request: XCourseRequest, offering: XOffering, server: OnlineSectioningServer, helper: OnlineSectioningHelper): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWaitListedAssumeApproved(student: XStudent, request: XCourseRequest, offering: XOffering, courseId: XCourseId, server: OnlineSectioningServer, helper: OnlineSectioningHelper): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WeekInterface4669270[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WeekInterface</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDayNames: List&lt;DateInterface&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDayOfYear: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDayName(name: DateInterface)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WeekSelectorBackend2107708513[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WeekSelectorBackend</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(command: WeekSelectorRequest, context: SessionContext): GwtRpcResponseList&lt;WeekInterface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WeekSelectorRequest1469860989[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WeekSelectorRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iSessionId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WeeklyMinutes1488568904[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WeeklyMinutes</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iSemesterWeeks: Float [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getArrangedHours(weeklyMinutes: int, datePattern: DatePattern): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExactTimeMinutesPerMeeting(weeklyMinutes: int, datePattern: DatePattern, dayCode: int): int</TD></TR>
<TR><TD ALIGN="LEFT" ># getSemesterWeeks(datePattern: DatePattern): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ isValidCombination(weeklyMinutes: int, datePattern: DatePattern, timePattern: TimePattern): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WeightedStudentId389194987[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WeightedStudentId</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCurricula: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroups: Set&lt;Group&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMajors: TreeSet&lt;AreaClasfMajor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinors: Set&lt;AreaClasfMajor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPrimaryOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudent: Student [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWeight: float [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getGroup(name: String): Group</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(areaAbbv: String, majors: Set&lt;String&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ match(clasf: CurriculumClassification): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XCourse220419187[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XCourse</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAlternativeCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConsentAbbv: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConsentLabel: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iControl: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCredit: XCredit [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDepartment: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDetails: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDisabledOverrides: Set&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iProjected: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSnapshotLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWkChange: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWkDrop: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWkEnroll: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ areLinkedConflictOverridesAllowed(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ areSpaceConflictOverridesAllowed(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ areTimeConflictOverridesAllowed(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDetails(session: AcademicSessionInfo, provider: CourseDetailsProvider): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOverrideEnabled(override: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ readExternal(in: ObjectInput)</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeExternal(out: ObjectOutput)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XCourseId220419187[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XCourseId</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourseNumber: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHasUniqueName: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOfferingId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubjectArea: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTitle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iType: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(c: XCourseId): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ matchCourse(queryInLowerCase: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ matchCourseName(queryInLowerCase: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ matchTitle(queryInLowerCase: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ matchType(allCourseTypes: boolean, noCourseType: boolean, allowedCourseTypes: Set&lt;String&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ readExternal(in: ObjectInput)</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeExternal(out: ObjectOutput)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XCourseRequest220419187[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XCourseRequest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCourseIds: List&lt;XCourseId&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCritical: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnrollment: XEnrollment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNoSub: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOptions: Map&lt;XCourseId, byte[]&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOverrides: Map&lt;XCourseId, XOverride&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPreferences: Map&lt;XCourseId, List&lt;XPreference&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectionWaitlist: Map&lt;XCourseId, List&lt;XWaitListedSection&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListSwapWithCourseOffering: XCourseId [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitListedTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitlist: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ fillChoicesIn(request: CourseRequest)</TD></TR>
<TR><TD ALIGN="LEFT" >+ fillPreferencesIn(rc: RequestedCourse, courseId: XCourseId)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseIdByOfferingId(offeringId: Long): XCourseId</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseName(course: String): XCourseId</TD></TR>
<TR><TD ALIGN="LEFT" >+ getIndex(offering: XOffering): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOptions(offeringId: Long): CourseRequestOption</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOverride(courseId: XCourseId): XOverride</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOverrideExternalId(courseId: XCourseId): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOverrideStatus(courseId: XCourseId): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOverrideTimeStamp(courseId: XCourseId): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPreferences(courseId: XCourseId): List&lt;XPreference&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSectionWaitlist(courseId: XCourseId): List&lt;XWaitListedSection&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasCourse(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasCourseName(course: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasSectionWaitlist(courseId: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isDuplicateOffering(id: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isNoSub(wlMode: WaitListMode): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOverridePending(courseId: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPrimary(courseId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPrimary(courseId: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isRequired(enrollment: XEnrollment, offering: XOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isRequired(offering: XOffering, config: XConfig, section: XSection, course: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWaitListOrNoSub(mode: WaitListMode): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWaitListOrNoSub(mode: WaitListMode, advisorWaitListedCourseIds: Set&lt;Long&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWaitlist(advisorWaitListedCourseIds: Set&lt;Long&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWaitlist(wlMode: WaitListMode): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ readExternal(in: ObjectInput)</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeExternal(out: ObjectOutput)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XCredit220419187[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XCredit</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAbbreviation: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMax: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMin: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iText: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ readExternal(in: ObjectInput)</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeExternal(out: ObjectOutput)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XEnrollment220419187[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XEnrollment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iApproval: XApproval [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConfigId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReservation: XReservationId [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSectionIds: Set&lt;Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStudentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTimeStamp: Date [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(courseId: XCourseId): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCredit(server: OnlineSectioningServer): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ isRequired(request: RequestedCourse, offering: XOffering): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ readExternal(in: ObjectInput)</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeExternal(out: ObjectOutput)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XLSPrinter2109884156[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XLSPrinter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iCheckLast: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iColors: Map&lt;String, Short&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFonts: Map&lt;String, Font&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iHiddenColumns: Set&lt;Integer&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastLine: Object[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOutput: OutputStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRowNum: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSheet: Sheet [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSheetIndex: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStyles: Map&lt;String, CellStyle&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWorkbook: Workbook [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># addImageToSheet(colNumber: int, rowNumber: int, sheet: HSSFSheet, image: BufferedImage, resizeBehaviour: int)</TD></TR>
<TR><TD ALIGN="LEFT" ># addImageToSheet(colNumber: int, rowNumber: int, sheet: HSSFSheet, image: BufferedImage, reqImageWidthMM: double, reqImageHeightMM: double, resizeBehaviour: int)</TD></TR>
<TR><TD ALIGN="LEFT" >- calculateColumnLocation(sheet: HSSFSheet, startingColumn: int, reqImageWidthMM: double): ClientAnchorDetail</TD></TR>
<TR><TD ALIGN="LEFT" >- calculateRowLocation(sheet: HSSFSheet, startingRow: int, reqImageHeightMM: double): ClientAnchorDetail</TD></TR>
<TR><TD ALIGN="LEFT" >+ close()</TD></TR>
<TR><TD ALIGN="LEFT" ># colorToShort(c: Color): Short</TD></TR>
<TR><TD ALIGN="LEFT" >- fitImageToColumns(sheet: HSSFSheet, colNumber: int, reqImageWidthMM: double, resizeBehaviour: int): ClientAnchorDetail</TD></TR>
<TR><TD ALIGN="LEFT" >- fitImageToRows(sheet: HSSFSheet, rowNumber: int, reqImageHeightMM: double, resizeBehaviour: int): ClientAnchorDetail</TD></TR>
<TR><TD ALIGN="LEFT" >+ flush()</TD></TR>
<TR><TD ALIGN="LEFT" ># getFont(bold: boolean, italic: boolean, underline: boolean, c: Color): Font</TD></TR>
<TR><TD ALIGN="LEFT" ># getStyle(f: A, dashed: boolean, format: String): CellStyle</TD></TR>
<TR><TD ALIGN="LEFT" >+ hideColumn(col: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ newSheet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ printHeader(fields: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printLine(fields: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printLine(fields: A...)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XOffering220419187[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XOffering</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iConfigs: List&lt;XConfig&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCourses: List&lt;XCourse&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDistrubutions: List&lt;XDistribution&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReSchedule: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iReservations: List&lt;XReservation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRestrictions: List&lt;XRestriction&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWaitList: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- add(l1: int, l2: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDistribution(distribution: XDistribution)</TD></TR>
<TR><TD ALIGN="LEFT" >- check(student: XStudent, cr: XCourseRequest, config: XConfig, courseId: XCourseId, session: AcademicSessionInfo, sections: HashSet&lt;XSection&gt;, idx: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ distance(m: DistanceMetric, s1: Section, s2: Section): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ fillInUnavailabilities(student: Student)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfig(configId: Long): XConfig</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfigReservations(configId: Long): List&lt;XReservation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseId: Long): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourse(courseId: XCourseId): XCourse</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCourseAvailability(requests: Collection&lt;XCourseRequest&gt;, course: XCourse): int[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSection(sectionId: Long): XSection</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSectionReservations(sectionId: Long): List&lt;XReservation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSections(enrollment: XEnrollment): List&lt;XSection&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSections(courseId: Long, externalId: String): List&lt;XSection&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSubpart(subpartId: Long): XSubpart</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSubparts(instructionalType: String): Set&lt;XSubpart&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUnreservedConfigSpace(configId: Long, enrollments: XEnrollments): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUnreservedSectionSpace(sectionId: Long, enrollments: XEnrollments): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUnreservedSpace(enrollments: XEnrollments): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ guessReservation(other: Collection&lt;XCourseRequest&gt;, student: XStudent, enrollment: XEnrollment): XReservationId</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasGroupReservation(student: XStudent, course: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasInconsistentRequirements(student: XStudent, cr: XCourseRequest, courseId: XCourseId, session: AcademicSessionInfo): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasIndividualReservation(student: XStudent, course: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasLearningCommunityReservation(student: XStudent, course: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAllowOverlap(enrollment: XEnrollment): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAllowOverlap(student: XStudent, configId: Long, course: XCourseId, assignment: List&lt;XSection&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- isNotAllowed(student: XStudent, courseId: XCourseId, config: XConfig, sections: Collection&lt;XSection&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- min(l1: int, l2: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ readExternal(in: ObjectInput)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toCourse(courseId: Long, student: XStudent, server: OnlineSectioningServer): Course</TD></TR>
<TR><TD ALIGN="LEFT" >+ toCourse(courseId: Long, student: XStudent, expectations: XExpectations, distributions: Collection&lt;XDistribution&gt;, enrollments: XEnrollments, dayOfWeekOffset: int): Course</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeExternal(out: ObjectOutput)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XSection220419187[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XSection</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowOverlap: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCancelled: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditByCourse: Map&lt;Long, Float&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnabledForScheduling: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iExternalIdByCourse: Map&lt;Long, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionalType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructors: List&lt;XInstructor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLimit: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNameByCourse: Map&lt;Long, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iNote: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iOnline: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPast: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRooms: List&lt;XRoom&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubpartId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSubpartName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iTime: XTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ compareTo(section: XSection): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditOverride(courseId: long): Float</TD></TR>
<TR><TD ALIGN="LEFT" >- getDistanceInMinutes(m: DistanceMetric, other: List&lt;XRoom&gt;): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDistanceInMinutes(other: XSection, m: DistanceMetric): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExternalId(courseId: long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getName(courseId: long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isDistanceConflict(student: XStudent, other: XSection, m: DistanceMetric): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEnabled(student: XStudent, session: AcademicSessionInfo): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOverlapping(distributions: Collection&lt;XDistribution&gt;, other: XSection): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOverlapping(distributions: Collection&lt;XDistribution&gt;, other: XSection, ignoreBreakTime: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOverlapping(distributions: Collection&lt;XDistribution&gt;, assignments: Collection&lt;XSection&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isOverlapping(distributions: Collection&lt;XDistribution&gt;, assignments: Collection&lt;XSection&gt;, ignoreBreakTime: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isToIgnoreStudentConflictsWith(distributions: Collection&lt;XDistribution&gt;, sectionId: Long): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ readExternal(in: ObjectInput)</TD></TR>
<TR><TD ALIGN="LEFT" >+ toInstructors(): List&lt;Instructor&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ toPlacement(): Placement</TD></TR>
<TR><TD ALIGN="LEFT" >+ toRoomString(delim: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeExternal(out: ObjectOutput)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XStudent220419187[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XStudent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAccomodations: List&lt;XGroup&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAdvisorRequests: List&lt;XAdvisorRequest&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAdvisors: List&lt;XAdvisor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iAllowDisabled: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iBackToBackPreference: BackToBackPreference [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassEndDate: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iClassStartDate: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmail: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEmailTimeStamp: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iFailedWaitLists: Map&lt;Long, Long&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iGroups: List&lt;XGroup&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructorAssignments: List&lt;XInstructorAssignment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastNote: XStudentNote [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLastStudentChange: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMajors: List&lt;XAreaClassificationMajor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCredit: Float [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMaxCreditOverride: XOverride [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iMinors: List&lt;XAreaClassificationMajor&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iModalityPreference: ModalityPreference [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPin: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iPinReleased: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRequests: List&lt;XRequest&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iStatus: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ canAssign(request: XCourseRequest, mode: WaitListMode): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAdvisorRequestForCourse(courseId: Long): XAdvisorRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAdvisorRequestForFreeTime(ft: FreeTime): XAdvisorRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAdvisorWaitListedCourseIds(useWaitList: boolean, useNoSubs: boolean): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAdvisorWaitListedCourseIds(server: OnlineSectioningServer): Set&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassEndDate(datePatternFirstDate: Date): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClassStartDate(datePatternFirstDate: Date): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestForCourse(courseId: Long): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestForCourseName(courseName: String): XCourseRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ getRequestForFreeTime(ft: FreeTime): XFreeTimeRequest</TD></TR>
<TR><TD ALIGN="LEFT" >+ getWaitListMode(helper: OnlineSectioningHelper): WaitListMode</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasAccomodation(accomodation: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasRequirements(course: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isEnrolled(courseId: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isFailedWaitlist(courseId: XCourseId): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isFailedWaitlist(courseId: XCourseId, delayInSeconds: Integer): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadRequests(student: Student, helper: OnlineSectioningHelper, freeTimePattern: BitSet): List&lt;XRequest&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ markFailedWaitList(courseId: XCourseId)</TD></TR>
<TR><TD ALIGN="LEFT" >+ readExternal(in: ObjectInput)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updatePreferences(student: Student, firstDay: Date)</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeExternal(out: ObjectOutput)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XSubpart220419187[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XSubpart</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iAllowOverlap: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iConfigId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCredit: XCredit [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iCreditByCourse: Map&lt;Long, XCredit&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iInstructionalType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iParentId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSections: List&lt;XSection&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUniqueId: Long [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getCredit(courseId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditAbbv(courseId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditInfo(courseId: Long): XCredit</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditMax(courseId: Long): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditMin(courseId: Long): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditText(courseId: Long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCreditValue(courseId: Long): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ readExternal(in: ObjectInput)</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeExternal(out: ObjectOutput)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XTime220419187[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XTime</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iBreakTime: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePatternId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDatePatternName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iDays: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iFirstMeeting: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLastMeeting: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iLength: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iSlot: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iWeeks: BitSet [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ datePatternName(assignment: Assignment, format: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFirstMeeting(dayOfWeekOffset: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLastMeeting(dayOfWeekOffset: int): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasIntersection(other: XTime): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasIntersection(other: XTime, ignoreBreakTime: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ hasIntersectionIgnoreBreakTime(other: XTime): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPast(currentDateIdnex: int, session: AcademicSessionInfo): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ nrSharedDays(anotherLocation: XTime): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ nrSharedHours(anotherLocation: XTime): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ readExternal(in: ObjectInput)</TD></TR>
<TR><TD ALIGN="LEFT" >+ share(other: XTime): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ shareDays(other: XTime): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shareHours(other: XTime): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shareHoursIgnoreBreakTime(other: XTime): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shareWeeks(other: XTime): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ toDaysString(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ toStartString(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ toStopString(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ toTimeLocation(): TimeLocation</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeExternal(out: ObjectOutput)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

XmlApiHelper79803438[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)XmlApiHelper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getRequest(requestType: Type): Document</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

_BaseRootDAO595338686[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)_BaseRootDAO&lt;T, K extends Serializable&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ beginTransaction(s: Session): Transaction</TD></TR>
<TR><TD ALIGN="LEFT" >+ closeCurrentThreadSessions(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- closeCurrentThreadSessions(commit: boolean): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ commitTransaction(t: Transaction)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createNewSession(): Session</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(obj: T)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(obj: T, s: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(key: K)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(key: K, s: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(s: Session): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(orders: Order...): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(s: Session, orders: Order...): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># get(refClass: Class&lt;T&gt;, key: K): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(key: K): T</TD></TR>
<TR><TD ALIGN="LEFT" ># get(refClass: Class&lt;T&gt;, key: K, s: Session): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ get(key: K, s: Session): T</TD></TR>
<TR><TD ALIGN="LEFT" >- getCurrentThreadSession(configFile: String): Session</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNewConfiguration(configFileName: String): Configuration</TD></TR>
<TR><TD ALIGN="LEFT" >+ getQuery(queryStr: String): Query</TD></TR>
<TR><TD ALIGN="LEFT" >+ getQuery(queryStr: String, s: Session): Query</TD></TR>
<TR><TD ALIGN="LEFT" >- getSession(configFile: String, createNew: boolean): Session</TD></TR>
<TR><TD ALIGN="LEFT" ># getSessionFactory(configFile: String): SessionFactory</TD></TR>
<TR><TD ALIGN="LEFT" >+ initialize()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initialize(configFileName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initialize(configFileName: String, configuration: Configuration)</TD></TR>
<TR><TD ALIGN="LEFT" ># load(refClass: Class&lt;T&gt;, key: K): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(key: K): T</TD></TR>
<TR><TD ALIGN="LEFT" ># load(refClass: Class&lt;T&gt;, key: K, s: Session): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ load(key: K, s: Session): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadInitialize(key: K, s: Session): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ refresh(obj: T, s: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rollbackCurrentThreadSessions(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(obj: T): K</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(obj: T, s: Session): K</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveOrUpdate(obj: T)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveOrUpdate(obj: T, s: Session)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(obj: T)</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(obj: T, s: Session)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

_RootDAO573395717[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)_RootDAO&lt;T, K extends Serializable&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_136245974 { 
   	label=localization
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Localization779599398[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Localization</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ create(bundle: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDateFormat(pattern: String): DateFormat</TD></TR>
<TR><TD ALIGN="LEFT" >+ getNumberFormat(pattern: String): NumberFormat</TD></TR>
<TR><TD ALIGN="LEFT" >- guessJavaLocale(locale: String): Locale</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeLocale()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_436259145 { 
   	label=commons
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   DatabaseUpdate2052906881[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseUpdate</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iDialectSQL: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iRoot: Element [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># findDbUpdateFileName(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ performUpdate()</TD></TR>
<TR><TD ALIGN="LEFT" >+ performUpdate(updateElement: Element): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ update()</TD></TR>
<TR><TD ALIGN="LEFT" ># updateName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># versionParameterName(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Debug1738245203[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Debug</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ debug(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(e: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ error(message: String, t: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ fatal(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSource(source: Class): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getSource(source: Object): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ info(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ log(message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ log(depth: int, message: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ warning(message: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Email1738245203[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Email</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAttachment(name: String, data: DataHandler)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addAttachment(file: File, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addAttachment(source: DataSource)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addNotify()</TD></TR>
<TR><TD ALIGN="LEFT" >+ addNotifyCC()</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecipient(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecipientBCC(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecipientCC(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addReplyTo(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createEmail(): Email</TD></TR>
<TR><TD ALIGN="LEFT" >+ send()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HibernateUtil2052906881[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HibernateUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAddDateToDialect()</TD></TR>
<TR><TD ALIGN="LEFT" >+ addBitwiseOperationsToDialect()</TD></TR>
<TR><TD ALIGN="LEFT" >+ addDate(dateSQL: String, incrementSQL: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ addReplaceToDialect()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearCache()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearCache(persistentClass: Class)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearCache(persistentClass: Class, evictQueries: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ closeHibernate()</TD></TR>
<TR><TD ALIGN="LEFT" >+ configureHibernate(connectionUrl: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ configureHibernate(properties: Properties)</TD></TR>
<TR><TD ALIGN="LEFT" >+ configureHibernateFromRootDAO(cfgName: String, cfg: Configuration)</TD></TR>
<TR><TD ALIGN="LEFT" >+ date(date: Date): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ dayOfWeek(field: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ escapeSql(str: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ fixSchemaInFormulas(cfg: Configuration)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(properties: Properties, name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPostgress(dialect: Class): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- removeProperty(document: Document, name: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JGroupsUtils1342239101[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JGroupsUtils</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- _getProperty(var: String, default_value: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >- _substituteVar(val: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfigurationString(properties: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getConfigurator(properties: String): ProtocolStackConfigurator</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProperty(s: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ substituteVariable(val: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ substituteVariables(config: ProtocolConfiguration)</TD></TR>
<TR><TD ALIGN="LEFT" >+ substituteVariables(configurator: ProtocolStackConfigurator)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JavaMailWrapper1738245203[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JavaMailWrapper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iBody: Multipart [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMail: MimeMessage [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iMailSession: Session [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAttachment(name: String, data: DataHandler)</TD></TR>
<TR><TD ALIGN="LEFT" ># addRecipient(type: RecipientType, email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecipient(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecipientBCC(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addRecipientCC(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addReplyTo(email: String, name: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ send()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NaturalOrderComparator1738245203[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NaturalOrderComparator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># charAt(s: String, i: int): char</TD></TR>
<TR><TD ALIGN="LEFT" >+ compare(a: String, b: String): int</TD></TR>
<TR><TD ALIGN="LEFT" ># compareRight(a: String, b: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SectioningChannelLookup1342239101[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SectioningChannelLookup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getJGroupsChannel(p: Properties): Channel</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ToolBox1738245203[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ToolBox</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ diff(a: String, b: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ diff(a: Vector, b: Vector): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ diff(a: Hashtable, b: Hashtable): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ expand(source: String, length: int, ch: char, beg: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBasePath(appURL: URL, targetFolder: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCaller(depth: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ replace(source: String, substring: String, newsubstring: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ replaceIgnoreCase(source: String, substring: String, newsubstring: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ sortEnumeration(e: Enumeration): Enumeration</TD></TR>
<TR><TD ALIGN="LEFT" >+ sortEnumeration(e: Enumeration, c: Comparator): Enumeration</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UniTimeChannelLookup1342239101[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UniTimeChannelLookup</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getJGroupsChannel(p: Properties): Channel</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldClose(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldConnect(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ shouldDisconnect(): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UniTimeCoreDatabaseUpdate2052906881[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UniTimeCoreDatabaseUpdate</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># findDbUpdateFileName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># updateName(): String</TD></TR>
<TR><TD ALIGN="LEFT" ># versionParameterName(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UniqueIdGenerator382220504[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UniqueIdGenerator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iGenerator: IdentifierGenerator [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ configure(config: Configuration)</TD></TR>
<TR><TD ALIGN="LEFT" >+ configure(type: Type, params: Properties, d: Dialect)</TD></TR>
<TR><TD ALIGN="LEFT" >+ generate(session: SessionImplementor, object: Object): Serializable</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WebTable1790209645[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WebTable</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   iAlign: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iAsc: boolean[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iBlankWhenSame: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iColumnFilter: Hashtable [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iColumnFilterKeys: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iColumns: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iHeaders: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iLines: Vector [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRef: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iRowStyle: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   iWebTableTweakStyle: WebTableTweakStyle [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   suppressRowHighlight: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addLine(line: String[], orderby: Comparable[]): WebTableLine</TD></TR>
<TR><TD ALIGN="LEFT" >+ addLine(onClick: String, line: String[], orderby: Comparable[], uniqueId: String): WebTableLine</TD></TR>
<TR><TD ALIGN="LEFT" >+ addLine(onClick: String, line: String[], orderby: Comparable[]): WebTableLine</TD></TR>
<TR><TD ALIGN="LEFT" ># align(alignment: String, rtl: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" ># csvField(text: String): CSVField</TD></TR>
<TR><TD ALIGN="LEFT" >+ enableHR()</TD></TR>
<TR><TD ALIGN="LEFT" >+ enableHR(colorCode: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findLine(uniqueId: String): WebTableLine</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrder(context: SessionContext, code: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getStyle(line: WebTableLine, next: WebTableLine, order: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ indexOfLine(uniqueId: String): int</TD></TR>
<TR><TD ALIGN="LEFT" ># isFiltered(col: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ nextUniqueId(uniqueId: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ previousUniqueId(uniqueId: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ printCsvTable(ordCol: int): CSVFile</TD></TR>
<TR><TD ALIGN="LEFT" >+ printTable(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ printTable(ordCol: int): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ replaceLine(index: int, onClick: String, line: String[], orderby: Comparable[]): WebTableLine</TD></TR>
<TR><TD ALIGN="LEFT" >+ replaceLine(index: int, onClick: String, line: String[], orderby: Comparable[], uniqueId: String): WebTableLine</TD></TR>
<TR><TD ALIGN="LEFT" >+ toCSVFile(ordCol: int): CSVFile</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
AbstractApiHelper79803438 -> JsonApiHelper79803438[arrowhead=none, arrowtail=empty, dir=both];
AbstractApiHelper79803438 -> XmlApiHelper79803438[arrowhead=none, arrowtail=empty, dir=both];
AbstractApiHelper79803438 -> _BaseRootDAO595338686[label="guessAcademicSessionId() -> createNewSession()"];
AbstractAuthority876918435 -> AbstractQualifier54601263[arrowhead=none];
AbstractAuthority876918435 -> AcademicSessionInfo1032738488[arrowhead=none];
AbstractAuthority876918435 -> Department629358305[arrowhead=none];
AbstractAuthority876918435 -> RoleAuthority876918435[arrowhead=none, arrowtail=empty, dir=both];
AbstractAuthority876918435 -> Session629358305[arrowhead=none];
AbstractAuthority876918435 -> SolverGroup629358305[arrowhead=none];
AbstractAuthority876918435 -> Student629358305[arrowhead=none];
AbstractAuthority876918435 -> TimetableManager629358305[arrowhead=none];
AbstractQualifier54601263 -> SimpleQualifier54601263[arrowhead=none, arrowtail=empty, dir=both];
AbstractSolverServer398558421 -> DummySolverServer398558421[arrowhead=none, arrowtail=empty, dir=both];
AbstractSolverServer398558421 -> LocalSolverServer398558421[arrowhead=none, arrowtail=empty, dir=both];
AbstractSolverServer398558421 -> SolverServerImplementation398558421[arrowhead=none, arrowtail=empty, dir=both];
AbstractUserContext641976759 -> AnonymousUserContext641976759[arrowhead=none, arrowtail=empty, dir=both];
AbstractUserContext641976759 -> UniTimeUserContext641976759[arrowhead=none, arrowtail=empty, dir=both];
AcademicAreaImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
AcademicAreas1542390228 -> AcademicArea629358305[label="load() -> isUsed()"];
AcademicClassificationImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
AcademicClassifications1542390228 -> AcademicClassification629358305[label="load() -> isUsed()"];
AcademicSessionDelete1530278742 -> Session629358305[label="permissionSession
[1]"];
AcademicSessionInfo1032738488 -> Constants1821660490[label="update() -> getDayOfWeek()"];
AcademicSessionInfo1032738488 -> DepartmentStatusType629358305[label="update() -> canOnlineSectionStudents()"];
AcademicSessionSetupExport876794133 -> Session629358305[label="exportSession() -> getHoliday()"];
AcademicSessionSetupImport876794133 -> Department629358305[label="importSubjectAreas() -> findByDeptCode()"];
AcademicSessionSetupImport876794133 -> DepartmentStatusType629358305[label="createOrUpdateSession() -> findByRef()"];
AcademicSessionSetupImport876794133 -> ExamType629358305[label="importExaminationPeriods() -> findByReference()"];
AcademicSessionSetupImport876794133 -> Formats1821660490[label="loadXml() -> getDateFormat()"];
AcademicSessionSetupImport876794133 -> HibernateUtil2052906881[label="loadXml() -> clearCache()"];
AcademicSessionSetupImport876794133 -> PreferenceLevel629358305[label="importExaminationPeriods() -> getPreferenceLevel()"];
AcademicSessionSetupImport876794133 -> Roles629358305[label="importManagers() -> findAll()"];
AcademicSessionSetupImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
AcademicSessionSetupImport876794133 -> StudentGroupType629358305[label="importStudentGroups() -> findByReference()"];
AcademicSessionSetupImport876794133 -> _BaseRootDAO595338686[label="importDatePatterns() -> get()"];
AddExamination1474622403 -> ExamType629358305[label="check() -> findAllUsed()"];
AddExamination1474622403 -> ExaminationDistributionPreferenceAdd1474622403[arrowhead=none, arrowtail=empty, dir=both];
AddRoom82359199 -> Building629358305[label="check() -> findAll()"];
AddSpecialUseRoom82359199 -> ExternalRoom629358305[label="check() -> findAll()"];
Advisor629358305 -> CustomSQLExternalUidTranslation355886009[arrowhead=none];
Advisor629358305 -> LdapExternalUidTranslation1821660490[arrowhead=none];
Advisor629358305 -> PeopleLookupBackend244315587[label="lookupDetails() -> execute()"];
Advisor629358305 -> SpringLdapExternalUidTranslation1093250208[arrowhead=none];
Advisor629358305 -> UserTableExternalUidTranslation355886009[arrowhead=none];
ApiConnector79803438 -> BuildingsConntector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> ClassInfoConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> CurriculaConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> DataExchangeConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> EnrollmentsConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> EventsConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> InstructorScheduleConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> InstructorsConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> JsonConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> OnlineStudentSchedulingConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> RolesConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> RoomsConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> ScriptConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> StudentGroupsConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApiConnector79803438 -> UsersApiToken79803438[arrowhead=none];
ApiConnector79803438 -> VariableTitleCourseConnector537604450[arrowhead=none, arrowtail=empty, dir=both];
ApplicationProperties1829907366 -> SessionConfig629358305[label="getSessionProperties() -> toProperties()"];
ApplyInstructorSurveyBackend1948231384 -> InstructorSurvey629358305[label="execute() -> getInstructorSurvey()"];
ApplyInstructorSurveyBackend1948231384 -> Preference629358305[label="execute() -> clone()"];
ApplyInstructorSurveyBackend1948231384 -> _BaseRootDAO595338686[label="execute() -> get()"];
ApproveEventRpcRequest4669270 -> MeetingInterface4669270[label="iMeetings
[0..*]"];
AssignClassInstructors1270204417 -> AssignClassInstructorsInterface1000739671[label="addClassRecords() -> addRecord()"];
AssignClassInstructors1270204417 -> BaseClass_595338686[label="save() -> addToclassInstructors()"];
AssignClassInstructors1270204417 -> BaseDepartmentalInstructor595338686[label="save() -> addToclasses()"];
AssignClassInstructors1270204417 -> ClassAssignmentService1058021598[arrowhead=none];
AssignClassInstructors1270204417 -> ClassCourseComparator1628636464[label="loadClasses() -> getName()"];
AssignClassInstructors1270204417 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
AssignClassInstructors1270204417 -> TeachingResponsibility629358305[label="getFieldForColumn() -> hasOption()"];
AssignClassInstructorsInterface1000739671 -> Field2051236629[label="iFields
[0..*]"];
AssignClassInstructorsInterface1000739671 -> PageName2051236629[label="iPageName
[0..1]"];
AssignClassInstructorsInterface1000739671 -> Record2051236629[label="iRecords
[0..*]"];
AssignedClassesBackend43990826 -> AssignmentPreferenceInfo1605871111[label="execute() -> sumRoomPreference()"];
AssignedClassesBackend43990826 -> BackTracker779606258[label="execute() -> markForBack()"];
AssignedClassesBackend43990826 -> FilterParameterInterface723731434[label="execute() -> getOptionText()"];
AssignedClassesBackend43990826 -> SolverGroup629358305[label="execute() -> getUserSolverGroups()"];
AssignedClassesBackend43990826 -> SolverPageBackend43990826[label="execute() -> fillSolverWarnings()"];
AssignedClassesBackend43990826 -> TableCellItems442142882[label="execute() -> add()"];
AssignedClassesFilterBackend43990826 -> AssignedClassesFilterResponse926228794[label="execute() -> addPreference()"];
AssignedClassesFilterBackend43990826 -> SubjectArea629358305[label="execute() -> getUserSubjectAreas()"];
AssignedClassesFilterResponse926228794 -> AssignmentHistoryFilterResponse926228794[arrowhead=none, arrowtail=empty, dir=both];
AssignedClassesFilterResponse926228794 -> NotAssignedClassesFilterResponse926228794[arrowhead=none, arrowtail=empty, dir=both];
AssignedClassesFilterResponse926228794 -> PreferenceInterface759770151[label="iPreferences
[0..*]"];
AssignedClassesFilterResponse926228794 -> SolutionChangesFilterResponse926228794[arrowhead=none, arrowtail=empty, dir=both];
AssignedClassesRequest926228794 -> FilterInterface1000739671[label="iFilter
[0..1]"];
AssignmentChangesResponse1591923739 -> AssignmentInfo1591923739[label="iChanges
[0..*]"];
AssignmentHistoryBackend43990826 -> BackTracker779606258[label="execute() -> markForBack()"];
AssignmentHistoryBackend43990826 -> SolverPageBackend43990826[label="execute() -> fillSolverWarnings()"];
AssignmentHistoryFilterBackend43990826 -> AssignedClassesFilterResponse926228794[label="execute() -> addPreference()"];
AssignmentHistoryFilterBackend43990826 -> FilterInterface1000739671[label="execute() -> addParameter()"];
AssignmentHistoryRequest926228794 -> FilterInterface1000739671[label="iFilter
[0..1]"];
AssignmentPreferenceInfo1605871111 -> BtbInstructorConstraintInfo1605871111[arrowhead=none];
AssignmentPreferenceInfo1605871111 -> ConflictStatisticsInfo1605871111[arrowhead=none];
AssignmentPreferenceInfo1605871111 -> ExamConflictStatisticsInfo70241488[arrowhead=none];
AssignmentPreferenceInfo1605871111 -> FileInfo1605871111[arrowhead=none];
AssignmentPreferenceInfo1605871111 -> GroupConstraintInfo1605871111[arrowhead=none];
AssignmentPreferenceInfo1605871111 -> JenrlInfo1605871111[arrowhead=none];
AssignmentPreferenceInfo1605871111 -> LogInfo1605871111[arrowhead=none];
AssignmentPreferenceInfo1605871111 -> PropertiesInfo1605871111[arrowhead=none];
AssignmentPreferenceInfo1605871111 -> StudentGroupInfo1605871111[arrowhead=none];
AtomTerm2060480431 -> CompositeTerm2060480431[arrowhead=none];
AtomTerm2060480431 -> CourseInfoMatcher1932076738[arrowhead=none];
AtomTerm2060480431 -> CurriculumMatcher1487748818[arrowhead=none];
AtomTerm2060480431 -> DbCourseInfoMatcher511700137[arrowhead=none];
AtomTerm2060480431 -> DbStudentMatcher511700137[arrowhead=none];
AtomTerm2060480431 -> LocationMatcher29120908[arrowhead=none];
AtomTerm2060480431 -> NotTerm2060480431[arrowhead=none];
AtomTerm2060480431 -> PlacementMatcher648389124[arrowhead=none];
AtomTerm2060480431 -> ProjectedStudentMatcher552368780[arrowhead=none];
AtomTerm2060480431 -> ReservationMatcher2055155989[arrowhead=none];
AtomTerm2060480431 -> SectionMatcher2061009026[arrowhead=none];
AtomTerm2060480431 -> StudentMatcher1932076738[arrowhead=none];
AtomTerm2060480431 -> StudentMatcher83644043[arrowhead=none];
AtomTerm2060480431 -> TeachingRequestMatcher586265501[arrowhead=none];
AttributeInterface1591923739 -> AttributeTypeInterface1591923739[label="iType
[0..1]"];
AttributeInterface1591923739 -> DepartmentInterface1591923739[label="iDepartment
[0..1]"];
AttributeInterface1591923739 -> InstructorInterface1000739671[label="iInstructors
[0..*]"];
Backend1875904956 -> Tracker1875904956[label="unitimeBusySessions
[1]"];
BaseAcademicAreaDAO595338686 -> AcademicAreaDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseAcademicAreaHistoryDAO595338686 -> AcademicAreaHistoryDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseAcademicClassificationDAO595338686 -> AcademicClassificationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseAdvisor595338686 -> Advisor629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseAdvisorClassPrefDAO595338686 -> AdvisorClassPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseAdvisorCourseRequestDAO595338686 -> AdvisorCourseRequestDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseAdvisorDAO595338686 -> AdvisorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseAdvisorInstrMthPrefDAO595338686 -> AdvisorInstrMthPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseAdvisorSectioningPrefDAO595338686 -> AdvisorSectioningPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseApplicationConfig595338686 -> ApplicationConfig629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseApplicationConfigDAO595338686 -> ApplicationConfigDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseArrangeCreditUnitConfigDAO595338686 -> ArrangeCreditUnitConfigDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseAssignmentDAO595338686 -> AssignmentDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseAssignmentInfoDAO595338686 -> AssignmentInfoDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseAttachmentType595338686 -> AttachmentType629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseAttachmentTypeDAO595338686 -> AttachmentTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseBuilding595338686 -> Building629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseBuildingAbbreviationHistoryDAO595338686 -> BuildingAbbreviationHistoryDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseBuildingDAO595338686 -> BuildingDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseBuildingPrefDAO595338686 -> BuildingPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCampusDAO595338686 -> CampusDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseChangeLog595338686 -> ChangeLog629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseChangeLogDAO595338686 -> ChangeLogDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseClassDurationTypeDAO595338686 -> ClassDurationTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseClassEventDAO595338686 -> ClassEventDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseClassInstructorDAO595338686 -> ClassInstructorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseClassWaitListDAO595338686 -> ClassWaitListDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseClass_595338686 -> Assignment629358305[label="iAssignments
[0..*]"];
BaseClass_595338686 -> Assignment629358305[label="iCommittedAssignment
[0..1]"];
BaseClass_595338686 -> ClassInstructor629358305[label="iClassInstructors
[0..*]"];
BaseClass_595338686 -> Class_629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseClass_595338686 -> Class_629358305[label="iChildClasses
[0..*]"];
BaseClass_595338686 -> Class_629358305[label="iParentClass
[0..1]"];
BaseClass_595338686 -> DatePattern629358305[label="iDatePattern
[0..1]"];
BaseClass_595338686 -> Department629358305[label="iControllingDept
[0..1]"];
BaseClass_595338686 -> Department629358305[label="iFundingDept
[0..1]"];
BaseClass_595338686 -> Department629358305[label="iManagingDept
[0..1]"];
BaseClass_595338686 -> LearningManagementSystemInfo629358305[label="iLmsInfo
[0..1]"];
BaseClass_595338686 -> SchedulingSubpart629358305[label="iSchedulingSubpart
[0..1]"];
BaseClass_595338686 -> StudentClassEnrollment629358305[label="iStudentEnrollments
[0..*]"];
BaseClass_595338686 -> TeachingClassRequest629358305[label="iTeachingRequests
[0..*]"];
BaseClass_DAO595338686 -> Class_DAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseClusterDiscoveryDAO595338686 -> ClusterDiscoveryDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseConstraintInfoDAO595338686 -> ConstraintInfoDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseContactCategoryDAO595338686 -> ContactCategoryDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseCatalogDAO595338686 -> CourseCatalogDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseCreditFormatDAO595338686 -> CourseCreditFormatDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseCreditTypeDAO595338686 -> CourseCreditTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseCreditUnitConfig595338686 -> CourseCreditUnitConfig629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseCreditUnitConfigDAO595338686 -> CourseCreditUnitConfigDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseCreditUnitTypeDAO595338686 -> CourseCreditUnitTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseDemandDAO595338686 -> CourseDemandDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseEventDAO595338686 -> CourseEventDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseHistoryDAO595338686 -> CourseHistoryDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseOffering595338686 -> CourseCreditUnitConfig629358305[label="iCreditConfigs
[0..*]"];
BaseCourseOffering595338686 -> CourseOffering629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseOffering595338686 -> CourseOffering629358305[label="iAlternativeOffering
[0..1]"];
BaseCourseOffering595338686 -> CourseOffering629358305[label="iDemandOffering
[0..1]"];
BaseCourseOffering595338686 -> CourseType629358305[label="iCourseType
[0..1]"];
BaseCourseOffering595338686 -> DemandOfferingType629358305[label="iDemandOfferingType
[0..1]"];
BaseCourseOffering595338686 -> Department629358305[label="iFundingDept
[0..1]"];
BaseCourseOffering595338686 -> InstructionalOffering629358305[label="iInstructionalOffering
[0..1]"];
BaseCourseOffering595338686 -> OfferingConsentType629358305[label="iConsentType
[0..1]"];
BaseCourseOffering595338686 -> OverrideType629358305[label="iDisabledOverrides
[0..*]"];
BaseCourseOffering595338686 -> SubjectArea629358305[label="iSubjectArea
[0..1]"];
BaseCourseOfferingDAO595338686 -> CourseOfferingDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseOfferingImport876794133 -> BaseDepartmentalInstructor595338686[label="elementInstructor() -> addToclasses()"];
BaseCourseOfferingImport876794133 -> BaseDistributionPref595338686[label="addDistributionPref() -> addTodistributionObjects()"];
BaseCourseOfferingImport876794133 -> ClassDurationType629358305[label="elementInstrOffrConfig() -> findByReference()"];
BaseCourseOfferingImport876794133 -> Constants1821660490[label="elementExam() -> slot2str()"];
BaseCourseOfferingImport876794133 -> CourseOffering629358305[label="loadExistingCourseOfferings() -> findAll()"];
BaseCourseOfferingImport876794133 -> CourseOfferingImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseOfferingImport876794133 -> Debug1738245203[label="elementCourse() -> info()"];
BaseCourseOfferingImport876794133 -> Department629358305[label="elementClass() -> findByDeptCode()"];
BaseCourseOfferingImport876794133 -> DistributionType629358305[label="canShareRoomType
[0..1]"];
BaseCourseOfferingImport876794133 -> DistributionType629358305[label="meetsWithType
[0..1]"];
BaseCourseOfferingImport876794133 -> ExamPeriod629358305[label="elementExam() -> findByDateStart()"];
BaseCourseOfferingImport876794133 -> InstrOfferingConfig629358305[label="elementSubpart() -> addToschedulingSubparts()"];
BaseCourseOfferingImport876794133 -> InstructionalMethod629358305[label="elementInstrOffrConfig() -> findByReference()"];
BaseCourseOfferingImport876794133 -> ItypeDesc629358305[label="itypes
[0..*]"];
BaseCourseOfferingImport876794133 -> ItypeDesc629358305[label="itypesBySisRef
[0..*]"];
BaseCourseOfferingImport876794133 -> OfferingConsentType629358305[label="getCourses() -> getOfferingConsentTypeForReference()"];
BaseCourseOfferingImport876794133 -> PreferenceLevel629358305[label="requiredPrefLevel
[0..1]"];
BaseCourseOfferingImport876794133 -> SolverParameterDef629358305[label="loadXml() -> findByNameType()"];
BaseCourseOfferingImport876794133 -> SubjectArea629358305[label="subjectAreas
[0..*]"];
BaseCourseOfferingImport876794133 -> TeachingResponsibility629358305[label="elementInstructor() -> getTeachingResponsibility()"];
BaseCourseOfferingImport876794133 -> TimeObject1060204932[label="getMeetings() -> asMeeting()"];
BaseCourseOfferingImport876794133 -> TimePattern629358305[label="timePatterns
[0..*]"];
BaseCourseRequestDAO595338686 -> CourseRequestDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseRequestOptionDAO595338686 -> CourseRequestOptionDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseReservationDAO595338686 -> CourseReservationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseSubpartCreditDAO595338686 -> CourseSubpartCreditDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseType595338686 -> CourseType629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseCourseTypeDAO595338686 -> CourseTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCurriculum595338686 -> Curriculum629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseCurriculumClassificationDAO595338686 -> CurriculumClassificationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCurriculumCourseDAO595338686 -> CurriculumCourseDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCurriculumCourseGroupDAO595338686 -> CurriculumCourseGroupDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCurriculumDAO595338686 -> CurriculumDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCurriculumOverrideReservationDAO595338686 -> CurriculumOverrideReservationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCurriculumProjectionRuleDAO595338686 -> CurriculumProjectionRuleDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseCurriculumReservationDAO595338686 -> CurriculumReservationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDatePatternDAO595338686 -> DatePatternDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDatePatternPrefDAO595338686 -> DatePatternPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDegreeDAO595338686 -> DegreeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDemandOfferingType595338686 -> DemandOfferingType629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseDemandOfferingTypeDAO595338686 -> DemandOfferingTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDepartment595338686 -> Department629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseDepartmentDAO595338686 -> DepartmentDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDepartmentRoomFeatureDAO595338686 -> DepartmentRoomFeatureDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDepartmentStatusType595338686 -> DepartmentStatusType629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseDepartmentStatusTypeDAO595338686 -> DepartmentStatusTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDepartmentalInstructor595338686 -> DepartmentalInstructor629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseDepartmentalInstructorDAO595338686 -> DepartmentalInstructorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDistributionObjectDAO595338686 -> DistributionObjectDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDistributionPrefDAO595338686 -> DistributionPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseDistributionType595338686 -> Department629358305[label="iDepartments
[0..*]"];
BaseDistributionType595338686 -> DistributionType629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseDistributionTypeDAO595338686 -> DistributionTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseEventContact595338686 -> EventContact629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseEventContactDAO595338686 -> EventContactDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseEventDAO595338686 -> EventDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseEventDateMappingDAO595338686 -> EventDateMappingDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseEventNoteDAO595338686 -> EventNoteDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseEventServiceProviderDAO595338686 -> EventServiceProviderDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExactTimeMinsDAO595338686 -> ExactTimeMinsDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExam595338686 -> Exam629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseExamConflictDAO595338686 -> ExamConflictDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExamDAO595338686 -> ExamDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExamEventDAO595338686 -> ExamEventDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExamLocationPrefDAO595338686 -> ExamLocationPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExamOwner595338686 -> ExamOwner629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseExamOwnerDAO595338686 -> ExamOwnerDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExamPeriod595338686 -> ExamPeriod629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseExamPeriodDAO595338686 -> ExamPeriodDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExamPeriodPrefDAO595338686 -> ExamPeriodPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExamStatus595338686 -> ExamStatus629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseExamStatusDAO595338686 -> ExamStatusDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExamType595338686 -> ExamType629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseExamTypeDAO595338686 -> ExamTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> AcademicSessionSetupExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> CourseOfferingExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> CurriculaExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> LastLikeCourseDemandExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> PermissionsExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> PointInTimeDataExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> PreferencesExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> ReservationExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> RoomSharingExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> StudentAdvisorsExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> StudentEnrollmentExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> StudentExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> StudentSchedulingStatusExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> StudentSectioningExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExport876794133 -> TravelTimesExport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseExternalBuildingDAO595338686 -> ExternalBuildingDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExternalDepartmentStatusTypeDAO595338686 -> ExternalDepartmentStatusTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExternalRoom595338686 -> ExternalBuilding629358305[label="iBuilding
[0..1]"];
BaseExternalRoom595338686 -> ExternalRoom629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseExternalRoom595338686 -> ExternalRoomDepartment629358305[label="iRoomDepartments
[0..*]"];
BaseExternalRoom595338686 -> ExternalRoomFeature629358305[label="iRoomFeatures
[0..*]"];
BaseExternalRoom595338686 -> RoomType629358305[label="iRoomType
[0..1]"];
BaseExternalRoomDAO595338686 -> ExternalRoomDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExternalRoomDepartment595338686 -> ExternalRoomDepartment629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseExternalRoomDepartmentDAO595338686 -> ExternalRoomDepartmentDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseExternalRoomFeatureDAO595338686 -> ExternalRoomFeatureDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseFinalExamEventDAO595338686 -> FinalExamEventDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseFixedCreditUnitConfigDAO595338686 -> FixedCreditUnitConfigDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseFreeTimeDAO595338686 -> FreeTimeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseGlobalRoomFeature595338686 -> GlobalRoomFeature629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseGlobalRoomFeatureDAO595338686 -> GlobalRoomFeatureDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseGroupOverrideReservationDAO595338686 -> GroupOverrideReservationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseHashedQueryDAO595338686 -> HashedQueryDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseHistoryDAO595338686 -> HistoryDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> AcademicAreaImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> AcademicClassificationImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> AcademicSessionSetupImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> BaseCourseOfferingImport876794133[label="loadXml() -> loadXml()"];
BaseImport876794133 -> BuildingRoomImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> CourseCatalogImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> CourseOfferingReservationImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> CourseTimetableImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> CurriculaImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> DepartmentImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> EventImport876794133[label="loadXml() -> loadXml()"];
BaseImport876794133 -> EventRelatedImports876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> HQLImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> LastLikeCourseDemandImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> PermissionsImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> PointInTimeDataImport876794133[label="loadXml() -> loadXml()"];
BaseImport876794133 -> PosMajorImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> PosMinorImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> PreferencesImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> ReservationImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> RoomSharingImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> ScriptImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> SessionImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> SolverImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> StaffImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> StudentAccomodationImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> StudentAdvisorsImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> StudentEnrollmentImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> StudentGroupImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> StudentImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> StudentSchedulingStatusImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> StudentSectioningImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> SubjectAreaImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseImport876794133 -> TimetableManager629358305[label="iManager
[0..1]"];
BaseImport876794133 -> TravelTimesImport876794133[arrowhead=none, arrowtail=empty, dir=both];
BaseIndividualOverrideReservationDAO595338686 -> IndividualOverrideReservationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseIndividualReservationDAO595338686 -> IndividualReservationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstrOfferingConfigDAO595338686 -> InstrOfferingConfigDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructionalMethodDAO595338686 -> InstructionalMethodDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructionalOffering595338686 -> CourseOffering629358305[label="iCourseOfferings
[0..*]"];
BaseInstructionalOffering595338686 -> InstrOfferingConfig629358305[label="iInstrOfferingConfigs
[0..*]"];
BaseInstructionalOffering595338686 -> InstructionalOffering629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructionalOffering595338686 -> OfferingCoordinator629358305[label="iOfferingCoordinators
[0..*]"];
BaseInstructionalOffering595338686 -> Reservation629358305[label="iReservations
[0..*]"];
BaseInstructionalOffering595338686 -> Session629358305[label="iSession
[0..1]"];
BaseInstructionalOffering595338686 -> TeachingRequest629358305[label="iTeachingRequests
[0..*]"];
BaseInstructionalOfferingDAO595338686 -> InstructionalOfferingDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorAttribute595338686 -> InstructorAttribute629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorAttributeDAO595338686 -> InstructorAttributeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorAttributePrefDAO595338686 -> InstructorAttributePrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorAttributeTypeDAO595338686 -> InstructorAttributeTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorCoursePrefDAO595338686 -> InstructorCoursePrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorCourseRequirement595338686 -> InstructorCourseRequirement629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorCourseRequirementDAO595338686 -> InstructorCourseRequirementDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorCourseRequirementNoteDAO595338686 -> InstructorCourseRequirementNoteDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorCourseRequirementTypeDAO595338686 -> InstructorCourseRequirementTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorPrefDAO595338686 -> InstructorPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorSurvey595338686 -> InstructorSurvey629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseInstructorSurveyDAO595338686 -> InstructorSurveyDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseItypeDesc595338686 -> ItypeDesc629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseItypeDesc595338686 -> ItypeDesc629358305[label="iParent
[0..1]"];
BaseItypeDescDAO595338686 -> ItypeDescDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseJointEnrollmentDAO595338686 -> JointEnrollmentDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseLastLikeCourseDemandDAO595338686 -> LastLikeCourseDemandDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseLearningCommunityReservationDAO595338686 -> LearningCommunityReservationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseLearningManagementSystemInfoDAO595338686 -> LearningManagementSystemInfoDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseLocationDAO595338686 -> LocationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseLocationPictureDAO595338686 -> LocationPictureDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseManagerRoleDAO595338686 -> ManagerRoleDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseManagerSettingsDAO595338686 -> ManagerSettingsDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseMapTileCacheDAO595338686 -> MapTileCacheDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseMeetingDAO595338686 -> MeetingDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseMessageLogDAO595338686 -> MessageLogDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseMidtermExamEventDAO595338686 -> MidtermExamEventDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseNonUniversityLocationDAO595338686 -> NonUniversityLocationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseNonUniversityLocationPicture595338686 -> NonUniversityLocation629358305[label="iLocation
[0..1]"];
BaseNonUniversityLocationPicture595338686 -> NonUniversityLocationPicture629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseNonUniversityLocationPictureDAO595338686 -> NonUniversityLocationPictureDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseOfferingConsentType595338686 -> OfferingConsentType629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseOfferingConsentTypeDAO595338686 -> OfferingConsentTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseOfferingCoordinatorDAO595338686 -> OfferingCoordinatorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseOnlineSectioningLogDAO595338686 -> OnlineSectioningLogDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseOverrideReservationDAO595338686 -> OverrideReservationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseOverrideType595338686 -> OverrideType629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseOverrideTypeDAO595338686 -> OverrideTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePeriodicTaskDAO595338686 -> PeriodicTaskDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitClassDAO595338686 -> PitClassDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitClassEventDAO595338686 -> PitClassEventDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitClassInstructorDAO595338686 -> PitClassInstructorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitClassMeetingDAO595338686 -> PitClassMeetingDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitClassMeetingUtilPeriodDAO595338686 -> PitClassMeetingUtilPeriodDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitCourseOfferingDAO595338686 -> PitCourseOfferingDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitDepartmentalInstructor595338686 -> PitDepartmentalInstructor629358305[arrowhead=none, arrowtail=empty, dir=both];
BasePitDepartmentalInstructorDAO595338686 -> PitDepartmentalInstructorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitInstrOfferingConfigDAO595338686 -> PitInstrOfferingConfigDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitInstructionalOfferingDAO595338686 -> PitInstructionalOfferingDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitOfferingCoordinatorDAO595338686 -> PitOfferingCoordinatorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitSchedulingSubpartDAO595338686 -> PitSchedulingSubpartDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitStudentAcadAreaMajorClassificationDAO595338686 -> PitStudentAcadAreaMajorClassificationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitStudentAcadAreaMinorClassificationDAO595338686 -> PitStudentAcadAreaMinorClassificationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitStudentClassEnrollmentDAO595338686 -> PitStudentClassEnrollmentDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePitStudentDAO595338686 -> PitStudentDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePointInTimeDataDAO595338686 -> PointInTimeDataDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePointInTimeDataReports1281202891 -> RoomUtilization1281202891[arrowhead=none, arrowtail=empty, dir=both];
BasePointInTimeDataReports1281202891 -> WSCHByDayOfWeekAndHourOfDay1281202891[arrowhead=none, arrowtail=empty, dir=both];
BasePointInTimeDataReports1281202891 -> WSCHByDepartment1281202891[arrowhead=none, arrowtail=empty, dir=both];
BasePointInTimeDataReports1281202891 -> WSEByDayOfWeekAndPeriod1281202891[arrowhead=none, arrowtail=empty, dir=both];
BasePosMajorConcentrationDAO595338686 -> PosMajorConcentrationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePosMajorDAO595338686 -> PosMajorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePosMinorDAO595338686 -> PosMinorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePositionTypeDAO595338686 -> PositionTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePreferenceDAO595338686 -> PreferenceDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePreferenceGroup595338686 -> DistributionObject629358305[label="iDistributionObjects
[0..*]"];
BasePreferenceGroup595338686 -> Preference629358305[label="iPreferences
[0..*]"];
BasePreferenceGroup595338686 -> PreferenceGroup629358305[arrowhead=none, arrowtail=empty, dir=both];
BasePreferenceGroupDAO595338686 -> PreferenceGroupDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BasePreferenceLevelDAO595338686 -> PreferenceLevelDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseProgramDAO595338686 -> ProgramDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseQueryLog595338686 -> QueryLog629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseQueryLogDAO595338686 -> QueryLogDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRefTableEntryDAO595338686 -> RefTableEntryDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRelatedCourseInfo595338686 -> CourseEvent629358305[label="iEvent
[0..1]"];
BaseRelatedCourseInfo595338686 -> CourseOffering629358305[label="iCourse
[0..1]"];
BaseRelatedCourseInfo595338686 -> RelatedCourseInfo629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseRelatedCourseInfoDAO595338686 -> RelatedCourseInfoDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseReservationDAO595338686 -> ReservationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRolesDAO595338686 -> RolesDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoom595338686 -> Building629358305[label="iBuilding
[0..1]"];
BaseRoom595338686 -> EventServiceProvider629358305[label="iAllowedServices
[0..*]"];
BaseRoom595338686 -> Room629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseRoom595338686 -> Room629358305[label="iParentRoom
[0..1]"];
BaseRoom595338686 -> Room629358305[label="iPartitions
[0..*]"];
BaseRoom595338686 -> RoomPicture629358305[label="iPictures
[0..*]"];
BaseRoom595338686 -> RoomType629358305[label="iRoomType
[0..1]"];
BaseRoomDAO595338686 -> RoomDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomDeptDAO595338686 -> RoomDeptDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomFeatureDAO595338686 -> RoomFeatureDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomFeaturePrefDAO595338686 -> RoomFeaturePrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomFeatureTypeDAO595338686 -> RoomFeatureTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomGroup595338686 -> RoomGroup629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomGroupDAO595338686 -> RoomGroupDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomGroupPrefDAO595338686 -> RoomGroupPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomPictureDAO595338686 -> RoomPictureDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomPrefDAO595338686 -> RoomPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomTypeDAO595338686 -> RoomTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseRoomTypeOptionDAO595338686 -> RoomTypeOptionDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSavedHQL595338686 -> SavedHQL629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseSavedHQL595338686 -> SavedHQLParameter629358305[label="iParameters
[0..*]"];
BaseSavedHQLDAO595338686 -> SavedHQLDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSavedHQLParameterDAO595338686 -> SavedHQLParameterDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSchedulingSubpart595338686 -> SchedulingSubpart629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseSchedulingSubpartDAO595338686 -> SchedulingSubpartDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseScriptDAO595338686 -> ScriptDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseScriptParameterDAO595338686 -> ScriptParameterDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSectioningInfoDAO595338686 -> SectioningInfoDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSectioningSolutionLogDAO595338686 -> SectioningSolutionLogDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSessionConfig595338686 -> Session629358305[label="iSession
[0..1]"];
BaseSessionConfig595338686 -> SessionConfig629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseSessionConfigDAO595338686 -> SessionConfigDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSessionDAO595338686 -> SessionDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSettingsDAO595338686 -> SettingsDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSolutionDAO595338686 -> SolutionDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSolutionInfoDAO595338686 -> SolutionInfoDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSolverGroupDAO595338686 -> SolverGroupDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSolverInfoDAO595338686 -> SolverInfoDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSolverInfoDefDAO595338686 -> SolverInfoDefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSolverParameterDAO595338686 -> SolverParameterDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSolverParameterDefDAO595338686 -> SolverParameterDefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSolverParameterGroupDAO595338686 -> SolverParameterGroupDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSolverPredefinedSettingDAO595338686 -> SolverPredefinedSettingDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSpecialEventDAO595338686 -> SpecialEventDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSponsoringOrganizationDAO595338686 -> SponsoringOrganizationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStaff595338686 -> Staff629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseStaffDAO595338686 -> StaffDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStandardEventNoteDAO595338686 -> StandardEventNoteDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStandardEventNoteDepartmentDAO595338686 -> StandardEventNoteDepartmentDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStandardEventNoteGlobalDAO595338686 -> StandardEventNoteGlobalDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStandardEventNoteSessionDAO595338686 -> StandardEventNoteSessionDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudent595338686 -> Student629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentAccomodationDAO595338686 -> StudentAccomodationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentAreaClassificationMajorDAO595338686 -> StudentAreaClassificationMajorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentAreaClassificationMinorDAO595338686 -> StudentAreaClassificationMinorDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentClassEnrollmentDAO595338686 -> StudentClassEnrollmentDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentClassPrefDAO595338686 -> StudentClassPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentDAO595338686 -> StudentDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentEnrollmentDAO595338686 -> StudentEnrollmentDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentEnrollmentMessageDAO595338686 -> StudentEnrollmentMessageDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentGroupDAO595338686 -> StudentGroupDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentGroupReservationDAO595338686 -> StudentGroupReservationDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentGroupTypeDAO595338686 -> StudentGroupTypeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentInstrMthPrefDAO595338686 -> StudentInstrMthPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentNoteDAO595338686 -> StudentNoteDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentSectHistoryDAO595338686 -> StudentSectHistoryDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentSectioningPrefDAO595338686 -> StudentSectioningPrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentSectioningQueueDAO595338686 -> StudentSectioningQueueDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseStudentSectioningStatusDAO595338686 -> StudentSectioningStatusDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSubjectArea595338686 -> CourseOffering629358305[label="iCourseOfferings
[0..*]"];
BaseSubjectArea595338686 -> Department629358305[label="iDepartment
[0..1]"];
BaseSubjectArea595338686 -> Department629358305[label="iFundingDept
[0..1]"];
BaseSubjectArea595338686 -> InstructionalOffering629358305[label="iInstructionalOfferings
[0..*]"];
BaseSubjectArea595338686 -> Session629358305[label="iSession
[0..1]"];
BaseSubjectArea595338686 -> SubjectArea629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseSubjectAreaDAO595338686 -> SubjectAreaDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseSubjectHistoryDAO595338686 -> SubjectHistoryDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTaskExecutionDAO595338686 -> TaskExecutionDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTaskParameterDAO595338686 -> TaskParameterDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTeachingClassRequestDAO595338686 -> TeachingClassRequestDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTeachingRequest595338686 -> TeachingRequest629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseTeachingRequestDAO595338686 -> TeachingRequestDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTeachingResponsibilityDAO595338686 -> TeachingResponsibilityDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTimePatternDAO595338686 -> TimePatternDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTimePatternDaysDAO595338686 -> TimePatternDaysDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTimePatternTimeDAO595338686 -> TimePatternTimeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTimePref595338686 -> TimePref629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseTimePrefDAO595338686 -> TimePrefDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTimetableManager595338686 -> Department629358305[label="iDepartments
[0..*]"];
BaseTimetableManager595338686 -> ManagerRole629358305[label="iManagerRoles
[0..*]"];
BaseTimetableManager595338686 -> ManagerSettings629358305[label="iSettings
[0..*]"];
BaseTimetableManager595338686 -> SolverGroup629358305[label="iSolverGroups
[0..*]"];
BaseTimetableManager595338686 -> TimetableManager629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseTimetableManagerDAO595338686 -> TimetableManagerDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseTravelTime595338686 -> TravelTime629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseTravelTimeDAO595338686 -> TravelTimeDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseUnavailableEventDAO595338686 -> UnavailableEventDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseUser595338686 -> User629358305[arrowhead=none, arrowtail=empty, dir=both];
BaseUserDAO595338686 -> UserDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseUserDataDAO595338686 -> UserDataDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseVariableFixedCreditUnitConfigDAO595338686 -> VariableFixedCreditUnitConfigDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseVariableRangeCreditUnitConfigDAO595338686 -> VariableRangeCreditUnitConfigDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
BaseWaitListDAO595338686 -> WaitListDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
Builder847107251 -> Entity535535422[arrowhead=none];
Builder847107251 -> Property535535422[arrowhead=none];
Building629358305 -> ExternalBuilding629358305[label="updateBuildings() -> getBuildings()"];
Building629358305 -> Session629358305[label="updateBuildings() -> getSessionById()"];
BuildingDelete82359199 -> BaseRoomDAO595338686[label="check() -> findByBuilding()"];
BuildingDelete82359199 -> Room629358305[label="permissionRoomDelete
[1]"];
BuildingList82359199 -> BuildingAdd82359199[arrowhead=none, arrowtail=empty, dir=both];
BuildingList82359199 -> BuildingExportPdf82359199[arrowhead=none, arrowtail=empty, dir=both];
BuildingList82359199 -> BuildingUpdateData82359199[arrowhead=none, arrowtail=empty, dir=both];
BuildingList82359199 -> TravelTimesLoad82359199[arrowhead=none, arrowtail=empty, dir=both];
BuildingList82359199 -> TravelTimesSave82359199[arrowhead=none, arrowtail=empty, dir=both];
BuildingRoomImport876794133 -> BaseExternalBuilding595338686[label="importRoom() -> addTorooms()"];
BuildingRoomImport876794133 -> ChangeLog629358305[label="loadXml() -> addChange()"];
BuildingRoomImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
BuildingsConntector537604450 -> Building629358305[label="doGet() -> findAll()"];
BuildingsDataResponse759770151 -> BuildingInterface759770151[label="iBuildings
[0..*]"];
CBSConstraint700504266 -> CBSAssignment700504266[arrowhead=none];
CBSConstraint700504266 -> CBSValue700504266[arrowhead=none];
CBSConstraint700504266 -> CBSVariable700504266[arrowhead=none];
CBSNode1582234977 -> SelectedAssignment1582234977[label="iSelection
[0..1]"];
ChangeGradeModesRequest836856674 -> SpecialRegistrationCreditChange836856674[label="iCreditChanges
[0..*]"];
ChangeGradeModesRequest836856674 -> SpecialRegistrationGradeModeChange836856674[label="iChanges
[0..*]"];
ChangeGradeModesResponse836856674 -> GradeModes1896556946[label="iGradeModes
[0..1]"];
ChangeGradeModesResponse836856674 -> RetrieveSpecialRegistrationResponse836856674[label="iRequests
[0..*]"];
ChangeLog629358305 -> TimetableManager629358305[label="addChange() -> findByExternalId()"];
ChangePassword1530278742 -> User629358305[label="check() -> findByUserName()"];
ClassAssignment676728335 -> Class_629358305[label="check() -> effectiveDatePattern()"];
ClassAssignment676728335 -> CourseTimetablingSolverService1058021598[arrowhead=none];
ClassAssignment676728335 -> ExaminationSolverService1058021598[arrowhead=none];
ClassAssignment676728335 -> InstructionalOffering629358305[label="permissionOfferingLockNeededLimitedEdit
[1]"];
ClassAssignment676728335 -> InstructorSchedulingSolverService1058021598[arrowhead=none];
ClassAssignment676728335 -> PreferenceGroup629358305[label="check() -> effectiveTimePatterns()"];
ClassAssignment676728335 -> StudentSectioningSolverService1058021598[arrowhead=none];
ClassAssignmentDetails1582234977 -> BtbInstructorInfo1582234977[label="iBtbInstructorConflicts
[0..*]"];
ClassAssignmentDetails1582234977 -> ClassInfo1582234977[label="iClass
[0..1]"];
ClassAssignmentDetails1582234977 -> DistributionInfo1582234977[label="iDistributionConflicts
[0..*]"];
ClassAssignmentDetails1582234977 -> InstructorInfo1582234977[label="iInstructor
[0..*]"];
ClassAssignmentDetails1582234977 -> RoomInfo1582234977[label="iAssignedRoom
[0..*]"];
ClassAssignmentDetails1582234977 -> RoomInfo1582234977[label="iInitialRoom
[0..*]"];
ClassAssignmentDetails1582234977 -> RoomInfo1582234977[label="iRoom
[0..*]"];
ClassAssignmentDetails1582234977 -> RoomInfo1582234977[label="iRooms
[0..*]"];
ClassAssignmentDetails1582234977 -> StudentConflictInfo1582234977[label="iStudentConflicts
[0..*]"];
ClassAssignmentDetails1582234977 -> TimeInfo1582234977[label="iAssignedTime
[0..1]"];
ClassAssignmentDetails1582234977 -> TimeInfo1582234977[label="iInitialTime
[0..1]"];
ClassAssignmentDetails1582234977 -> TimeInfo1582234977[label="iTime
[0..1]"];
ClassAssignmentDetails1582234977 -> TimeInfo1582234977[label="iTimes
[0..*]"];
ClassAssignmentDetailsBackend43990826 -> AssignmentPreferenceInfo1605871111[label="createClassAssignmentDetailsFromAssignment() -> getRoomPreference()"];
ClassAssignmentDetailsBackend43990826 -> DepartmentalInstructor629358305[label="createClassAssignmentDetailsFromAssignment() -> getName()"];
ClassAssignmentDetailsBackend43990826 -> JenrlInfo1582234977[label="toJenrlInfo() -> addCurriculum()"];
ClassAssignmentDetailsBackend43990826 -> SuggestionsContext43990826[label="createClassAssignmentDetails() -> courseObjectives()"];
ClassAssignmentDetailsBackend43990826 -> TimetableGridSolutionHelper43990826[label="createClassAssignmentDetailsFromAssignment() -> hardConflicts2pref()"];
ClassAssignmentDetailsBackend43990826 -> TimetableGridSolverHelper43990826[label="createClassAssignmentDetails() -> hardConflicts2pref()"];
ClassAssignmentDetailsRequest1582234977 -> SelectedAssignment1582234977[label="iAssignments
[0..*]"];
ClassAssignments676728335 -> ClassAssignmentsExportCsv676728335[arrowhead=none, arrowtail=empty, dir=both];
ClassAssignments676728335 -> ClassAssignmentsExportPdf676728335[arrowhead=none, arrowtail=empty, dir=both];
ClassCancel317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
ClassDeleteNoEnrollmentCheck317154439 -> ClassDelete317154439[arrowhead=none, arrowtail=empty, dir=both];
ClassDeleteNoEnrollmentCheck317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
ClassEdit317154439 -> ClassEditClearPreferences317154439[arrowhead=none, arrowtail=empty, dir=both];
ClassEdit317154439 -> DistributionPreferenceClass317154439[arrowhead=none, arrowtail=empty, dir=both];
ClassEdit317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
ClassInfo1304083885 -> AssignmentInfo1304083885[label="iMeetings
[0..*]"];
ClassInfo1304083885 -> ClassAssignmentInfo1304083885[arrowhead=none, arrowtail=empty, dir=both];
ClassInfo1304083885 -> CourseInfo1304083885[label="iCourse
[0..*]"];
ClassInfoConnector537604450 -> _BaseRootDAO595338686[label="doGet() -> get()"];
ClearHibernateCacheBackend1801756021 -> HibernateUtil2052906881[label="execute() -> clearCache()"];
CompositeTerm2060480431 -> AndTerm2060480431[arrowhead=none, arrowtail=empty, dir=both];
CompositeTerm2060480431 -> OrTerm2060480431[arrowhead=none, arrowtail=empty, dir=both];
ComputeConflictTableBackend43990826 -> PreferenceLevel629358305[label="computeConfTable() -> int2prolog()"];
ComputeSuggestionsBackend1334400992 -> Suggestion402768419[label="execute() -> toInfo()"];
ComputeSuggestionsBackend1334400992 -> TeachingRequestInfo1591923739[label="execute() -> getInstructor()"];
ComputeSuggestionsBackend43990826 -> Query998479413[label="match() -> match()"];
ComputeSuggestionsBackend43990826 -> SuggestionsContext43990826[label="computeSuggestions() -> courseObjectives()"];
ComputeSuggestionsBackend43990826 -> TimetableSolver1792699557[label="computeSuggestions() -> getNotValidReason()"];
ComputeSuggestionsRequest1582234977 -> SelectedAssignment1582234977[label="iAssignments
[0..*]"];
ComputeSuggestionsRequest1591923739 -> AssignmentInfo1591923739[label="iAssignments
[0..*]"];
Concentrations1542390228 -> BasePosMajorDAO595338686[label="load() -> findBySession()"];
ConflictBasedStatisticsBackend43990826 -> Solution629358305[label="execute() -> getInfo()"];
ConflictBasedStatisticsBackend43990826 -> _BaseRootDAO595338686[label="execute() -> get()"];
ConflictStatisticsFilterBackend43990826 -> SolverPageBackend43990826[label="execute() -> fillSolverWarnings()"];
ConflictStatisticsFilterBackend43990826 -> SuggestionProperties1582234977[label="execute() -> addPreference()"];
CopyInstructorSurveyBackend1948231384 -> CourseOffering629358305[label="execute() -> findBySubjectAreaCourseNbr()"];
CourseCatalogImport876794133 -> BaseCourseCatalog595338686[label="loadCredits() -> addTosubparts()"];
CourseCatalogImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
CourseCreditUnitConfig629358305 -> BaseArrangeCreditUnitConfig595338686[arrowhead=none, arrowtail=empty, dir=both];
CourseCreditUnitConfig629358305 -> BaseFixedCreditUnitConfig595338686[arrowhead=none, arrowtail=empty, dir=both];
CourseCreditUnitConfig629358305 -> BaseVariableFixedCreditUnitConfig595338686[arrowhead=none, arrowtail=empty, dir=both];
CourseCreditUnitConfig629358305 -> CourseCreditFormat629358305[label="createCreditUnitConfigOfFormat() -> getCourseCreditForReference()"];
CourseDetailsBackend1801756021 -> AGHCourseDetailsProvider2037228697[arrowhead=none];
CourseDetailsBackend1801756021 -> DefaultCourseDetailsProvider2037228697[arrowhead=none];
CourseDetailsBackend1801756021 -> PurdueCourseDetailsProvider1860031534[arrowhead=none];
CourseInfoMatcher1932076738 -> CourseLookup1932076738[label="iLookup
[0..1]"];
CourseInfoMatcher1932076738 -> CourseRequestMatcher1932076738[arrowhead=none, arrowtail=empty, dir=both];
CourseInfoMatcher1932076738 -> XCourse220419187[label="iInfo
[0..1]"];
CourseInterface1351995911 -> Course21643374[arrowhead=none, arrowtail=empty, dir=both];
CourseInterface1351995911 -> CurriculumCourseGroupInterface1351995911[label="iGroups
[0..*]"];
CourseInterface1351995911 -> CurriculumCourseInterface1351995911[label="iCurriculumCourses
[0..*]"];
CourseLookup1932076738 -> AcademicSessionInfo1032738488[label="iSession
[0..1]"];
CourseLookup1932076738 -> UCCCoursesLookup1860031534[arrowhead=none];
CourseOfferingCheckExistsBackend1624300373 -> CourseOffering629358305[label="execute() -> findBySessionSubjAreaAbbvCourseNbr()"];
CourseOfferingCheckExistsBackend1624300373 -> _BaseRootDAO595338686[label="execute() -> get()"];
CourseOfferingDeleteFromCrossListNoEnrollmentCheck317154439 -> CourseOfferingDeleteFromCrossList317154439[arrowhead=none, arrowtail=empty, dir=both];
CourseOfferingExport876794133 -> ClassEvent629358305[label="iClassEvents
[0..*]"];
CourseOfferingExport876794133 -> Class_629358305[label="exportArrHours() -> effectiveDatePattern()"];
CourseOfferingExport876794133 -> CourseTimetableExport876794133[arrowhead=none, arrowtail=empty, dir=both];
CourseOfferingExport876794133 -> DateUtils1821660490[label="exportDatePattern() -> getNrDaysOfMonth()"];
CourseOfferingExport876794133 -> Exam629358305[label="iExams
[0..*]"];
CourseOfferingExport876794133 -> HibernateUtil2052906881[label="main() -> configureHibernate()"];
CourseOfferingExport876794133 -> Location629358305[label="iMeetingLocations
[0..*]"];
CourseOfferingExport876794133 -> SchedulingSubpartComparator1628636464[label="exportExam() -> compare()"];
CourseOfferingExport876794133 -> Session629358305[label="main() -> getSessionUsingInitiativeYearTerm()"];
CourseOfferingExport876794133 -> SolverParameterDef629358305[label="saveXml() -> findByNameType()"];
CourseOfferingExport876794133 -> StudentGroupInfo1605871111[label="exportGroupInfos() -> getStudentAssignments()"];
CourseOfferingPropertiesBackend1624300373 -> Localization779599398[label="execute() -> getDateFormat()"];
CourseOfferingPropertiesInterface1912414017 -> AcademicSessionInterface1912414017[label="iSession
[0..1]"];
CourseOfferingPropertiesInterface1912414017 -> CourseCreditFormatInterface1912414017[label="iCourseCreditFormats
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> CourseCreditTypeInterface1912414017[label="iCourseCreditTypes
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> CourseCreditUnitTypeInterface1912414017[label="iCourseCreditUnitTypes
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> CourseOfferingInterface1000739671[label="iAltCourseOfferings
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> CourseOfferingInterface1000739671[label="iCourseDemands
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> CourseTypeInterface1912414017[label="iCourseTypes
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> DepartmentInterface1912414017[label="iFundingDepartments
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> InstructorInterface1912414017[label="iInstructors
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> OfferingConsentTypeInterface1912414017[label="iOfferingConsentTypes
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> OverrideTypeInterface1912414017[label="iOverrideTypes
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> ResponsibilityInterface1912414017[label="iResponsibilities
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> SubjectAreaInterface1912414017[label="iSubjectAreas
[0..*]"];
CourseOfferingPropertiesInterface1912414017 -> WaitListInterface1912414017[label="iWaitLists
[0..*]"];
CourseOfferingReservationImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
CourseRequestInterface1000739671 -> CheckCoursesResponse85005764[label="iWaitListChecks
[0..1]"];
CourseRequestInterface1000739671 -> CourseMessage85005764[label="iConfirmations
[0..*]"];
CourseRequestInterface1000739671 -> Request85005764[label="iAlternatives
[0..*]"];
CourseRequestInterface1000739671 -> Request85005764[label="iCourses
[0..*]"];
CourseRequestInterface1000739671 -> RequestedCourse85005764[label="iLastCourse
[0..1]"];
CourseRequestMatcher1932076738 -> Formats1821660490[label="match() -> getDateFormat()"];
CourseRequestMatcher1932076738 -> XCourseRequest220419187[label="iRequest
[0..1]"];
CourseRequestMatcher1932076738 -> XEnrollment220419187[label="iEnrollment
[0..1]"];
CourseRequestMatcher1932076738 -> XEnrollment220419187[label="iTestEnrollment
[0..1]"];
CourseRequestMatcher1932076738 -> XOffering220419187[label="iOffering
[0..1]"];
CourseRequestMatcher1932076738 -> XStudent220419187[label="iStudent
[0..1]"];
CourseRequestMatcher1932076738 -> XSubpart220419187[label="match() -> getCreditValue()"];
CourseSelectionBoxBackend1948231384 -> _BaseRootDAO595338686[label="getCourse() -> get()"];
CourseSolverContainer398558421 -> CourseSolverContainerRemote398558421[arrowhead=none, arrowtail=empty, dir=both];
CourseSolverContainerRemote398558421 -> _BaseRootDAO595338686[label="invoke() -> closeCurrentThreadSessions()"];
CourseTimetableImport876794133 -> Assignment629358305[label="importClassAssignment() -> generateCommittedEvent()"];
CourseTimetableImport876794133 -> BaseClass_595338686[label="updateInstructors() -> addToclassInstructors()"];
CourseTimetableImport876794133 -> BaseDepartmentalInstructor595338686[label="updateInstructors() -> addToclasses()"];
CourseTimetableImport876794133 -> Class_629358305[label="iExtId2class
[0..*]"];
CourseTimetableImport876794133 -> Class_629358305[label="iName2class
[0..*]"];
CourseTimetableImport876794133 -> DatePattern629358305[label="iDatePatterns
[0..*]"];
CourseTimetableImport876794133 -> DatePattern629358305[label="iName2dp
[0..*]"];
CourseTimetableImport876794133 -> Location629358305[label="iExtId2location
[0..*]"];
CourseTimetableImport876794133 -> Location629358305[label="iName2location
[0..*]"];
CourseTimetableImport876794133 -> PreferenceLevel629358305[label="importClassAssignment() -> getPreferenceLevel()"];
CourseTimetableImport876794133 -> Room629358305[label="iExtId2room
[0..*]"];
CourseTimetableImport876794133 -> Room629358305[label="iName2room
[0..*]"];
CourseTimetableImport876794133 -> Session629358305[label="iSession
[0..1]"];
CourseTimetableImport876794133 -> Solution629358305[label="iOwnerId2solution
[0..*]"];
CourseTimetableImport876794133 -> SolverImport876794133[label="loadXml() -> loadXml()"];
CourseTimetableImport876794133 -> TimePattern629358305[label="iName2tp
[0..*]"];
CourseTimetableImport876794133 -> TimePattern629358305[label="iTimePatterns
[0..*]"];
CourseTimetabling676728335 -> AssignedClasses676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetabling676728335 -> AssignmentHistory676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetabling676728335 -> CourseTimetablingAudit676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetabling676728335 -> CourseTimetablingOrAudit676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetabling676728335 -> NotAssignedClasses676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetabling676728335 -> SolutionChanges676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetabling676728335 -> SolutionReports676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetabling676728335 -> Suggestions676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetablingOrAudit676728335 -> ConflictStatistics676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetablingOrAudit676728335 -> Solver676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetablingOrAudit676728335 -> SolverLog676728335[arrowhead=none, arrowtail=empty, dir=both];
CourseTimetablingSolverService1058021598 -> ApplicationProperties1829907366[label="createConfig() -> getProperty()"];
CourseTimetablingSolverService1058021598 -> SolverGroup629358305[label="getSolverWarning() -> findBySessionId()"];
CourseTimetablingSolverService1058021598 -> SolverServerService1058021598[label="solverServerService
[1]"];
CurriculaConnector537604450 -> AbstractApiHelper79803438[arrowhead=none];
CurriculaConnector537604450 -> CurriculumFilterBackend1074656955[label="doGet() -> curricula()"];
CurriculaConnector537604450 -> CurriculumInterface1000739671[label="doGet() -> addMajor()"];
CurriculaConnector537604450 -> Department629358305[label="doGet() -> findAll()"];
CurriculaConnector537604450 -> EventContext1549462339[arrowhead=none];
CurriculaConnector537604450 -> FilterRpcRequest4669270[label="doGet() -> addOption()"];
CurriculaConnector537604450 -> GwtRpcHelper1637257272[arrowhead=none];
CurriculaConnector537604450 -> HttpSessionContext641976759[arrowhead=none];
CurriculaConnector537604450 -> JsonApiHelper79803438[label="getRequest() -> getRequest()", arrowhead=none];
CurriculaConnector537604450 -> TaskContext561943622[arrowhead=none];
CurriculaConnector537604450 -> XmlApiHelper79803438[label="getRequest() -> getRequest()", arrowhead=none];
CurriculaConnector537604450 -> _BaseRootDAO595338686[label="doGet() -> get()"];
CurriculaExport876794133 -> HibernateUtil2052906881[label="main() -> configureHibernate()"];
CurriculaExport876794133 -> Session629358305[label="main() -> getSessionUsingInitiativeYearTerm()"];
CurriculaImport876794133 -> ChangeLog629358305[label="loadXml() -> addChange()"];
CurriculaImport876794133 -> HibernateUtil2052906881[label="main() -> configureHibernate()"];
CurriculaImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
CurriculaServlet998479413 -> ApplicationProperties1829907366[label="getApplicationProperty() -> getProperty()"];
CurriculaServlet998479413 -> CurriculumFilterBackend1074656955[label="findCurricula() -> curricula()"];
CurriculaServlet998479413 -> FilterRpcRequest4669270[label="findCurricula() -> toQueryString()"];
CurriculaServlet998479413 -> InstructionalOffering629358305[label="listCourseOfferings() -> effectiveWaitList()"];
CurriculumAdmin814515033 -> CurriculumProjectionRulesEdit814515033[arrowhead=none, arrowtail=empty, dir=both];
CurriculumClassificationInterface1351995911 -> AcademicClassificationInterface1351995911[label="iClasf
[0..1]"];
CurriculumClassificationInterface1351995911 -> CurriculumCourseInterface1351995911[label="iCourses
[0..*]"];
CurriculumEdit814515033 -> CurriculumDelete814515033[arrowhead=none, arrowtail=empty, dir=both];
CurriculumEdit814515033 -> CurriculumMerge814515033[arrowhead=none, arrowtail=empty, dir=both];
CurriculumFilterBackend1074656955 -> FilterRpcRequest4669270[label="load() -> hasOption()"];
CurriculumFilterBackend1074656955 -> Query998479413[label="curricula() -> match()"];
CurriculumInterface1000739671 -> AcademicAreaInterface1351995911[label="iAcademicArea
[0..1]"];
CurriculumInterface1000739671 -> CourseInterface1351995911[label="iCourses
[0..*]"];
CurriculumInterface1000739671 -> CurriculumClassificationInterface1351995911[label="iClasf
[0..*]"];
CurriculumInterface1000739671 -> DepartmentInterface1351995911[label="iDept
[0..1]"];
CurriculumInterface1000739671 -> MajorInterface1351995911[label="iMajors
[0..*]"];
CurriculumMatcher1487748818 -> Curriculum629358305[label="iCurriculum
[0..1]"];
CurriculumMatcher1487748818 -> Department629358305[label="iManaged
[0..*]"];
CurriculumView814515033 -> CurriculumProjectionRulesDetail814515033[arrowhead=none, arrowtail=empty, dir=both];
DataExchangeConnector537604450 -> QueueMessage1094993043[label="doPost() -> toHTML()"];
DataExchangeConnector537604450 -> _BaseRootDAO595338686[label="doGet() -> get()"];
DataExchangeHelper876794133 -> BaseExport876794133[arrowhead=none, arrowtail=empty, dir=both];
DataExchangeHelper876794133 -> BaseImport876794133[arrowhead=none, arrowtail=empty, dir=both];
DataExchangeHelper876794133 -> Class_629358305[label="getClassSuffix() -> getSectionNumberString()"];
DataExchangeHelper876794133 -> TimetableManager629358305[label="importDocument() -> findByExternalId()"];
DatabaseUpdate2052906881 -> ApplicationConfig629358305[label="performUpdate() -> getConfig()"];
DatabaseUpdate2052906881 -> HibernateUtil2052906881[label="performUpdate() -> clearCache()"];
DatabaseUpdate2052906881 -> UniTimeCoreDatabaseUpdate2052906881[arrowhead=none, arrowtail=empty, dir=both];
DatabaseUpdate2052906881 -> _BaseRootDAO595338686[label="update() -> closeCurrentThreadSessions()"];
DateSelectorBackend2107708513 -> DateUtils1821660490[label="listMonths() -> getDate()"];
DateSelectorBackend2107708513 -> EventContext1549462339[label="execute() -> hasPermission()"];
DateSelectorBackend2107708513 -> EventDateMapping629358305[label="listMonths() -> getMapping()"];
DateSelectorBackend2107708513 -> Session629358305[label="listMonths() -> getHoliday()"];
DateSelectorBackend2107708513 -> _BaseRootDAO595338686[label="execute() -> get()"];
DbCourseInfoMatcher511700137 -> CourseLookup1932076738[label="iLookup
[0..1]"];
DbCourseInfoMatcher511700137 -> CourseOffering629358305[label="iCourse
[0..1]"];
DbCourseInfoMatcher511700137 -> DbCourseRequestMatcher511700137[arrowhead=none, arrowtail=empty, dir=both];
DbCourseInfoMatcher511700137 -> InstructionalOffering629358305[label="match() -> effectiveWaitList()"];
DbCourseRequestMatcher511700137 -> AcademicSessionInfo1032738488[label="iSession
[0..1]"];
DbCourseRequestMatcher511700137 -> Class_629358305[label="iClazz
[0..1]"];
DbCourseRequestMatcher511700137 -> CourseRequest629358305[label="iRequest
[0..1]"];
DbCourseRequestMatcher511700137 -> Formats1821660490[label="match() -> getDateFormat()"];
DbCourseRequestMatcher511700137 -> InstructionalOffering629358305[label="iOffering
[0..1]"];
DbCourseRequestMatcher511700137 -> Reservation629358305[label="iReservation
[0..1]"];
DbCourseRequestMatcher511700137 -> Student629358305[label="iStudent
[0..1]"];
DbCourseRequestMatcher511700137 -> StudentClassEnrollment629358305[label="iEnrollment
[0..*]"];
DbStudentMatcher511700137 -> Class_629358305[label="match() -> isToIgnoreStudentConflictsWith()"];
DbStudentMatcher511700137 -> Student629358305[label="iStudent
[0..1]"];
DefaultAcademicSessionLookup1821660490 -> Session629358305[label="findAcademicSession() -> getSessionUsingInitiativeYearTerm()"];
DefaultAcademicSessionLookup1821660490 -> SubjectArea629358305[label="findSubjectAreaForCampusYearTerm() -> findUsingInitiativeYearTermSubjectAbbreviation()"];
DefaultRoomAvailabilityService1821660490 -> CacheElement1202051522[label="iCache
[0..*]"];
DeleteRecordBackend330628327 -> AdminBackend1542390228[label="execute() -> getTable()"];
DeleteScriptBackend54906482 -> _BaseRootDAO595338686[label="execute() -> get()"];
DepartmenalRoomFeatureEdit82359199 -> DepartmenalRoomFeatureDelete82359199[arrowhead=none, arrowtail=empty, dir=both];
DepartmenalRoomGroupEdit82359199 -> DepartmenalRoomGroupDelete82359199[arrowhead=none, arrowtail=empty, dir=both];
Department629358305 -> AbstractAuthority876918435[label="hasRight() -> hasRight()", arrowhead=none];
Department629358305 -> Roles629358305[arrowhead=none];
DepartmentDelete1530278742 -> Department629358305[label="permissionDepartment
[1]"];
DepartmentEditChangeExternalManager1530278742 -> Department629358305[label="permissionDepartmentEdit
[1]"];
DepartmentImport876794133 -> ChangeLog629358305[label="loadXml() -> addChange()"];
DepartmentImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
DepartmentPropertiesBackend1360869250 -> Department629358305[label="getAllDependentDepartments() -> findAllNonExternal()"];
DepartmentPropertiesBackend1360869250 -> _BaseRootDAO595338686[label="execute() -> get()"];
DepartmentStatusType629358305 -> _BaseRootDAO595338686[label="findAll() -> findAll()"];
DepartmentalInstructor629358305 -> Debug1738245203[label="findByPuidDepartmentId() -> warning()"];
DepartmentalInstructor629358305 -> Department629358305[label="findThisInstructorInSession() -> findSameDepartmentInSession()"];
DepartmentalInstructor629358305 -> LdapExternalUidLookup1821660490[arrowhead=none];
DepartmentalInstructor629358305 -> PeopleLookupBackend244315587[arrowhead=none];
DepartmentalInstructor629358305 -> PreferenceGroup629358305[label="prefsOfTypeForDepartment() -> getPreferences()"];
DepartmentalInstructor629358305 -> SpringLdapExternalUidLookup1093250208[arrowhead=none];
DepartmentalInstructor629358305 -> _BaseRootDAO595338686[label="getAllForInstructor() -> get()"];
DepartmentsDataResponse1398617296 -> DepartmentInterface1000739671[label="iDepartments
[0..*]"];
DistributionPreferenceDelete317154439 -> Class_629358305[label="permissionClassEdit
[1]"];
DistributionPreferenceDelete317154439 -> SchedulingSubpart629358305[label="permissionSchedulingSubpartEdit
[1]"];
DistributionPreferenceDetail317154439 -> Class_629358305[label="permissionClassDetail
[1]"];
DistributionPreferenceDetail317154439 -> SchedulingSubpart629358305[label="permissionSchedulingSubpartDetail
[1]"];
DistributionPreferenceEdit317154439 -> Class_629358305[label="permissionClassEdit
[1]"];
DistributionPreferenceEdit317154439 -> DistributionType629358305[label="check() -> isApplicable()"];
DistributionPreferenceEdit317154439 -> SchedulingSubpart629358305[label="permissionSchedulingSubpartEdit
[1]"];
DistributionType629358305 -> Department629358305[label="findApplicable() -> getUserDepartments()"];
DistributionType629358305 -> PreferenceLevel629358305[label="isAllowed() -> prolog2char()"];
DummyContainer1876261413 -> ReplicatedDummyContainer1876261413[arrowhead=none, arrowtail=empty, dir=both];
DummySolverServer398558421 -> DummyContainer1876261413[label="iCourseSolverContainer
[0..1]"];
DummySolverServer398558421 -> DummyContainer1876261413[label="iExamSolverContainer
[0..1]"];
DummySolverServer398558421 -> DummyContainer1876261413[label="iInstructorSchedulingContainer
[0..1]"];
DummySolverServer398558421 -> DummyContainer1876261413[label="iOnlineStudentSchedulingContainer
[0..1]"];
DummySolverServer398558421 -> DummyContainer1876261413[label="iStudentSolverContainer
[0..1]"];
DummySolverServer398558421 -> SolverContainerWrapper398558421[label="iCourseSolverContainerWrapper
[0..1]"];
DummySolverServer398558421 -> SolverContainerWrapper398558421[label="iExamSolverContainerWrapper
[0..1]"];
DummySolverServer398558421 -> SolverContainerWrapper398558421[label="iOnlineStudentSchedulingContainerWrapper
[0..1]"];
DummySolverServer398558421 -> SolverContainerWrapper398558421[label="iStudentSolverContainerWrapper
[0..1]"];
EditCourseOffering317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
EditExamination1474622403 -> DistributionPreferenceExam1474622403[arrowhead=none, arrowtail=empty, dir=both];
EditExamination1474622403 -> ExaminationClone1474622403[arrowhead=none, arrowtail=empty, dir=both];
EditExamination1474622403 -> ExaminationDelete1474622403[arrowhead=none, arrowtail=empty, dir=both];
EditExamination1474622403 -> ExaminationEditClearPreferences1474622403[arrowhead=none, arrowtail=empty, dir=both];
EditInstructor2091179447 -> DeleteInstructor2091179447[arrowhead=none, arrowtail=empty, dir=both];
EditRoomDepartments82359199 -> RoomDepartments82359199[arrowhead=none, arrowtail=empty, dir=both];
Email1738245203 -> BoilerConnectEmail479650501[arrowhead=none, arrowtail=empty, dir=both];
Email1738245203 -> JavaMailWrapper1738245203[arrowhead=none, arrowtail=empty, dir=both];
Entity1499974154 -> RoomDetailInterface759770151[arrowhead=none, arrowtail=empty, dir=both];
EventAction2107708513 -> DateSelectorBackend2107708513[arrowhead=none, arrowtail=empty, dir=both];
EventAction2107708513 -> EventDetailBackend2107708513[arrowhead=none, arrowtail=empty, dir=both];
EventAction2107708513 -> ResourceLookupBackend2107708513[arrowhead=none, arrowtail=empty, dir=both];
EventAddSpecial2084304250 -> EventAddCourseRelated2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventAddUnavailable2084304250 -> Session629358305[label="permissionEventAddSpecial
[1]"];
EventContext1549462339 -> AbstractUserContext641976759[arrowhead=none];
EventContext1549462339 -> SimplePastOrOutside672799877[arrowhead=none];
EventContext1549462339 -> UserContextWrapper2054707704[arrowhead=none];
EventDate2084304250 -> _BaseRootDAO595338686[label="check() -> get()"];
EventDateMappingEdit1530278742 -> Session629358305[label="permissionSession
[1]"];
EventDateMappings1530278742 -> EventDateMapping629358305[label="check() -> hasMapping()"];
EventDateMappings1530278742 -> Session629358305[label="permissionEventDateMappingEdit
[1]"];
EventDateMappings1530278742 -> Session629358305[label="permissionSession
[1]"];
EventDefaults1542390228 -> Roles629358305[label="load() -> hasRight()"];
EventDefaults1542390228 -> TimetableManager629358305[label="load() -> findByExternalId()"];
EventDetail2084304250 -> Class_629358305[label="permissionClassDetail
[1]"];
EventDetail2084304250 -> Exam629358305[label="permissionExaminationDetail
[1]"];
EventDetailArrangeHourClass2084304250 -> Class_629358305[label="permissionClassDetail
[1]"];
EventDetailArrangeHourClass2084304250 -> Exam629358305[label="permissionExaminationDetail
[1]"];
EventDetailBackend2107708513 -> CalendarUtils1821660490[label="getEventDetail() -> date2dayOfYear()"];
EventDetailBackend2107708513 -> Constants1821660490[label="getEventDetail() -> getDayOfWeek()"];
EventDetailBackend2107708513 -> EventLookupBackend2107708513[label="getEventDetail() -> generateUnavailabilityMeetings()"];
EventDetailBackend2107708513 -> PreferenceGroup629358305[label="getArrangeHoursClassDetail() -> effectivePreferences()"];
EventDetailBackend2107708513 -> QueryEncoderBackend2107708513[label="getEventDetail() -> encode()"];
EventEdit2084304250 -> ClassEvent629358305[label="permissionEventEditClass
[1]"];
EventEdit2084304250 -> ExamEvent629358305[label="permissionEventEditExam
[1]"];
EventEdit2084304250 -> SimpleSessionPermission493742050[arrowhead=none];
EventEnrollmentsRpcRequest4669270 -> MeetingInterface4669270[label="iMeetings
[0..*]"];
EventEnrollmentsRpcRequest4669270 -> RelatedObjectInterface4669270[label="iRelatedObjects
[0..*]"];
EventImport876794133 -> BaseCourseEvent595338686[label="elementCourse() -> addTorelatedCourses()"];
EventImport876794133 -> ChangeLog629358305[label="loadXml() -> addChange()"];
EventImport876794133 -> EventContact629358305[label="elementEventContact() -> findByExternalUniqueId()"];
EventImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
EventImport876794133 -> TimeObject1060204932[label="elementMeeting() -> asMeeting()"];
EventInterface1000739671 -> AcademicSessionInterface759770151[arrowhead=none];
EventInterface1000739671 -> AssignClassInstructorsInterface1000739671[arrowhead=none];
EventInterface1000739671 -> AssignmentChangesResponse1591923739[arrowhead=none];
EventInterface1000739671 -> AttributeInterface1591923739[arrowhead=none];
EventInterface1000739671 -> AttributeTypeInterface1591923739[arrowhead=none];
EventInterface1000739671 -> BuildingInterface759770151[arrowhead=none];
EventInterface1000739671 -> BuildingsDataResponse759770151[arrowhead=none];
EventInterface1000739671 -> ChangeGradeModesResponse836856674[arrowhead=none];
EventInterface1000739671 -> ClassAssignmentDetails1582234977[arrowhead=none];
EventInterface1000739671 -> ClearHibernateCacheResponse427737907[arrowhead=none];
EventInterface1000739671 -> ContactInterface4669270[label="iAdditionalContacts
[0..*]"];
EventInterface1000739671 -> ContactInterface4669270[label="iContact
[0..1]"];
EventInterface1000739671 -> ContactInterface4669270[label="iCoordinators
[0..*]"];
EventInterface1000739671 -> ContactInterface4669270[label="iInstructors
[0..*]"];
EventInterface1000739671 -> CourseCreditFormatInterface1912414017[arrowhead=none];
EventInterface1000739671 -> CourseCreditTypeInterface1912414017[arrowhead=none];
EventInterface1000739671 -> CourseCreditUnitTypeInterface1912414017[arrowhead=none];
EventInterface1000739671 -> CourseDetail21643374[arrowhead=none];
EventInterface1000739671 -> CourseDetailsRpcResponse1382796139[arrowhead=none];
EventInterface1000739671 -> CourseOfferingCheckExistsInterface1912414017[arrowhead=none];
EventInterface1000739671 -> CourseOfferingConstantsInterface1912414017[arrowhead=none];
EventInterface1000739671 -> CourseOfferingInterface1000739671[arrowhead=none];
EventInterface1000739671 -> CourseOfferingPermissionsInterface1912414017[arrowhead=none];
EventInterface1000739671 -> CourseOfferingPropertiesInterface1912414017[arrowhead=none];
EventInterface1000739671 -> CourseTypeInterface1912414017[arrowhead=none];
EventInterface1000739671 -> DefaultExpirationDates788834012[arrowhead=none];
EventInterface1000739671 -> DepartmentInterface1000739671[arrowhead=none];
EventInterface1000739671 -> DepartmentPropertiesInterface1398617296[arrowhead=none];
EventInterface1000739671 -> DepartmentsDataResponse1398617296[arrowhead=none];
EventInterface1000739671 -> EncodeQueryRpcResponse4669270[arrowhead=none];
EventInterface1000739671 -> EventPropertiesRpcResponse4669270[arrowhead=none];
EventInterface1000739671 -> EventResourceTimetable531165846[label="getDateFlag() -> getDateFlag()", arrowhead=none];
EventInterface1000739671 -> EventRoomAvailability531165846[label="getDateFlag() -> getDateFlag()", arrowhead=none];
EventInterface1000739671 -> EventRoomAvailabilityRpcResponse4669270[arrowhead=none];
EventInterface1000739671 -> EventServiceProviderInterface4669270[label="iRequestedServices
[0..*]"];
EventInterface1000739671 -> ExamTypeInterface759770151[arrowhead=none];
EventInterface1000739671 -> ExaminationScheduleRpcResponse1123672665[arrowhead=none];
EventInterface1000739671 -> FeatureTypeInterface759770151[arrowhead=none];
EventInterface1000739671 -> FileUploadRpcResponse303420214[arrowhead=none];
EventInterface1000739671 -> Filter745105542[arrowhead=none];
EventInterface1000739671 -> FilterInterface1000739671[arrowhead=none];
EventInterface1000739671 -> FilterRpcResponse4669270[arrowhead=none];
EventInterface1000739671 -> FutureRoomInterface759770151[arrowhead=none];
EventInterface1000739671 -> GeocodeResponse759770151[arrowhead=none];
EventInterface1000739671 -> GetCourseOfferingResponse1912414017[arrowhead=none];
EventInterface1000739671 -> GetRequestsRpcResponse1458658222[arrowhead=none];
EventInterface1000739671 -> GwtRpcResponseBoolean1185371328[arrowhead=none];
EventInterface1000739671 -> GwtRpcResponseList1185371328[arrowhead=none];
EventInterface1000739671 -> GwtRpcResponseLong1185371328[arrowhead=none];
EventInterface1000739671 -> GwtRpcResponseNull1185371328[arrowhead=none];
EventInterface1000739671 -> HQLOptionsInterface1849130278[arrowhead=none];
EventInterface1000739671 -> InfoInterface1160801315[arrowhead=none];
EventInterface1000739671 -> InstructorAttributePropertiesInterface1591923739[arrowhead=none];
EventInterface1000739671 -> InstructorInfo1591923739[arrowhead=none];
EventInterface1000739671 -> InstructorInterface1912414017[arrowhead=none];
EventInterface1000739671 -> InstructorRequirementData21643374[arrowhead=none];
EventInterface1000739671 -> InstructorSurveyData21643374[arrowhead=none];
EventInterface1000739671 -> MapPropertiesInterface759770151[arrowhead=none];
EventInterface1000739671 -> MeetingInterface4669270[label="iMeetings
[0..*]"];
EventInterface1000739671 -> NoteInterface4669270[label="iNotes
[0..*]"];
EventInterface1000739671 -> OfferingConsentTypeInterface1912414017[arrowhead=none];
EventInterface1000739671 -> OverrideTypeInterface1912414017[arrowhead=none];
EventInterface1000739671 -> PITDParametersInterface1951770193[arrowhead=none];
EventInterface1000739671 -> PageName2051236629[arrowhead=none];
EventInterface1000739671 -> PageNameInterface1160801315[arrowhead=none];
EventInterface1000739671 -> PasswordChangeResponse1551131910[arrowhead=none];
EventInterface1000739671 -> PeriodPreferenceModel759770151[arrowhead=none];
EventInterface1000739671 -> PositionInterface1591923739[arrowhead=none];
EventInterface1000739671 -> Query1849130278[arrowhead=none];
EventInterface1000739671 -> QueueItemInterface15436791[arrowhead=none];
EventInterface1000739671 -> Record2051236629[arrowhead=none];
EventInterface1000739671 -> Record745105542[arrowhead=none];
EventInterface1000739671 -> RelatedObjectInterface4669270[label="iRelatedObjects
[0..*]"];
EventInterface1000739671 -> RelatedObjectLookupRpcResponse4669270[arrowhead=none];
EventInterface1000739671 -> Report1951770193[arrowhead=none];
EventInterface1000739671 -> ResponsibilityInterface1912414017[arrowhead=none];
EventInterface1000739671 -> RetrieveAvailableGradeModesResponse836856674[arrowhead=none];
EventInterface1000739671 -> RoomDetailInterface759770151[arrowhead=none];
EventInterface1000739671 -> RoomHintResponse759770151[arrowhead=none];
EventInterface1000739671 -> RoomPictureResponse759770151[arrowhead=none];
EventInterface1000739671 -> RoomPropertiesInterface759770151[arrowhead=none];
EventInterface1000739671 -> RoomPropertyInterface759770151[arrowhead=none];
EventInterface1000739671 -> RoomSharingModel759770151[arrowhead=none];
EventInterface1000739671 -> RoomTypeInterface759770151[arrowhead=none];
EventInterface1000739671 -> SaveOrApproveEventRpcResponse4669270[arrowhead=none];
EventInterface1000739671 -> ScriptInterface1000739671[arrowhead=none];
EventInterface1000739671 -> ScriptOptionsInterface15436791[arrowhead=none];
EventInterface1000739671 -> SectioningReportRpcResponse215558974[arrowhead=none];
EventInterface1000739671 -> SelectedAssignment1582234977[arrowhead=none];
EventInterface1000739671 -> ServerTimeZoneResponse258040539[arrowhead=none];
EventInterface1000739671 -> SimpleEditInterface1000739671[arrowhead=none];
EventInterface1000739671 -> SolutionLog366849455[arrowhead=none];
EventInterface1000739671 -> SolverAllocatedMemoryRpcResponse730357269[arrowhead=none];
EventInterface1000739671 -> SolverLogPageResponse366849455[arrowhead=none];
EventInterface1000739671 -> SolverPageMessages366849455[arrowhead=none];
EventInterface1000739671 -> SolverPageResponse366849455[arrowhead=none];
EventInterface1000739671 -> SolverReportsResponse926228794[arrowhead=none];
EventInterface1000739671 -> SponsoringOrganizationInterface4669270[label="iSponsor
[0..1]"];
EventInterface1000739671 -> SubjectAreaInterface1912414017[arrowhead=none];
EventInterface1000739671 -> Suggestion1582234977[arrowhead=none];
EventInterface1000739671 -> SuggestionProperties1582234977[arrowhead=none];
EventInterface1000739671 -> Suggestions1582234977[arrowhead=none];
EventInterface1000739671 -> SuggestionsResponse1591923739[arrowhead=none];
EventInterface1000739671 -> Table1951770193[arrowhead=none];
EventInterface1000739671 -> TableInterface1000739671[arrowhead=none];
EventInterface1000739671 -> TaskExecutionLogInterface160962237[arrowhead=none];
EventInterface1000739671 -> TaskInterface1000739671[arrowhead=none];
EventInterface1000739671 -> TaskOptionsInterface160962237[arrowhead=none];
EventInterface1000739671 -> TeachingRequestInfo1591923739[arrowhead=none];
EventInterface1000739671 -> TeachingRequestsPagePropertiesResponse1591923739[arrowhead=none];
EventInterface1000739671 -> TimeHintResponse1640483035[arrowhead=none];
EventInterface1000739671 -> TimetableGridFilterResponse602157687[arrowhead=none];
EventInterface1000739671 -> TimetableGridInterface1000739671[arrowhead=none];
EventInterface1000739671 -> TimetableGridResponse602157687[arrowhead=none];
EventInterface1000739671 -> TravelTimeResponse1687807301[arrowhead=none];
EventInterface1000739671 -> UserDataInterface1000739671[arrowhead=none];
EventInterface1000739671 -> VersionInfoInterface1160801315[arrowhead=none];
EventInterface1000739671 -> WaitListInterface1912414017[arrowhead=none];
EventLocationApprove2084304250 -> Location629358305[label="permissionEventLocation
[1]"];
EventLocationOverbook2084304250 -> Location629358305[label="permissionEventLocation
[1]"];
EventLocationUnavailable2084304250 -> Location629358305[label="permissionEventLocation
[1]"];
EventLocationUnavailable2084304250 -> SimpleDepartmentPermission493742050[arrowhead=none];
EventLookupRpcRequest4669270 -> EventFilterRpcRequest4669270[label="iEventFilter
[0..1]"];
EventLookupRpcRequest4669270 -> RoomFilterRpcRequest4669270[label="iRoomFilter
[0..1]"];
EventMeetingApprove2084304250 -> Location629358305[label="permissionEventLocationApprove
[1]"];
EventMeetingApprove2084304250 -> _BaseRootDAO595338686[label="check() -> get()"];
EventMeetingCancel2084304250 -> Location629358305[label="permissionEventLocationApprove
[1]"];
EventMeetingCancelClass2084304250 -> _BaseRootDAO595338686[label="check() -> get()"];
EventMeetingCancelExam2084304250 -> _BaseRootDAO595338686[label="check() -> get()"];
EventMeetingDelete2084304250 -> Location629358305[label="permissionEventLocation
[1]"];
EventMeetingEdit2084304250 -> Event629358305[label="permissionEventEdit
[1]"];
EventMeetingEdit2084304250 -> Location629358305[label="permissionEventLocation
[1]"];
EventMeetingInquire2084304250 -> Location629358305[label="permissionEventLocation
[1]"];
EventMeetingInquire2084304250 -> _BaseRootDAO595338686[label="check() -> get()"];
EventMeetingInquireClass2084304250 -> _BaseRootDAO595338686[label="check() -> get()"];
EventMeetingInquireExam2084304250 -> _BaseRootDAO595338686[label="check() -> get()"];
EventPermission2084304250 -> EventAddSpecial2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventAddUnavailable2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventDate2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventEdit2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventEditClass2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventEditExam2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventLocation2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventLocationApprove2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventLocationOverbook2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventLocationUnavailable2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventMeetingApprove2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventMeetingCancel2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventMeetingCancelClass2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventMeetingCancelExam2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventMeetingDelete2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventMeetingEdit2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventMeetingInquire2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventMeetingInquireClass2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> EventMeetingInquireExam2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> Events2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventPermission2084304250 -> _BaseRootDAO595338686[label="locations() -> get()"];
EventRelatedImports876794133 -> BaseCourseOfferingImport876794133[arrowhead=none, arrowtail=empty, dir=both];
EventRelatedImports876794133 -> EventImport876794133[arrowhead=none, arrowtail=empty, dir=both];
EventRelatedImports876794133 -> PointInTimeDataImport876794133[arrowhead=none, arrowtail=empty, dir=both];
EventRoomAvailability531165846 -> AcademicSession918787286[label="accept() -> has()"];
EventRoomAvailability531165846 -> AcademicSessionSelectionBox531165846[label="iSession
[0..1]"];
EventRoomAvailability531165846 -> Client546593469[label="changeUrl() -> fireGwtPageChanged()"];
EventRoomAvailability531165846 -> EventAdd531165846[arrowhead=none];
EventRoomAvailability531165846 -> EventDetail531165846[label="iEventDetail
[0..1]"];
EventRoomAvailability531165846 -> EventInterface1000739671[label="iData
[0..*]"];
EventRoomAvailability531165846 -> EventLookupRpcRequest4669270[label="reload() -> findEvents()"];
EventRoomAvailability531165846 -> EventPropertiesRpcRequest4669270[label="loadProperties() -> requestEventProperties()"];
EventRoomAvailability531165846 -> EventPropertiesRpcResponse4669270[label="iProperties
[0..1]"];
EventRoomAvailability531165846 -> EventResourceTimetable531165846[arrowhead=none];
EventRoomAvailability531165846 -> HistoryToken1428779613[label="iHistoryToken
[0..1]"];
EventRoomAvailability531165846 -> ResourceInterface4669270[label="iSelectedRooms
[0..*]"];
EventRoomAvailability531165846 -> RoomFilterBox531165846[label="iRooms
[0..1]"];
EventRoomAvailability531165846 -> SessionDatesSelector531165846[label="iDates
[0..1]"];
EventRoomAvailability531165846 -> SessionMonth4669270[label="iSessionMonths
[0..*]"];
EventRoomAvailability531165846 -> SimpleForm864400258[label="iFilter
[0..1]"];
EventRoomAvailability531165846 -> SimpleForm864400258[label="iPanel
[0..1]"];
EventRoomAvailability531165846 -> SingleDateSelector531165846[label="populate() -> firstDayOfWeek()"];
EventRoomAvailability531165846 -> StartEndTime183175081[label="iSelectedTimes
[0..1]"];
EventRoomAvailability531165846 -> StartEndTimeSelector531165846[label="iTimes
[0..1]"];
EventRoomAvailability531165846 -> UniTimeHeaderPanel864400258[label="iFilterHeader
[0..1]"];
EventRoomAvailability531165846 -> UniTimeHeaderPanel864400258[label="iFooter
[0..1]"];
EventRoomAvailability531165846 -> UniTimeHeaderPanel864400258[label="iHeader
[0..1]"];
EventRoomAvailability531165846 -> WeekInterface4669270[label="populate() -> addDayName()"];
EventRoomAvailabilityRpcRequest4669270 -> Entity1499974154[label="checkAvailability() -> getProperty()"];
EventRoomAvailabilityRpcRequest4669270 -> MeetingInterface4669270[label="iMeetings
[0..*]"];
EventRoomAvailabilityRpcResponse4669270 -> MeetingConflictInterface4669270[label="iOverlaps
[0..*]"];
EventRoomAvailabilityRpcResponse4669270 -> MeetingInterface4669270[label="iMeetings
[0..*]"];
EventRpcRequest4669270 -> AssignedClassesFilterRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> AssignedClassesRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> AssignmentChangesRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> AssignmentHistoryFilterRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> AssignmentHistoryRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> BuildingCheckCanDeleteRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> ChangeGradeModesRequest836856674[arrowhead=none];
EventRpcRequest4669270 -> ClassAssignmentDetailsRequest1582234977[arrowhead=none];
EventRpcRequest4669270 -> ClearHibernateCacheRequest427737907[arrowhead=none];
EventRpcRequest4669270 -> ComputeConflictTableRequest1582234977[arrowhead=none];
EventRpcRequest4669270 -> ComputeSuggestionsRequest1582234977[arrowhead=none];
EventRpcRequest4669270 -> ComputeSuggestionsRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> ConflictBasedStatisticsRequest1582234977[arrowhead=none];
EventRpcRequest4669270 -> ConflictStatisticsFilterRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> CourseDetailsRpcRequest1382796139[arrowhead=none];
EventRpcRequest4669270 -> CourseOfferingCheckExists1912414017[arrowhead=none];
EventRpcRequest4669270 -> CourseOfferingCheckPermissions1912414017[arrowhead=none];
EventRpcRequest4669270 -> CourseOfferingConstantsRequest1912414017[arrowhead=none];
EventRpcRequest4669270 -> CourseOfferingPropertiesRequest1912414017[arrowhead=none];
EventRpcRequest4669270 -> DeleteScriptRpcRequest15436791[arrowhead=none];
EventRpcRequest4669270 -> DeleteTaskDetailsRpcRequest160962237[arrowhead=none];
EventRpcRequest4669270 -> DepartmentPropertiesRequest1398617296[arrowhead=none];
EventRpcRequest4669270 -> EncodeQueryRpcRequest4669270[arrowhead=none];
EventRpcRequest4669270 -> EventDetailRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
EventRpcRequest4669270 -> EventEnrollmentsRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
EventRpcRequest4669270 -> EventLookupRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
EventRpcRequest4669270 -> EventPropertiesRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
EventRpcRequest4669270 -> EventRoomAvailabilityRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
EventRpcRequest4669270 -> ExaminationEnrollmentsRpcRequest1123672665[arrowhead=none];
EventRpcRequest4669270 -> ExaminationScheduleRpcRequest1123672665[arrowhead=none];
EventRpcRequest4669270 -> ExecuteScriptRpcRequest15436791[arrowhead=none];
EventRpcRequest4669270 -> FileUploadRpcRequest303420214[arrowhead=none];
EventRpcRequest4669270 -> FilterRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
EventRpcRequest4669270 -> GeocodeRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> GetBuildingsRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> GetCourseOfferingRequest1912414017[arrowhead=none];
EventRpcRequest4669270 -> GetDepartmentsRequest1398617296[arrowhead=none];
EventRpcRequest4669270 -> GetFilterRpcRequest745105542[arrowhead=none];
EventRpcRequest4669270 -> GetInstructorAttributeParentsRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> GetInstructorAttributesRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> GetInstructorsRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> GetPageNameRpcRequest2051236629[arrowhead=none];
EventRpcRequest4669270 -> GetQueueTableRpcRequest15436791[arrowhead=none];
EventRpcRequest4669270 -> GetRequestsRpcRequest1458658222[arrowhead=none];
EventRpcRequest4669270 -> GetRoomsOfABuildingRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> GetScriptOptionsRpcRequest15436791[arrowhead=none];
EventRpcRequest4669270 -> GetTaskExecutionLogRpcRequest160962237[arrowhead=none];
EventRpcRequest4669270 -> GetTaskOptionsRpcRequest160962237[arrowhead=none];
EventRpcRequest4669270 -> GetTasksRpcRequest160962237[arrowhead=none];
EventRpcRequest4669270 -> GetUserDataRpcRequest1044312147[arrowhead=none];
EventRpcRequest4669270 -> HQLDeleteRpcRequest1849130278[arrowhead=none];
EventRpcRequest4669270 -> HQLExecuteRpcRequest1849130278[arrowhead=none];
EventRpcRequest4669270 -> HQLOptionsRpcRequest1849130278[arrowhead=none];
EventRpcRequest4669270 -> HQLQueriesRpcRequest1849130278[arrowhead=none];
EventRpcRequest4669270 -> HQLSetBackRpcRequest1849130278[arrowhead=none];
EventRpcRequest4669270 -> HQLStoreRpcRequest1849130278[arrowhead=none];
EventRpcRequest4669270 -> InstructorAssignmentRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> InstructorAttributePropertiesRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> InstructorAvailabilityRequest65396580[arrowhead=none];
EventRpcRequest4669270 -> InstructorRequirementsRequest21643374[arrowhead=none];
EventRpcRequest4669270 -> InstructorSurveyApplyRequest21643374[arrowhead=none];
EventRpcRequest4669270 -> InstructorSurveyCopyRequest21643374[arrowhead=none];
EventRpcRequest4669270 -> InstructorSurveyRequest21643374[arrowhead=none];
EventRpcRequest4669270 -> InstructorSurveySaveRequest21643374[arrowhead=none];
EventRpcRequest4669270 -> IsSessionBusyRpcRequest1160801315[arrowhead=none];
EventRpcRequest4669270 -> LastChangesRequest524416317[arrowhead=none];
EventRpcRequest4669270 -> ListAcademicClassifications21643374[arrowhead=none];
EventRpcRequest4669270 -> ListAcademicSessions918787286[arrowhead=none];
EventRpcRequest4669270 -> ListClasses21643374[arrowhead=none];
EventRpcRequest4669270 -> ListCourseOfferings21643374[arrowhead=none];
EventRpcRequest4669270 -> ListCurricula21643374[arrowhead=none];
EventRpcRequest4669270 -> ListSolutionsRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> LoadAllScriptsRpcRequest15436791[arrowhead=none];
EventRpcRequest4669270 -> LoadDataRpcRequest2051236629[arrowhead=none];
EventRpcRequest4669270 -> LoadRecordRpcRequest745105542[arrowhead=none];
EventRpcRequest4669270 -> LookupRequest1251476307[arrowhead=none];
EventRpcRequest4669270 -> MakeAssignmentRequest1582234977[arrowhead=none];
EventRpcRequest4669270 -> MapPropertiesRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> MenuRpcRequest1160801315[arrowhead=none];
EventRpcRequest4669270 -> NotAssignedClassesFilterRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> NotAssignedClassesRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> PITDDeleteRpcRequest1951770193[arrowhead=none];
EventRpcRequest4669270 -> PITDExecuteRpcRequest1951770193[arrowhead=none];
EventRpcRequest4669270 -> PITDParametersRpcRequest1951770193[arrowhead=none];
EventRpcRequest4669270 -> PITDQueriesRpcRequest1951770193[arrowhead=none];
EventRpcRequest4669270 -> PITDSetBackRpcRequest1951770193[arrowhead=none];
EventRpcRequest4669270 -> PITDStoreRpcRequest1951770193[arrowhead=none];
EventRpcRequest4669270 -> PageNameRpcRequest1160801315[arrowhead=none];
EventRpcRequest4669270 -> PasswordChangeRequest1551131910[arrowhead=none];
EventRpcRequest4669270 -> PeriodPreferenceRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> PublishedSectioningSolutionsRequest1509627884[arrowhead=none];
EventRpcRequest4669270 -> RelatedObjectLookupRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
EventRpcRequest4669270 -> RemoveAllClassInstructorsDataRpcRequest2051236629[arrowhead=none];
EventRpcRequest4669270 -> RequestSessionDetails4669270[arrowhead=none, arrowtail=empty, dir=both];
EventRpcRequest4669270 -> ReservationDefaultExpirationDatesRpcRequest788834012[arrowhead=none];
EventRpcRequest4669270 -> ResourceLookupRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
EventRpcRequest4669270 -> RetrieveAvailableGradeModesRequest836856674[arrowhead=none];
EventRpcRequest4669270 -> RetrieveCourseDetail21643374[arrowhead=none];
EventRpcRequest4669270 -> RoomDetailsRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> RoomHintRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> RoomPictureRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> RoomPropertiesRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> RoomSharingRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> RoomUpdateRpcRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> SaveDataGoToNextRpcRequest2051236629[arrowhead=none];
EventRpcRequest4669270 -> SaveDataGoToPreviousRpcRequest2051236629[arrowhead=none];
EventRpcRequest4669270 -> SaveDataRpcRequest2051236629[arrowhead=none];
EventRpcRequest4669270 -> SaveFilterDefaultRpcRequest4669270[arrowhead=none];
EventRpcRequest4669270 -> SaveOrApproveEventRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
EventRpcRequest4669270 -> SaveOrUpdateScriptRpcRequest15436791[arrowhead=none];
EventRpcRequest4669270 -> SaveRecordRpcRequest745105542[arrowhead=none];
EventRpcRequest4669270 -> SaveRequestsRpcRequest1458658222[arrowhead=none];
EventRpcRequest4669270 -> SaveTaskDetailsRpcRequest160962237[arrowhead=none];
EventRpcRequest4669270 -> SearchRoomFeaturesRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> SearchRoomGroupsRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> SectioningReportRpcRequest215558974[arrowhead=none];
EventRpcRequest4669270 -> SectioningReportTypesRpcRequest215558974[arrowhead=none];
EventRpcRequest4669270 -> SelectedAssignmentsRequest1582234977[arrowhead=none];
EventRpcRequest4669270 -> SendStudentEmailsRpcRequest4669270[arrowhead=none];
EventRpcRequest4669270 -> ServerTimeZoneRequest258040539[arrowhead=none];
EventRpcRequest4669270 -> SessionInfoRpcRequest1160801315[arrowhead=none];
EventRpcRequest4669270 -> SetLastDepartmentRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> SetUserDataRpcRequest1044312147[arrowhead=none];
EventRpcRequest4669270 -> SolutionChangesFilterRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> SolutionChangesRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> SolverAllocatedMemoryRpcRequest730357269[arrowhead=none];
EventRpcRequest4669270 -> SolverInfoRpcRequest1160801315[arrowhead=none];
EventRpcRequest4669270 -> SolverLogPageRequest366849455[arrowhead=none];
EventRpcRequest4669270 -> SolverPageMessagesRequest366849455[arrowhead=none];
EventRpcRequest4669270 -> SolverPageRequest366849455[arrowhead=none];
EventRpcRequest4669270 -> SolverReportsRequest926228794[arrowhead=none];
EventRpcRequest4669270 -> SuggestionPropertiesRequest1582234977[arrowhead=none];
EventRpcRequest4669270 -> SuggestionRpcRequest1374338342[arrowhead=none];
EventRpcRequest4669270 -> TeachingAssignmentsDetailRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> TeachingAssignmentsPageRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> TeachingRequestDetailRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> TeachingRequestsPagePropertiesRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> TeachingRequestsPageRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> TimeHintRequest1640483035[arrowhead=none];
EventRpcRequest4669270 -> TimetableGridFilterRequest602157687[arrowhead=none];
EventRpcRequest4669270 -> TimetableGridRequest602157687[arrowhead=none];
EventRpcRequest4669270 -> TravelTimesRequest1687807301[arrowhead=none];
EventRpcRequest4669270 -> UpdateBuildingRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> UpdateCourseOfferingRequest1912414017[arrowhead=none];
EventRpcRequest4669270 -> UpdateDepartmentRequest1559014573[arrowhead=none];
EventRpcRequest4669270 -> UpdateInstructorAttributeRequest1591923739[arrowhead=none];
EventRpcRequest4669270 -> UpdateRoomDepartmentsRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> UpdateRoomFeatureRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> UpdateRoomGroupRequest759770151[arrowhead=none];
EventRpcRequest4669270 -> UserInfoRpcRequest1160801315[arrowhead=none];
EventRpcRequest4669270 -> VersionInfoRpcRequest1160801315[arrowhead=none];
EventRpcRequest4669270 -> WeekSelectorRequest1469860989[arrowhead=none];
EventSendStudentEmailsBackend2107708513 -> Student629358305[label="execute() -> getName()"];
EventSendStudentEmailsBackend2107708513 -> _BaseRootDAO595338686[label="execute() -> get()"];
EventStatuses1530278742 -> Department629358305[label="permissionDepartment
[1]"];
EventStatuses1530278742 -> EventStatusEdit1530278742[arrowhead=none, arrowtail=empty, dir=both];
EventStatuses1542390228 -> EventServiceProvider629358305[label="load() -> getServiceProviders()"];
EventStatuses1542390228 -> _BaseRootDAO595338686[label="update() -> get()"];
Events2084304250 -> DepartmentStatusType629358305[label="check() -> canNoRoleReport()"];
Events2084304250 -> EventDetailEmailStudents2084304250[arrowhead=none, arrowtail=empty, dir=both];
EventsConnector537604450 -> ApproveEventRpcRequest4669270[label="doPost() -> addMeeting()"];
EventsConnector537604450 -> Constants1821660490[label="doPost() -> getDayOfWeek()"];
EventsConnector537604450 -> EventDetailBackend2107708513[label="doGet() -> execute()"];
EventsConnector537604450 -> EventLookupBackend2107708513[label="doGet() -> findEvents()"];
EventsConnector537604450 -> Location629358305[label="doPost() -> findByName()"];
EventsConnector537604450 -> ResourceLookupBackend2107708513[label="doGet() -> findResource()"];
Exam629358305 -> EventContact629358305[label="assign() -> findByExternalUniqueId()"];
Exam629358305 -> ExamEvent629358305[label="iEvent
[0..1]"];
Exam629358305 -> ExamRoomInfo70241488[label="assign() -> getLocation()"];
ExamInfo1304083885 -> ExamOwnerInfo1304083885[label="iOwners
[0..*]"];
ExamInfo1304083885 -> PeriodInfo1304083885[label="iPeriod
[0..1]"];
ExamInfo1304083885 -> RoomInfo1304083885[label="iRoom
[0..*]"];
ExamInfo70241488 -> Exam629358305[label="iExam
[0..1]"];
ExamInfo70241488 -> ExamAssignment70241488[arrowhead=none, arrowtail=empty, dir=both];
ExamInfo70241488 -> ExamInstructorInfo653254005[label="iInstructors
[0..*]"];
ExamInfo70241488 -> ExamSectionInfo653254005[label="iSections
[0..*]"];
ExamInfo70241488 -> ExamSectionInfo653254005[label="iSectionsIncludeCrosslistedDummies
[0..*]"];
ExamInfo70241488 -> ExamType629358305[label="iExamType
[0..1]"];
ExamInfo70241488 -> _BaseRootDAO595338686[label="getExam() -> get()"];
ExamOwner629358305 -> ApplicationProperties1829907366[label="genName() -> getProperty()"];
ExamOwner629358305 -> ClassComparator1628636464[label="compareTo() -> compare()"];
ExamOwner629358305 -> InstrOfferingConfigComparator1628636464[label="compareTo() -> compare()"];
ExamPeriod629358305 -> DummyTimeBlock1833438055[arrowhead=none];
ExamPeriod629358305 -> EventTimeBlock1487510725[arrowhead=none];
ExamPeriod629358305 -> ExamType629358305[label="compareTo() -> compareTo()"];
ExamPeriod629358305 -> MeetingTimeBlock1202051522[arrowhead=none];
ExamPeriod629358305 -> UnavailableDay1136156345[arrowhead=none];
ExamRoomInfo70241488 -> Location629358305[label="iLocation
[0..1]"];
ExamRoomInfo70241488 -> _BaseRootDAO595338686[label="getLocation() -> get()"];
ExaminationDistributionPreferenceDetail1474622403 -> Exam629358305[label="permissionExaminationDetail
[1]"];
ExaminationDistributionPreferenceEdit1474622403 -> Exam629358305[label="permissionExaminationEdit
[1]"];
ExaminationDistributionPreferenceEdit1474622403 -> ExaminationDistributionPreferenceDelete1474622403[arrowhead=none, arrowtail=empty, dir=both];
ExaminationEnrollmentsBackend1538111727 -> EventEnrollmentsBackend2107708513[label="execute() -> convert()"];
ExaminationEnrollmentsBackend1538111727 -> Formats1821660490[label="execute() -> getDateFormat()"];
ExaminationEnrollmentsBackend1538111727 -> _BaseRootDAO595338686[label="execute() -> get()"];
ExaminationPdfReports1066428263 -> ExamType629358305[label="check() -> findAllUsed()"];
ExaminationPdfReports1066428263 -> SubjectArea629358305[label="check() -> getUserSubjectAreas()"];
ExaminationScheduleBackend1538111727 -> Class_629358305[label="execute() -> getSectionNumberString()"];
ExaminationScheduleBackend1538111727 -> Exam629358305[label="execute() -> generateName()"];
ExaminationScheduleBackend1538111727 -> ExaminationScheduleRpcResponse1123672665[label="execute() -> addExam()"];
ExaminationScheduleBackend1538111727 -> _BaseRootDAO595338686[label="execute() -> get()"];
ExaminationScheduleRpcResponse1123672665 -> RelatedObjectInterface4669270[label="iExams
[0..*]"];
ExaminationSolver1066428263 -> ExaminationSolutionExportXml1066428263[arrowhead=none, arrowtail=empty, dir=both];
ExaminationSolverContainer398558421 -> ExaminationSolverContainerRemote398558421[arrowhead=none, arrowtail=empty, dir=both];
ExaminationSolverContainerRemote398558421 -> _BaseRootDAO595338686[label="invoke() -> closeCurrentThreadSessions()"];
ExaminationSolverService1058021598 -> ApplicationProperties1829907366[label="createConfig() -> getProperty()"];
ExaminationSolverService1058021598 -> SolverServerService1058021598[label="solverServerService
[1]"];
ExaminationSolverService1058021598 -> _BaseRootDAO595338686[label="createConfig() -> get()"];
ExaminationStatuses1542390228 -> ChangeLog629358305[label="update() -> addChange()"];
ExaminationStatuses1542390228 -> DepartmentStatusType629358305[label="load() -> findAll()"];
ExaminationTimetabling1066428263 -> AssignedExaminations1066428263[arrowhead=none, arrowtail=empty, dir=both];
ExaminationTimetabling1066428263 -> ExaminationAssignmentChanges1066428263[arrowhead=none, arrowtail=empty, dir=both];
ExaminationTimetabling1066428263 -> ExaminationConflictStatistics1066428263[arrowhead=none, arrowtail=empty, dir=both];
ExaminationTimetabling1066428263 -> ExaminationReports1066428263[arrowhead=none, arrowtail=empty, dir=both];
ExaminationTimetabling1066428263 -> ExaminationSolver1066428263[arrowhead=none, arrowtail=empty, dir=both];
ExaminationTimetabling1066428263 -> ExaminationSolverLog1066428263[arrowhead=none, arrowtail=empty, dir=both];
ExaminationTimetabling1066428263 -> ExaminationTimetable1066428263[arrowhead=none, arrowtail=empty, dir=both];
ExaminationTimetabling1066428263 -> NotAssignedExaminations1066428263[arrowhead=none, arrowtail=empty, dir=both];
Examinations1474622403 -> ExamType629358305[label="check() -> findAllUsed()"];
Examinations1474622403 -> ExaminationDistributionPreferences1474622403[arrowhead=none, arrowtail=empty, dir=both];
Examinations1474622403 -> SubjectArea629358305[label="check() -> getUserSubjectAreas()"];
ExecuteScriptBackend54906482 -> GetQueueTableBackend54906482[label="execute() -> convert()"];
ExecuteScriptBackend54906482 -> SolverServerService1058021598[label="solverServerService
[1]"];
Execution515422738 -> Formats1821660490[label="run() -> removeFormats()"];
Execution515422738 -> GwtRpcException1185371328[label="iException
[0..1]"];
Execution515422738 -> Localization779599398[label="run() -> removeLocale()"];
Execution515422738 -> _BaseRootDAO595338686[label="run() -> closeCurrentThreadSessions()"];
Execution515422738 -> noqualifiedname1905501234[label="iRequest
[0..1]"];
Execution515422738 -> noqualifiedname1905501234[label="iResponse
[0..1]"];
Filter745105542 -> Field745105542[label="iFields
[0..*]"];
Filter745105542 -> Record745105542[label="iDefaultValue
[0..1]"];
FilterBoxBackend1801756021 -> CurriculumFilterBackend1074656955[arrowhead=none, arrowtail=empty, dir=both];
FilterBoxBackend1801756021 -> ReservationFilterBackend847111401[arrowhead=none, arrowtail=empty, dir=both];
FilterBoxBackend1801756021 -> SuggestionsFilterBackend43990826[arrowhead=none, arrowtail=empty, dir=both];
FilterBoxBackend1801756021 -> TeachingRequestsFilterBackend1334400992[arrowhead=none, arrowtail=empty, dir=both];
FilterInterface1000739671 -> AssignedClassesFilterResponse926228794[arrowhead=none, arrowtail=empty, dir=both];
FilterInterface1000739671 -> TimetableGridFilterResponse602157687[arrowhead=none, arrowtail=empty, dir=both];
FilterParameterInterface723731434 -> ListItem723731434[label="iOptions
[0..*]"];
FilterRpcRequest4669270 -> CurriculumFilterRpcRequest1351995911[arrowhead=none, arrowtail=empty, dir=both];
FilterRpcRequest4669270 -> EventFilterRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
FilterRpcRequest4669270 -> ReservationFilterRpcRequest788834012[arrowhead=none, arrowtail=empty, dir=both];
FilterRpcRequest4669270 -> RoomFilterRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
FilterRpcRequest4669270 -> SectioningStatusFilterRpcRequest1440491676[arrowhead=none, arrowtail=empty, dir=both];
FilterRpcRequest4669270 -> SuggestionsFilterRpcRequest1582234977[arrowhead=none, arrowtail=empty, dir=both];
FilterRpcRequest4669270 -> TeachingRequestsFilterRpcRequest1591923739[arrowhead=none, arrowtail=empty, dir=both];
FilterRpcResponse4669270 -> Entity1499974154[label="iEntities
[0..*]"];
GetBuidlingsDataBackend1526360619 -> Building629358305[label="execute() -> findAll()"];
GetBuidlingsDataBackend1526360619 -> BuildingsDataResponse759770151[label="execute() -> addBuilding()"];
GetCourseOfferingBackend1624300373 -> CourseCreditUnitConfig629358305[label="execute() -> creditText()"];
GetCourseOfferingBackend1624300373 -> CourseOffering629358305[label="execute() -> findByUniqueId()"];
GetCourseOfferingBackend1624300373 -> Localization779599398[label="execute() -> getDateFormat()"];
GetCourseOfferingResponse1912414017 -> CourseOfferingInterface1000739671[label="iCourseOffering
[0..1]"];
GetDepartmentsDataBackend1360869250 -> ChangeLog629358305[label="lastChangeStr() -> findLastNChanges()"];
GetDepartmentsDataBackend1360869250 -> DepartmentsDataResponse1398617296[label="execute() -> addDepartment()"];
GetFilterBackend330628327 -> AdminBackend1542390228[label="execute() -> getTable()"];
GetInstructorAttributeParentsBackend1334400992 -> InstructorAttribute629358305[label="execute() -> isParentOf()"];
GetInstructorAttributeParentsBackend1334400992 -> _BaseRootDAO595338686[label="execute() -> get()"];
GetInstructorAttributesBackend1334400992 -> AttributeInterface1591923739[label="execute() -> addInstructor()"];
GetInstructorAttributesBackend1334400992 -> DepartmentalInstructor629358305[label="execute() -> nameLastNameFirst()"];
GetInstructorsBackend1334400992 -> DepartmentalInstructor629358305[label="execute() -> nameLastNameFirst()"];
GetInstructorsBackend1334400992 -> InstructorInterface1000739671[label="execute() -> addAttribute()"];
GetQueueTableBackend54906482 -> SolverServerService1058021598[label="solverServerService
[1]"];
GetRequestsRpcResponse1458658222 -> Request1458658222[label="iRequests
[0..*]"];
GetTaskExecutionLogBackend54906482 -> LocalQueueProcessor1094993043[arrowhead=none];
GetTaskExecutionLogBackend54906482 -> QueueMessage1094993043[label="execute() -> toHTML()"];
GetTaskExecutionLogBackend54906482 -> SolverServerService1058021598[label="solverServerService
[1]"];
GetTaskExecutionLogBackend54906482 -> TaskExecutionItem54906482[label="execute() -> createGson()"];
GetTaskExecutionLogBackend54906482 -> _BaseRootDAO595338686[label="execute() -> get()"];
GetTasksBackend54906482 -> CalendarUtils1821660490[label="getTask() -> date2dayOfYear()"];
GetTasksBackend54906482 -> Constants1821660490[label="getTask() -> getDayOfWeek()"];
GetTasksBackend54906482 -> LoadAllScriptsBackend54906482[label="getTask() -> load()"];
GetTasksBackend54906482 -> Session629358305[label="getTask() -> getDate()"];
GetTasksBackend54906482 -> TaskInterface1000739671[label="getTask() -> addExecution()"];
GetTasksBackend54906482 -> TimetableManager629358305[label="getTask() -> getName()"];
GetTeachingRequestBackend1334400992 -> DepartmentalInstructor629358305[label="execute() -> nameLastNameFirst()"];
GetTeachingRequestBackend1334400992 -> ReservationServlet998479413[label="execute() -> convert()"];
GetTeachingRequestBackend1334400992 -> SingleRequest1458658222[label="execute() -> addClass()"];
GetTeachingRequestBackend1334400992 -> _BaseRootDAO595338686[label="execute() -> get()"];
GlobalRoomFeature629358305 -> RoomFeature629358305[label="featureWithSisReference() -> getAllGlobalRoomFeatures()"];
GlobalRoomFeatureEdit82359199 -> GlobalRoomFeatureDelete82359199[arrowhead=none, arrowtail=empty, dir=both];
GlobalRoomGroupEdit82359199 -> GlobalRoomGroupDelete82359199[arrowhead=none, arrowtail=empty, dir=both];
GlobalRoomGroupEdit82359199 -> GlobalRoomGroupEditSetDefault82359199[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcException1185371328 -> CourseOfferingException1000739671[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcException1185371328 -> CurriculaException1000739671[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcException1185371328 -> GwtRpcCancelledException1185371328[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcException1185371328 -> LimitAndProjectionSnapshotException1000739671[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcException1185371328 -> PageAccessException1000739671[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcException1185371328 -> PointInTimeDataReportsException1000739671[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcException1185371328 -> ReservationException1000739671[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcException1185371328 -> RoomException759770151[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcException1185371328 -> SavedHQLException1000739671[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcException1185371328 -> SectioningException1000739671[arrowhead=none, arrowtail=empty, dir=both];
GwtRpcHelper1637257272 -> UniTimePermissionCheck944572514[arrowhead=none];
GwtRpcServlet1637257272 -> Saver1944833282[label="iSaver
[0..1]"];
HQLDeleteBackend1003987616 -> _BaseRootDAO595338686[label="execute() -> get()"];
HQLExecuteBackend1003987616 -> SavedHqlExportToCSV1255872879[label="execute() -> execute()"];
HQLExecuteBackend1003987616 -> _BaseRootDAO595338686[label="execute() -> get()"];
HQLExecuteRpcRequest1849130278 -> IdValue1849130278[label="iOptions
[0..*]"];
HQLExecuteRpcRequest1849130278 -> Query1849130278[label="iQuery
[0..1]"];
HQLOptionsInterface1849130278 -> Flag1849130278[label="iFlags
[0..*]"];
HQLOptionsInterface1849130278 -> Option1849130278[label="iOptions
[0..*]"];
HQLQueriesBackend1003987616 -> LearningManagementSystemInfo629358305[label="execute() -> findAll()"];
HQLQueriesBackend1003987616 -> Query1849130278[label="execute() -> addParameter()"];
HQLQueriesBackend1003987616 -> SavedHQL629358305[label="execute() -> listAll()"];
HQLQueriesBackend1003987616 -> StudentSectioningStatus629358305[label="execute() -> findAll()"];
HQLReportEdit1530278742 -> HQLReportDelete1530278742[arrowhead=none, arrowtail=empty, dir=both];
HQLReportEdit1530278742 -> SavedHQL629358305[label="check() -> isSet()"];
HQLSetBackBackend1003987616 -> BackTracker779606258[label="execute() -> markForBack()"];
HQLStoreBackend1003987616 -> _BaseRootDAO595338686[label="execute() -> get()"];
HibernateUtil2052906881 -> DatabaseUpdate2052906881[label="configureHibernate() -> update()"];
Hint624236337 -> AssignmentPreferenceInfo1605871111[label="iInfo
[0..1]"];
Hint624236337 -> ClassAssignmentDetails624236337[label="iDetails
[0..1]"];
HttpSessionContext641976759 -> CustomExportContext814171373[arrowhead=none, arrowtail=empty, dir=both];
InfoInterface1160801315 -> InfoPairInterface1160801315[label="iPairs
[0..*]"];
InfoInterface1160801315 -> SessionInfoInterface1160801315[arrowhead=none, arrowtail=empty, dir=both];
InfoInterface1160801315 -> SolverInfoInterface1160801315[arrowhead=none, arrowtail=empty, dir=both];
InfoInterface1160801315 -> UserInfoInterface1160801315[arrowhead=none, arrowtail=empty, dir=both];
InstrOfferingConfigAdd317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
InstrOfferingConfigDelete317154439 -> Department629358305[label="check() -> effectiveStatusType()"];
InstrOfferingConfigDelete317154439 -> DepartmentStatusType629358305[label="check() -> can()"];
InstrOfferingConfigDelete317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
InstrOfferingConfigEdit317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
InstrOfferingConfigEditDepartment317154439 -> Department629358305[label="check() -> effectiveStatusType()"];
InstrOfferingConfigEditDepartment317154439 -> DepartmentStatusType629358305[label="check() -> can()"];
InstrOfferingConfigEditDepartment317154439 -> MultipleClassSetupDepartment317154439[arrowhead=none, arrowtail=empty, dir=both];
InstructionalOfferingCrossLists317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
InstructionalOfferings317154439 -> Classes317154439[arrowhead=none, arrowtail=empty, dir=both];
InstructionalOfferings317154439 -> ClassesExportPDF317154439[arrowhead=none, arrowtail=empty, dir=both];
InstructionalOfferings317154439 -> InstructionalOfferingsExportPDF317154439[arrowhead=none, arrowtail=empty, dir=both];
InstructionalOfferings317154439 -> InstructionalOfferingsWorksheetPDF317154439[arrowhead=none, arrowtail=empty, dir=both];
InstructionalTypeEdit1530278742 -> InstructionalTypeDelete1530278742[arrowhead=none, arrowtail=empty, dir=both];
InstructorAdd2091179447 -> InstructorAttributeAdd2091179447[arrowhead=none, arrowtail=empty, dir=both];
InstructorAssignmentBackend1334400992 -> Department629358305[label="execute() -> isInstructorSchedulingCommitted()"];
InstructorAssignmentBackend1334400992 -> Suggestion402768419[label="execute() -> computeConflicts()"];
InstructorAssignmentBackend1334400992 -> TeachingRequestInfo1591923739[label="execute() -> getInstructor()"];
InstructorAssignmentPreferences2091179447 -> InstructorClearAssignmentPreferences2091179447[arrowhead=none, arrowtail=empty, dir=both];
InstructorAssignmentRequest1591923739 -> AssignmentInfo1591923739[label="iAssignments
[0..*]"];
InstructorAttribute629358305 -> Department629358305[label="findSameAttributeInSession() -> findSameDepartmentInSession()"];
InstructorAttributeEdit2091179447 -> InstructorAttributeDelete2091179447[arrowhead=none, arrowtail=empty, dir=both];
InstructorAttributePropertiesBackend1334400992 -> Department629358305[label="execute() -> getUserDepartments()"];
InstructorAttributePropertiesInterface1591923739 -> AttributeTypeInterface1591923739[label="iAttributeTypes
[0..*]"];
InstructorAttributePropertiesInterface1591923739 -> DepartmentInterface1591923739[label="iDepartments
[0..*]"];
InstructorAvailabilityBackend1334400992 -> InstructorAvailabilityModel65396580[label="execute() -> char2id()"];
InstructorAvailabilityBackend1334400992 -> RequiredTimeTable779606258[label="execute() -> getTimeGridSize()"];
InstructorInfo1304083885 -> DepartmentInfo1304083885[label="iDepartment
[0..1]"];
InstructorInfo1304083885 -> PositionInfo1304083885[label="iPosition
[0..1]"];
InstructorInfo1304083885 -> PreferenceInfo1304083885[label="iPreferences
[0..*]"];
InstructorInfo1304083885 -> TimePrefInfo1304083885[label="iAvailabilities
[0..*]"];
InstructorPreferences2091179447 -> InstructorEditClearPreferences2091179447[arrowhead=none, arrowtail=empty, dir=both];
InstructorRequirementData21643374 -> CourseRequirement21643374[label="iInstructorRequirements
[0..*]"];
InstructorRequirementData21643374 -> CustomField21643374[label="iCustomFields
[0..*]"];
InstructorRequirementsBackend1948231384 -> DepartmentalInstructor629358305[label="execute() -> getName()"];
InstructorRequirementsBackend1948231384 -> InstructorCourseRequirement629358305[label="execute() -> getRequirementsForOffering()"];
InstructorRequirementsBackend1948231384 -> InstructorSurvey629358305[label="execute() -> getInstructor()"];
InstructorRequirementsBackend1948231384 -> _BaseRootDAO595338686[label="execute() -> get()"];
InstructorRoles1530278742 -> Department629358305[label="permissionDepartment
[1]"];
InstructorRoles1530278742 -> InstructorRoleEdit1530278742[arrowhead=none, arrowtail=empty, dir=both];
InstructorRoles1530278742 -> Roles629358305[label="check() -> findAllInstructorRoles()"];
InstructorRoles1542390228 -> Roles629358305[label="load() -> findAllInstructorRoles()"];
InstructorScheduleInfo1304083885 -> ClassInfo1304083885[label="iClasses
[0..*]"];
InstructorScheduleInfo1304083885 -> CourseInfo1304083885[label="iCourses
[0..*]"];
InstructorScheduleInfo1304083885 -> Exam629358305[label="add() -> canView()"];
InstructorScheduleInfo1304083885 -> ExamInfo1304083885[label="iExams
[0..*]"];
InstructorScheduleInfo1304083885 -> InstructorInfo1304083885[label="iInstructors
[0..*]"];
InstructorScheduleInfo1304083885 -> Session629358305[label="add() -> canNoRoleReportClass()"];
InstructorScheduleInfo1304083885 -> SessionInfo1304083885[label="iSession
[0..1]"];
InstructorScheduling1635055555 -> InstructorSchedulingSolver1635055555[arrowhead=none, arrowtail=empty, dir=both];
InstructorSchedulingBackendHelper1334400992 -> ComputeSuggestionsBackend1334400992[arrowhead=none, arrowtail=empty, dir=both];
InstructorSchedulingBackendHelper1334400992 -> InstructorAssignmentBackend1334400992[arrowhead=none, arrowtail=empty, dir=both];
InstructorSchedulingBackendHelper1334400992 -> TeachingAssignmentsBackend1334400992[arrowhead=none, arrowtail=empty, dir=both];
InstructorSchedulingBackendHelper1334400992 -> TeachingAssignmentsDetailBackend1334400992[arrowhead=none, arrowtail=empty, dir=both];
InstructorSchedulingBackendHelper1334400992 -> TeachingRequestDetailBackend1334400992[arrowhead=none, arrowtail=empty, dir=both];
InstructorSchedulingBackendHelper1334400992 -> TeachingRequestsPageBackend1334400992[arrowhead=none, arrowtail=empty, dir=both];
InstructorSchedulingContainer398558421 -> InstructorSchedulingContainerRemote398558421[arrowhead=none, arrowtail=empty, dir=both];
InstructorSchedulingContainerRemote398558421 -> _BaseRootDAO595338686[label="invoke() -> closeCurrentThreadSessions()"];
InstructorSchedulingSolver1635055555 -> InstructorSchedulingSolutionExportXml1635055555[arrowhead=none, arrowtail=empty, dir=both];
InstructorSchedulingSolver1635055555 -> InstructorSchedulingSolverLog1635055555[arrowhead=none, arrowtail=empty, dir=both];
InstructorSchedulingSolverService1058021598 -> ApplicationProperties1829907366[label="createConfig() -> getProperty()"];
InstructorSchedulingSolverService1058021598 -> SolverServerService1058021598[label="solverServerService
[1]"];
InstructorSchedulingSolverService1058021598 -> _BaseRootDAO595338686[label="createConfig() -> get()"];
InstructorSurveyCopyRequest21643374 -> InstructorSurveyData21643374[label="iData
[0..1]"];
InstructorSurveyData21643374 -> AcademicSessionInfo1924258583[label="iSessions
[0..*]"];
InstructorSurveyData21643374 -> AcademicSessionInfo1924258583[label="iSessionsWithCourses
[0..*]"];
InstructorSurveyData21643374 -> AcademicSessionInfo1924258583[label="iSessionsWithPreferences
[0..*]"];
InstructorSurveyData21643374 -> Course21643374[label="iCourses
[0..*]"];
InstructorSurveyData21643374 -> CustomField21643374[label="iCustomFields
[0..*]"];
InstructorSurveyData21643374 -> InstructorDepartment21643374[label="iDepartments
[0..*]"];
InstructorSurveyData21643374 -> InstructorTimePreferencesModel21643374[label="iTimePrefs
[0..1]"];
InstructorSurveyData21643374 -> PrefLevel21643374[label="iPrefLevels
[0..*]"];
InstructorSurveyData21643374 -> Preferences21643374[label="iDistPrefs
[0..1]"];
InstructorSurveyData21643374 -> Preferences21643374[label="iRoomPrefs
[0..*]"];
InstructorSurveySaveRequest21643374 -> InstructorSurveyData21643374[label="iData
[0..1]"];
Instructors2091179447 -> InstructorAttributes2091179447[arrowhead=none, arrowtail=empty, dir=both];
Instructors2091179447 -> InstructorsExportPdf2091179447[arrowhead=none, arrowtail=empty, dir=both];
InstructorsConnector537604450 -> _BaseRootDAO595338686[label="doGet() -> get()"];
JsonApiHelper79803438 -> BinaryFileApiHelper79803438[arrowhead=none, arrowtail=empty, dir=both];
LastLikeCourseDemandImport876794133 -> ChangeLog629358305[label="loadXml() -> addChange()"];
LastLikeCourseDemandImport876794133 -> CourseOffering629358305[label="loadCourseOfferings() -> findAll()"];
LastLikeCourseDemandImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
LastLikeCourseDemandImport876794133 -> SubjectArea629358305[label="externalIdSubjectArea
[0..*]"];
LastLikeCourseDemandImport876794133 -> SubjectArea629358305[label="subjectAreas
[0..*]"];
LastLikeCourseDemandImport876794133 -> TimetableManager629358305[label="manager
[0..1]"];
LearningManagementSystemInfos1542390228 -> LearningManagementSystemInfo629358305[label="load() -> isUsed()"];
ListAcademicClassificationsBackend1754754932 -> CourseSelectionBoxBackend1948231384[label="execute() -> checkPermissions()"];
ListAcademicClassificationsBackend1754754932 -> CurriculaServlet998479413[label="execute() -> loadAcademicClassifications()"];
ListAcademicSessions2107708513 -> Formats1821660490[label="execute() -> getDateFormat()"];
ListClassesBackend1754754932 -> Session629358305[label="execute() -> canNoRoleReportClass()"];
ListClassesBackend1754754932 -> _BaseRootDAO595338686[label="execute() -> get()"];
ListCoursesBackend1754754932 -> CourseSelectionBoxBackend1948231384[label="execute() -> checkPermissions()"];
ListCoursesBackend1754754932 -> InstructionalOffering629358305[label="execute() -> effectiveWaitList()"];
ListCurriculaBackend1754754932 -> CourseSelectionBoxBackend1948231384[label="execute() -> checkPermissions()"];
ListCurriculaBackend1754754932 -> CurriculaServlet998479413[label="execute() -> findCurriculaForACourse()"];
ListSolutionsBackend43990826 -> BackTracker779606258[label="execute() -> markForBack()"];
ListSolutionsBackend43990826 -> SolverGroup629358305[label="fillOwners() -> getUserSolverGroups()"];
ListSolutionsBackend43990826 -> SolverPageBackend43990826[label="execute() -> fillSolverWarnings()"];
ListSolutionsBackend43990826 -> SolverServerService1058021598[label="solverServerService
[1]"];
ListSolutionsBackend43990826 -> TableCellInterface442142882[label="fillSolutions() -> setTitle()"];
ListSolutionsBackend43990826 -> TableInterface1000739671[label="fillSolutions() -> addRow()"];
LoadAllScriptsBackend54906482 -> Building629358305[label="load() -> findAll()"];
LoadAllScriptsBackend54906482 -> Department629358305[label="load() -> getUserDepartments()"];
LoadAllScriptsBackend54906482 -> LearningManagementSystemInfo629358305[label="load() -> findAll()"];
LoadAllScriptsBackend54906482 -> ScriptInterface1000739671[label="load() -> addParameter()"];
LoadAllScriptsBackend54906482 -> StudentSectioningStatus629358305[label="load() -> findAll()"];
LoadAllScriptsBackend54906482 -> SubjectArea629358305[label="load() -> getUserSubjectAreas()"];
LoadAllScriptsBackend54906482 -> _BaseRootDAO595338686[label="execute() -> findAll()"];
LoadDataBackend1850307226 -> AssignClassInstructorsBackend1270204417[label="execute() -> getTable()"];
LoadDataBackend330628327 -> AdminBackend1542390228[label="execute() -> getTable()"];
LoadRecordBackend330628327 -> AdminBackend1542390228[label="execute() -> getTable()"];
LoadRecordBackend330628327 -> StudentGroups1542390228[arrowhead=none];
LoadRecordRpcRequest745105542 -> Record745105542[label="iRecord
[0..1]"];
LocalQueueProcessor1094993043 -> QueueItem1094993043[label="iFinished
[0..*]"];
LocalQueueProcessor1094993043 -> QueueItem1094993043[label="iItem
[0..1]"];
LocalQueueProcessor1094993043 -> QueueItem1094993043[label="iQueue
[0..*]"];
LocalQueueProcessor1094993043 -> RemoteQueueProcessor1094993043[arrowhead=none, arrowtail=empty, dir=both];
LocalQueueProcessor1094993043 -> RunningItem856171861[label="iRunningItem
[0..1]"];
LocalSolverServer398558421 -> CourseSolverContainer398558421[label="iCourseSolverContainer
[0..1]"];
LocalSolverServer398558421 -> ExaminationSolverContainer398558421[label="iExamSolverContainer
[0..1]"];
LocalSolverServer398558421 -> InstructorSchedulingContainer398558421[label="iInstructorSchedulingContainer
[0..1]"];
LocalSolverServer398558421 -> OnlineStudentSchedulingContainer398558421[label="iOnlineStudentSchedulingContainer
[0..1]"];
LocalSolverServer398558421 -> StudentSolverContainer398558421[label="iStudentSolverContainer
[0..1]"];
LocalSolverServer398558421 -> Updater1771088866[label="iUpdater
[0..1]"];
Location629358305 -> BaseRoom595338686[arrowhead=none, arrowtail=empty, dir=both];
LocationMatcher29120908 -> Location629358305[label="iLocation
[0..1]"];
LocationPicture629358305 -> BaseNonUniversityLocationPicture595338686[arrowhead=none, arrowtail=empty, dir=both];
Loggers1542390228 -> SolverServerService1058021598[label="solverServerService
[1]"];
Majors1542390228 -> BaseAcademicAreaDAO595338686[label="load() -> findBySession()"];
Majors1542390228 -> PosMajor629358305[label="load() -> isUsed()"];
MakeAssignmentRequest1582234977 -> SelectedAssignment1582234977[label="iAssignments
[0..*]"];
ManageSolversAction1976086910 -> Constants1821660490[label="getTableName() -> toInitialCase()"];
ManageSolversAction1976086910 -> DateSolverProperty546475809[arrowhead=none];
ManageSolversAction1976086910 -> ExaminationSolverService1058021598[label="execute() -> removeSolver()"];
ManageSolversAction1976086910 -> InfoSolverProperty546475809[label="getValue() -> getValue()", arrowhead=none];
ManageSolversAction1976086910 -> InstructorSchedulingSolverService1058021598[label="execute() -> removeSolver()"];
ManageSolversAction1976086910 -> IntegerSolverProperty546475809[arrowhead=none];
ManageSolversAction1976086910 -> StringSolverProperty546475809[arrowhead=none];
ManageSolversAction1976086910 -> StudentSectioningSolverService1058021598[label="execute() -> removeSolver()"];
ManageSolversAction1976086910 -> TimetableManager629358305[label="getSolverOwner() -> findByExternalId()"];
MapPropertiesInterface759770151 -> RoomPropertiesInterface759770151[arrowhead=none, arrowtail=empty, dir=both];
MeetingConflictInterface4669270 -> ContactInterface4669270[label="iInstructors
[0..*]"];
MeetingConflictInterface4669270 -> SponsoringOrganizationInterface4669270[label="iSponsor
[0..1]"];
MeetingCountingDuration1488568904 -> MeetingHours1488568904[arrowhead=none, arrowtail=empty, dir=both];
MeetingCountingDuration1488568904 -> MeetingMinutes1488568904[arrowhead=none, arrowtail=empty, dir=both];
MeetingInterface4669270 -> ContactInterface4669270[label="iMeetingContacts
[0..*]"];
MeetingInterface4669270 -> MeetingConflictInterface4669270[arrowhead=none, arrowtail=empty, dir=both];
MeetingInterface4669270 -> MeetingConflictInterface4669270[label="iConflicts
[0..*]"];
MeetingInterface4669270 -> ResourceInterface4669270[label="iLocation
[0..1]"];
MeetingMinutes1488568904 -> DatePattern629358305[label="getArrangedHours() -> findChildren()"];
MenuBackend1058982626 -> PersonalizedExamReportAction1976086910[label="check() -> hasPersonalReport()"];
MenuBackend1058982626 -> PointInTimeData629358305[label="check() -> findAllForSession()"];
MenuBackend1058982626 -> SolverGroup629358305[label="check() -> getUserSolverGroups()"];
MenuBackend1058982626 -> SolverServerService1058021598[label="solverServerService
[1]"];
MidtermPeriodPreferenceModel629358305 -> ExamPeriod629358305[label="iPeriod
[0..1]"];
MidtermPeriodPreferenceModel629358305 -> ExamType629358305[label="iExamType
[0..1]"];
MidtermPeriodPreferenceModel629358305 -> Formats1821660490[label="getLabel() -> getDateFormat()"];
MidtermPeriodPreferenceModel629358305 -> PDFMidtermPeriodPreferenceModel2097001998[arrowhead=none, arrowtail=empty, dir=both];
MidtermPeriodPreferenceModel629358305 -> PreferenceGroup629358305[label="load() -> getPreferences()"];
MidtermPeriodPreferenceModel629358305 -> Session629358305[label="iSession
[0..1]"];
Minors1542390228 -> BaseAcademicAreaDAO595338686[label="load() -> findBySession()"];
MinutesPerWeek1488568904 -> Class2EventDateMap240174637[label="getDates() -> getEventDate()"];
MinutesPerWeek1488568904 -> DatePattern629358305[label="isValidSelection() -> findChildren()"];
MinutesPerWeek1488568904 -> EventDateMapping629358305[label="getDates() -> getMapping()"];
MinutesPerWeek1488568904 -> SemesterMinutes1488568904[arrowhead=none, arrowtail=empty, dir=both];
MinutesPerWeek1488568904 -> WeeklyMinutes1488568904[arrowhead=none, arrowtail=empty, dir=both];
MultiRequest1458658222 -> IncludeLine1458658222[label="iSubparts
[0..*]"];
MultiRequest1458658222 -> RequestedClass1458658222[label="iClasses
[0..*]"];
MultipleClassSetup317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
MultipleClassSetupClassEdit317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
NotAssignedClassesBackend43990826 -> BackTracker779606258[label="execute() -> markForBack()"];
NotAssignedClassesBackend43990826 -> FilterParameterInterface723731434[label="execute() -> getOptionText()"];
NotAssignedClassesBackend43990826 -> SolverGroup629358305[label="execute() -> getUserSolverGroups()"];
NotAssignedClassesBackend43990826 -> SolverPageBackend43990826[label="execute() -> fillSolverWarnings()"];
NotAssignedClassesBackend43990826 -> TableInterface1000739671[label="execute() -> addRow()"];
NotAssignedClassesBackend43990826 -> _BaseRootDAO595338686[label="execute() -> get()"];
NotAssignedClassesFilterBackend43990826 -> AssignedClassesFilterResponse926228794[label="execute() -> addPreference()"];
NotAssignedClassesFilterBackend43990826 -> FilterInterface1000739671[label="execute() -> addParameter()"];
NotAssignedClassesFilterBackend43990826 -> SubjectArea629358305[label="execute() -> getUserSubjectAreas()"];
NotAssignedClassesRequest926228794 -> FilterInterface1000739671[label="iFilter
[0..1]"];
OfferingCanLock317154439 -> InstructionalOffering629358305[label="permissionOfferingEdit
[1]"];
OfferingCanLock317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
OfferingCanUnlock317154439 -> InstructionalOffering629358305[label="permissionOfferingEdit
[1]"];
OfferingCanUnlock317154439 -> SolverServerService1058021598[label="solverServerService
[1]"];
OfferingLockNeeded317154439 -> SolverServerService1058021598[label="solverServerService
[1]"];
OfferingLockNeededLimitedEdit317154439 -> OfferingLockNeededOnlyWhenWaitListing317154439[arrowhead=none, arrowtail=empty, dir=both];
OfferingLockNeededLimitedEdit317154439 -> SolverServerService1058021598[label="solverServerService
[1]"];
OfferingLockNeededOnlyWhenWaitListing317154439 -> InstructionalOffering629358305[label="check() -> effectiveWaitList()"];
OfferingMakeNotOffered317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
OfferingMakeNotOfferedNoEnrollmentCheck317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
OfferingMakeNotOfferedNoEnrollmentCheck317154439 -> OfferingMakeNotOffered317154439[arrowhead=none, arrowtail=empty, dir=both];
OnlineStudentSchedulingConnector537604450 -> _BaseRootDAO595338686[label="execute() -> createNewSession()"];
OnlineStudentSchedulingContainer398558421 -> OnlineStudentSchedulingContainerRemote398558421[arrowhead=none, arrowtail=empty, dir=both];
OnlineStudentSchedulingContainer398558421 -> OnlineStudentSchedulingUpdater398558421[label="iUpdaters
[0..*]"];
OnlineStudentSchedulingContainer398558421 -> StudentSectioningQueue629358305[label="createInstance() -> getLastTimeStamp()"];
OnlineStudentSchedulingContainerRemote398558421 -> CourseSolverContainerRemote398558421[arrowhead=none];
OnlineStudentSchedulingContainerRemote398558421 -> DummyContainer1876261413[arrowhead=none];
OnlineStudentSchedulingContainerRemote398558421 -> ExaminationSolverContainerRemote398558421[arrowhead=none];
OnlineStudentSchedulingContainerRemote398558421 -> InstructorSchedulingContainerRemote398558421[arrowhead=none];
OnlineStudentSchedulingContainerRemote398558421 -> ReplicatedDummyContainer1876261413[arrowhead=none];
OnlineStudentSchedulingContainerRemote398558421 -> StudentSolverContainerRemote398558421[arrowhead=none];
OnlineStudentSchedulingContainerRemote398558421 -> _BaseRootDAO595338686[label="invoke() -> closeCurrentThreadSessions()"];
PITDExecuteBackend1633576887 -> PointInTimeDataReportsExportToCSV1618705082[label="execute() -> execute()"];
PITDExecuteRpcRequest1951770193 -> IdValue1951770193[label="iParameters
[0..*]"];
PITDExecuteRpcRequest1951770193 -> Report1951770193[label="iReport
[0..1]"];
PITDParametersInterface1951770193 -> Flag1951770193[label="iFlags
[0..*]"];
PITDParametersInterface1951770193 -> Parameter1951770193[label="iParameters
[0..*]"];
PITDQueriesBackend1633576887 -> Report1951770193[label="execute() -> addParameter()"];
PITDSetBackBackend1633576887 -> BackTracker779606258[label="execute() -> markForBack()"];
PageNameBackend1850307226 -> AssignClassInstructors1270204417[arrowhead=none];
PageNameBackend1850307226 -> AssignClassInstructorsBackend1270204417[label="execute() -> getTable()"];
PageNameBackend1850307226 -> Debug1738245203[label="execute() -> info()"];
PageNameBackend330628327 -> AdminBackend1542390228[label="execute() -> getTable()"];
PasswordChangeBackend1801756021 -> MD5PasswordEncoder355886009[label="encode() -> getEncodedPassword()"];
PeriodPreferenceRequest759770151 -> PeriodPreferenceModel759770151[label="iModel
[0..1]"];
Permissions1542390228 -> Roles629358305[label="getRoles() -> findAll()"];
Permissions1542390228 -> SimpleEditInterface1000739671[label="load() -> addRecord()"];
Permissions1542390228 -> _BaseRootDAO595338686[label="getRoles() -> get()"];
PermissionsExport876794133 -> HibernateUtil2052906881[label="main() -> configureHibernate()"];
PermissionsExport876794133 -> Roles629358305[label="saveXml() -> hasRight()"];
PermissionsExport876794133 -> _BaseRootDAO595338686[label="saveXml() -> findAll()"];
PersonalSchedule2084304250 -> PersonalScheduleLookup2084304250[arrowhead=none, arrowtail=empty, dir=both];
PersonalSchedule2084304250 -> Solution629358305[label="check() -> hasTimetable()"];
PersonalSchedule2084304250 -> StudentSectioningStatus629358305[label="check() -> hasOption()"];
PersonalSchedule2084304250 -> _BaseRootDAO595338686[label="check() -> get()"];
PersonalizedExamReportAction1976086910 -> Constants1821660490[label="execute() -> toInitialCase()"];
PersonalizedExamReportAction1976086910 -> ExportUtils1821660490[label="execute() -> getPdfOutputStream()"];
PersonalizedExamReportAction1976086910 -> PersonalizedExamReportForm1821209100[label="execute() -> reset()"];
PlacementMatcher648389124 -> SuggestionsFilterBackend43990826[label="match() -> getDaysName()"];
PointInTimeDataExport876794133 -> HibernateUtil2052906881[label="main() -> configureHibernate()"];
PointInTimeDataExport876794133 -> Session629358305[label="main() -> getSessionUsingInitiativeYearTerm()"];
PointInTimeDataImport876794133 -> AcademicArea629358305[label="academicAreas
[0..*]"];
PointInTimeDataImport876794133 -> AcademicArea629358305[label="academicAreasByAbbv
[0..*]"];
PointInTimeDataImport876794133 -> AcademicClassification629358305[label="academicClassifications
[0..*]"];
PointInTimeDataImport876794133 -> AcademicClassification629358305[label="academicClassificationsByCode
[0..*]"];
PointInTimeDataImport876794133 -> BaseDepartment595338686[label="elementSubjectArea() -> addTosubjectAreas()"];
PointInTimeDataImport876794133 -> BaseLocation595338686[label="elementNonUniversityLocation() -> addToroomDepts()"];
PointInTimeDataImport876794133 -> BasePitClassEvent595338686[label="elementClassMeeting() -> addTopitClassMeetings()"];
PointInTimeDataImport876794133 -> BasePitClassMeeting595338686[label="elementClassMeetingUtilPeriod() -> addTopitClassMeetingUtilPeriods()"];
PointInTimeDataImport876794133 -> BasePitInstrOfferingConfig595338686[label="elementSubpart() -> addToschedulingSubparts()"];
PointInTimeDataImport876794133 -> Building629358305[label="buildings
[0..*]"];
PointInTimeDataImport876794133 -> Building629358305[label="buildingsByAbbv
[0..*]"];
PointInTimeDataImport876794133 -> ChangeLog629358305[label="logXmlFileCreateInformation() -> addChange()"];
PointInTimeDataImport876794133 -> ClassDurationType629358305[label="classDurationTypes
[0..*]"];
PointInTimeDataImport876794133 -> Class_629358305[label="classes
[0..*]"];
PointInTimeDataImport876794133 -> CourseCreditType629358305[label="creditTypes
[0..*]"];
PointInTimeDataImport876794133 -> CourseCreditType629358305[label="creditTypesByRef
[0..*]"];
PointInTimeDataImport876794133 -> CourseCreditUnitType629358305[label="creditUnitTypes
[0..*]"];
PointInTimeDataImport876794133 -> CourseCreditUnitType629358305[label="creditUnitTypesByRef
[0..*]"];
PointInTimeDataImport876794133 -> CourseOffering629358305[label="courseOfferings
[0..*]"];
PointInTimeDataImport876794133 -> CourseType629358305[label="courseTypes
[0..*]"];
PointInTimeDataImport876794133 -> CourseType629358305[label="courseTypesByRef
[0..*]"];
PointInTimeDataImport876794133 -> DatePattern629358305[label="datePatterns
[0..*]"];
PointInTimeDataImport876794133 -> DatePattern629358305[label="datePatternsByName
[0..*]"];
PointInTimeDataImport876794133 -> Debug1738245203[label="updateNormalizedPercentShare() -> info()"];
PointInTimeDataImport876794133 -> Department629358305[label="departments
[0..*]"];
PointInTimeDataImport876794133 -> Department629358305[label="departmentsByCode
[0..*]"];
PointInTimeDataImport876794133 -> DepartmentStatusType629358305[label="initializeSession() -> findByRef()"];
PointInTimeDataImport876794133 -> DepartmentalInstructor629358305[label="departmentalInstructorsByName
[0..*]"];
PointInTimeDataImport876794133 -> InstrOfferingConfig629358305[label="instrOfferingConfigs
[0..*]"];
PointInTimeDataImport876794133 -> InstructionalMethod629358305[label="instructionalMethods
[0..*]"];
PointInTimeDataImport876794133 -> InstructionalOffering629358305[label="instructionalOfferings
[0..*]"];
PointInTimeDataImport876794133 -> ItypeDesc629358305[label="itypes
[0..*]"];
PointInTimeDataImport876794133 -> Location629358305[label="locations
[0..*]"];
PointInTimeDataImport876794133 -> Location629358305[label="locationsByName
[0..*]"];
PointInTimeDataImport876794133 -> PitClass629358305[label="pitClasses
[0..*]"];
PointInTimeDataImport876794133 -> PitCourseOffering629358305[label="pitCourseOfferings
[0..*]"];
PointInTimeDataImport876794133 -> PitDepartmentalInstructor629358305[label="pitDepartmentInstructors
[0..*]"];
PointInTimeDataImport876794133 -> PointInTimeData629358305[label="pointInTimeData
[0..1]"];
PointInTimeDataImport876794133 -> PosMajor629358305[label="majors
[0..*]"];
PointInTimeDataImport876794133 -> PosMajor629358305[label="majorsByCode
[0..*]"];
PointInTimeDataImport876794133 -> PosMajorConcentration629358305[label="concentrations
[0..*]"];
PointInTimeDataImport876794133 -> PosMajorConcentration629358305[label="concentrationsByCode
[0..*]"];
PointInTimeDataImport876794133 -> PosMinor629358305[label="minors
[0..*]"];
PointInTimeDataImport876794133 -> PosMinor629358305[label="minorsByCode
[0..*]"];
PointInTimeDataImport876794133 -> PositionType629358305[label="positionTypes
[0..*]"];
PointInTimeDataImport876794133 -> PositionType629358305[label="positionTypesByRef
[0..*]"];
PointInTimeDataImport876794133 -> Room629358305[label="elementRoom() -> addToroomDepts()"];
PointInTimeDataImport876794133 -> RoomType629358305[label="roomTypes
[0..*]"];
PointInTimeDataImport876794133 -> RoomType629358305[label="roomTypesByRef
[0..*]"];
PointInTimeDataImport876794133 -> SchedulingSubpart629358305[label="schedulingSubparts
[0..*]"];
PointInTimeDataImport876794133 -> Session629358305[label="initializeSession() -> getSessionById()"];
PointInTimeDataImport876794133 -> Student629358305[label="students
[0..*]"];
PointInTimeDataImport876794133 -> SubjectArea629358305[label="subjectAreas
[0..*]"];
PointInTimeDataImport876794133 -> TeachingResponsibility629358305[label="teachingResponsibilities
[0..*]"];
PointInTimeDataImport876794133 -> TeachingResponsibility629358305[label="teachingResponsibilitiesByRef
[0..*]"];
PointInTimeDataImport876794133 -> TimePattern629358305[label="timePatterns
[0..*]"];
PointInTimeDataImport876794133 -> TimePattern629358305[label="timePatternsByName
[0..*]"];
PointInTimeDataSnapshots1542390228 -> BasePointInTimeDataDAO595338686[label="save() -> findBySession()"];
PointInTimeDataSnapshots1542390228 -> Formats1821660490[label="load() -> getDateFormat()"];
PointInTimeDataSnapshots1542390228 -> PointInTimeData629358305[label="load() -> findAllForSession()"];
PosMajorImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
PosMinorImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
PreferenceGroup629358305 -> BaseClass_595338686[arrowhead=none, arrowtail=empty, dir=both];
PreferenceLevels1542390228 -> ChangeLog629358305[label="update() -> addChange()"];
PreferencesExport876794133 -> CommitedClassAssignmentProxy1792699557[label="proxy
[0..1]"];
PreferencesImport876794133 -> Building629358305[label="iBuildings
[0..*]"];
PreferencesImport876794133 -> ChangeLog629358305[label="loadXml() -> addChange()"];
PreferencesImport876794133 -> Class_629358305[label="iClasses
[0..*]"];
PreferencesImport876794133 -> CourseOffering629358305[label="iCourseOfferings
[0..*]"];
PreferencesImport876794133 -> DatePattern629358305[label="iDatePatterns
[0..*]"];
PreferencesImport876794133 -> Department629358305[label="iDepartments
[0..*]"];
PreferencesImport876794133 -> DepartmentalInstructor629358305[label="iInstructors
[0..*]"];
PreferencesImport876794133 -> DistributionType629358305[label="iDistributionTypes
[0..*]"];
PreferencesImport876794133 -> ExamPeriod629358305[label="iExamPeriods
[0..*]"];
PreferencesImport876794133 -> InstructorAttribute629358305[label="iInstructorAttributes
[0..*]"];
PreferencesImport876794133 -> Location629358305[label="iLocations
[0..*]"];
PreferencesImport876794133 -> Room629358305[label="iRooms
[0..*]"];
PreferencesImport876794133 -> RoomFeature629358305[label="iRoomFeatures
[0..*]"];
PreferencesImport876794133 -> RoomGroup629358305[label="iRoomGroups
[0..*]"];
PreferencesImport876794133 -> SchedulingSubpart629358305[label="iSubparts
[0..*]"];
PreferencesImport876794133 -> Session629358305[label="iSession
[0..1]"];
PreferencesImport876794133 -> TimePattern629358305[label="iTimePatterns
[0..*]"];
ProjectedStudentMatcher552368780 -> WeightedStudentId389194987[label="iStudent
[0..1]"];
Properties1458658222 -> GetRequestsRpcResponse1458658222[arrowhead=none, arrowtail=empty, dir=both];
ProxyHolder1058021598 -> noqualifiedname1905501234[label="iId
[0..1]"];
ProxyHolder1058021598 -> noqualifiedname1905501234[label="iProxy
[0..1]"];
PublishedSectioningSolutionsBackend373406240 -> StudentSectioningSolverService1058021598[label="studentSectioningSolverService
[1]"];
Query1849130278 -> HQLStoreRpcRequest1849130278[arrowhead=none, arrowtail=empty, dir=both];
Query1849130278 -> Parameter1849130278[label="iParameters
[0..*]"];
QueryLog629358305 -> WebTable1790209645[label="getTopQueries() -> addLine()"];
QueueItemInterface15436791 -> ExecuteScriptRpcRequest15436791[label="iExecutionRequest
[0..1]"];
QueueMessage1094993043 -> Formats1821660490[label="formatMessagePlain() -> getDateFormat()"];
Record745105542 -> TimeUtils227704156[label="getText() -> slot2time()"];
RefTableEntry629358305 -> BaseAttachmentType595338686[arrowhead=none, arrowtail=empty, dir=both];
RefTableEntry629358305 -> BaseCourseType595338686[arrowhead=none, arrowtail=empty, dir=both];
RefTableEntry629358305 -> BaseDemandOfferingType595338686[arrowhead=none, arrowtail=empty, dir=both];
RefTableEntry629358305 -> BaseDistributionType595338686[arrowhead=none, arrowtail=empty, dir=both];
RefTableEntry629358305 -> BaseExamType595338686[arrowhead=none, arrowtail=empty, dir=both];
RefTableEntry629358305 -> BaseOfferingConsentType595338686[arrowhead=none, arrowtail=empty, dir=both];
RelatedCourseInfo629358305 -> ClassComparator1628636464[label="compareTo() -> compare()"];
RelatedCourseInfo629358305 -> InstrOfferingConfigComparator1628636464[label="compareTo() -> compare()"];
RelatedObjectInterface4669270 -> ContactInterface4669270[label="iInstructors
[0..*]"];
RelatedObjectInterface4669270 -> ResourceInterface4669270[label="iLocations
[0..*]"];
RelatedObjectLookupRpcResponse4669270 -> RelatedObjectInterface4669270[label="iRelatedObject
[0..1]"];
RemoveAllClassInstructorsDataBackend1850307226 -> AssignClassInstructorsBackend1270204417[label="execute() -> getTable()"];
RemoveAllClassInstructorsDataRpcRequest2051236629 -> AssignClassInstructorsInterface1000739671[label="iData
[0..1]"];
Report1951770193 -> PITDStoreRpcRequest1951770193[arrowhead=none, arrowtail=empty, dir=both];
Report1951770193 -> Parameter1951770193[label="iParameters
[0..*]"];
Request1458658222 -> MultiRequest1458658222[arrowhead=none, arrowtail=empty, dir=both];
Request1458658222 -> SingleRequest1458658222[arrowhead=none, arrowtail=empty, dir=both];
RequestInstructorSurveyBackend1948231384 -> DistributionType629358305[label="execute() -> findAll()"];
RequestInstructorSurveyBackend1948231384 -> InstructorAvailabilityModel65396580[label="execute() -> char2id()"];
RequestInstructorSurveyBackend1948231384 -> _BaseRootDAO595338686[label="execute() -> get()"];
RequiredTimeTable779606258 -> Constants1821660490[label="exactTime() -> slot2str()"];
ReservationEdit2016207608 -> InstructionalOffering629358305[label="permissionReservationOffering
[1]"];
ReservationEdit2016207608 -> ReservationDelete2016207608[arrowhead=none, arrowtail=empty, dir=both];
ReservationExport876794133 -> CourseOffering629358305[label="saveXml() -> compareTo()"];
ReservationFilterBackend847111401 -> Student629358305[label="suggestions() -> getName()"];
ReservationImport876794133 -> ChangeLog629358305[label="loadXml() -> addChange()"];
ReservationImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
ReservationMatcher2055155989 -> Reservation629358305[label="iReservation
[0..1]"];
ReservationMatcher2055155989 -> Student629358305[label="match() -> getName()"];
ReservationOffering2016207608 -> InstructionalOffering629358305[label="permissionOfferingLockNeededOnlyWhenWaitListing
[1]"];
ReservationServlet998479413 -> FilterRpcRequest4669270[label="findReservations() -> toQueryString()"];
ReservationServlet998479413 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
ReservationServlet998479413 -> InstructionalOffering629358305[label="permissionOfferingLockNeededOnlyWhenWaitListing
[1]"];
ReservationServlet998479413 -> ReservationFilterBackend847111401[label="findReservations() -> reservations()"];
ReservationServlet998479413 -> SchedulingSubpart629358305[label="convert() -> getSchedulingSubpartSuffix()"];
ResourceLookupBackend2107708513 -> EventContext1549462339[label="execute() -> checkPermission()"];
RetrieveAvailableGradeModesResponse836856674 -> SpecialRegistrationGradeModeChanges836856674[label="iModes
[0..*]"];
RetrieveAvailableGradeModesResponse836856674 -> SpecialRegistrationVariableCreditChange836856674[label="iVarCreds
[0..*]"];
RolesConnector537604450 -> AbstractUserContext641976759[label="doGet() -> getAuthorities()"];
Room629358305 -> BaseDepartment595338686[label="addExternalRoomDept() -> addToroomDepts()"];
Room629358305 -> Building629358305[label="addNewExternalRoomsToSession() -> findByExternalIdAndSession()"];
Room629358305 -> Department629358305[label="addExternalRoomDept() -> findByDeptCode()"];
Room629358305 -> _BaseRootDAO595338686[label="addExternalRoomDept() -> saveOrUpdate()"];
RoomAvailabilityService1821660490 -> BlobRoomAvailabilityService1821660490[arrowhead=none, arrowtail=empty, dir=both];
RoomAvailabilityService1821660490 -> CacheElement1487510725[label="iCache
[0..*]"];
RoomAvailabilityService1821660490 -> RefreshThread1487510725[label="iRefreshThread
[0..1]"];
RoomDetail82359199 -> RoomDetailAvailability82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomDetail82359199 -> RoomDetailPeriodPreferences82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomDetailInterface759770151 -> BuildingInterface759770151[label="iBuilding
[0..1]"];
RoomDetailInterface759770151 -> DepartmentInterface759770151[label="iControlDepartment
[0..1]"];
RoomDetailInterface759770151 -> DepartmentInterface759770151[label="iDepartments
[0..*]"];
RoomDetailInterface759770151 -> DepartmentInterface759770151[label="iEventDepartment
[0..1]"];
RoomDetailInterface759770151 -> EventServiceProviderInterface4669270[label="iServices
[0..*]"];
RoomDetailInterface759770151 -> ExamTypeInterface759770151[label="iExamTypes
[0..*]"];
RoomDetailInterface759770151 -> FeatureInterface759770151[label="iFeatures
[0..*]"];
RoomDetailInterface759770151 -> FutureRoomInterface759770151[label="iFutureRooms
[0..*]"];
RoomDetailInterface759770151 -> GroupInterface759770151[label="iGroups
[0..*]"];
RoomDetailInterface759770151 -> PeriodPreferenceModel759770151[label="iPeriodPreferenceModels
[0..*]"];
RoomDetailInterface759770151 -> RoomPictureInterface759770151[label="iPictures
[0..*]"];
RoomDetailInterface759770151 -> RoomSharingModel759770151[label="iEventAvailabilityModel
[0..1]"];
RoomDetailInterface759770151 -> RoomSharingModel759770151[label="iRoomSharingModel
[0..1]"];
RoomDetailInterface759770151 -> RoomTypeInterface759770151[label="iRoomType
[0..1]"];
RoomDetailsBackend1526360619 -> ChangeLog629358305[label="load() -> findLastChange()"];
RoomDetailsBackend1526360619 -> Department629358305[label="wrap() -> getRoomSharingColor()"];
RoomDetailsBackend1526360619 -> ExamType629358305[label="enumarate() -> findAllApplicable()"];
RoomDetailsBackend1526360619 -> FilterBoxBackend2107708513[label="execute() -> execute()"];
RoomDetailsBackend1526360619 -> FilterRpcResponse4669270[label="enumarate() -> addResult()"];
RoomDetailsBackend1526360619 -> PeriodPreferencesBackend1526360619[label="enumarate() -> loadPeriodPreferences()"];
RoomDetailsBackend1526360619 -> PreferenceLevel629358305[label="wrap() -> prolog2color()"];
RoomDetailsBackend1526360619 -> RoomPicturesBackend1526360619[label="load() -> getPictureType()"];
RoomDetailsBackend1526360619 -> RoomQuery29120908[label="getQuery() -> addFrom()"];
RoomDetailsBackend1526360619 -> RoomType629358305[label="load() -> getOption()"];
RoomEditAvailability82359199 -> RoomEditFeatures82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditAvailability82359199 -> RoomEditGlobalFeatures82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditAvailability82359199 -> RoomEditGlobalGroups82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditAvailability82359199 -> RoomEditGroups82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditAvailability82359199 -> RoomEditPreference82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditChangeCapacity82359199 -> RoomEditChangeEventProperties82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditChangeCapacity82359199 -> RoomEditChangeExaminationStatus82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditChangeCapacity82359199 -> RoomEditChangeExternalId82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditChangeCapacity82359199 -> RoomEditChangePicture82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditChangeCapacity82359199 -> RoomEditChangeRoomProperties82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditChangeCapacity82359199 -> RoomEditChangeType82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomEditChangeEventProperties82359199 -> RoomEditEventAvailability82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomFeaturesBackend1526360619 -> RoomDetailsBackend1526360619[label="execute() -> wrap()"];
RoomFeaturesBackend1526360619 -> RoomFilterBackend2107708513[label="execute() -> enumarate()"];
RoomFilterBackend2107708513 -> RoomDetailsBackend1526360619[arrowhead=none, arrowtail=empty, dir=both];
RoomFilterRpcRequest4669270 -> RoomFilterRpcRequest759770151[arrowhead=none, arrowtail=empty, dir=both];
RoomGroupsBackend1526360619 -> GroupInterface759770151[label="execute() -> addRoom()"];
RoomGroupsBackend1526360619 -> RoomDetailsBackend1526360619[label="execute() -> wrap()"];
RoomGroupsBackend1526360619 -> RoomFilterBackend2107708513[label="execute() -> enumarate()"];
RoomGroupsBackend1526360619 -> RoomGroup629358305[label="execute() -> getAllRoomGroupsForSession()"];
RoomHintBackend1526360619 -> RoomPicturesBackend1526360619[label="execute() -> getPictureType()"];
RoomHintBackend1526360619 -> UrlSigner56632454[label="execute() -> signRequest()"];
RoomHintResponse759770151 -> EventServiceProviderInterface4669270[label="iServices
[0..*]"];
RoomHintResponse759770151 -> FeatureInterface759770151[label="iFeatures
[0..*]"];
RoomHintResponse759770151 -> GroupInterface759770151[label="iGroups
[0..*]"];
RoomHintResponse759770151 -> RoomPictureInterface759770151[label="iPictures
[0..*]"];
RoomPictureRequest759770151 -> RoomPictureInterface759770151[label="iPictures
[0..*]"];
RoomPictureResponse759770151 -> AttachmentTypeInterface759770151[label="iPictureTypes
[0..*]"];
RoomPictureResponse759770151 -> RoomPictureInterface759770151[label="iPictures
[0..*]"];
RoomPicturesBackend1526360619 -> ApplyInstructorSurveyBackend1948231384[arrowhead=none];
RoomPicturesBackend1526360619 -> AssignedClassesBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> AssignedClassesFilterBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> AssignmentChangesBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> AssignmentHistoryBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> AssignmentHistoryFilterBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> AttachmentType629358305[label="execute() -> listTypes()"];
RoomPicturesBackend1526360619 -> Backend1875904956[arrowhead=none];
RoomPicturesBackend1526360619 -> BuildingCheckCanDeleteBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> ClassAssignmentDetailsBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> ClearHibernateCacheBackend1801756021[arrowhead=none];
RoomPicturesBackend1526360619 -> ComputeConflictTableBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> ComputeSuggestionsBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> ComputeSuggestionsBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> ConflictBasedStatisticsBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> ConflictStatisticsFilterBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> CopyInstructorSurveyBackend1948231384[arrowhead=none];
RoomPicturesBackend1526360619 -> CourseDetailsBackend1801756021[arrowhead=none];
RoomPicturesBackend1526360619 -> CourseNumbersSuggestionsBackend1801756021[arrowhead=none];
RoomPicturesBackend1526360619 -> CourseOfferingCheckExistsBackend1624300373[arrowhead=none];
RoomPicturesBackend1526360619 -> CourseOfferingCheckPermissionsBackend1624300373[arrowhead=none];
RoomPicturesBackend1526360619 -> CourseOfferingConstantsBackend1624300373[arrowhead=none];
RoomPicturesBackend1526360619 -> CourseOfferingPropertiesBackend1624300373[arrowhead=none];
RoomPicturesBackend1526360619 -> CurriculumFilterBackend1074656955[label="execute() -> execute()", arrowhead=none];
RoomPicturesBackend1526360619 -> DeleteRecordBackend330628327[arrowhead=none];
RoomPicturesBackend1526360619 -> DeleteScriptBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> DeleteTaskBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> DepartmentPropertiesBackend1360869250[arrowhead=none];
RoomPicturesBackend1526360619 -> EventAction2107708513[arrowhead=none];
RoomPicturesBackend1526360619 -> EventSendStudentEmailsBackend2107708513[arrowhead=none];
RoomPicturesBackend1526360619 -> ExaminationEnrollmentsBackend1538111727[arrowhead=none];
RoomPicturesBackend1526360619 -> ExaminationScheduleBackend1538111727[arrowhead=none];
RoomPicturesBackend1526360619 -> ExecuteScriptBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> FileUploadBackend2107708513[arrowhead=none];
RoomPicturesBackend1526360619 -> FilterBoxBackend1801756021[arrowhead=none];
RoomPicturesBackend1526360619 -> GeocodingBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> GetBuidlingsDataBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> GetCourseOfferingBackend1624300373[arrowhead=none];
RoomPicturesBackend1526360619 -> GetDepartmentsDataBackend1360869250[arrowhead=none];
RoomPicturesBackend1526360619 -> GetFilterBackend330628327[arrowhead=none];
RoomPicturesBackend1526360619 -> GetInstructorAttributeParentsBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> GetInstructorAttributesBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> GetInstructorsBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> GetQueueTableBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> GetRoomsOfABuildingBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> GetTaskExecutionLogBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> GetTasksBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> GetTeachingRequestBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> GetUserDataBackend1058982626[arrowhead=none];
RoomPicturesBackend1526360619 -> HQLDeleteBackend1003987616[arrowhead=none];
RoomPicturesBackend1526360619 -> HQLExecuteBackend1003987616[arrowhead=none];
RoomPicturesBackend1526360619 -> HQLOptionsBackend1003987616[arrowhead=none];
RoomPicturesBackend1526360619 -> HQLQueriesBackend1003987616[arrowhead=none];
RoomPicturesBackend1526360619 -> HQLSetBackBackend1003987616[arrowhead=none];
RoomPicturesBackend1526360619 -> HQLStoreBackend1003987616[arrowhead=none];
RoomPicturesBackend1526360619 -> InstructorAssignmentBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> InstructorAttributePropertiesBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> InstructorAvailabilityBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> InstructorRequirementsBackend1948231384[arrowhead=none];
RoomPicturesBackend1526360619 -> LastChangesBackend1801756021[arrowhead=none];
RoomPicturesBackend1526360619 -> ListAcademicClassificationsBackend1754754932[arrowhead=none];
RoomPicturesBackend1526360619 -> ListAcademicSessions2107708513[arrowhead=none];
RoomPicturesBackend1526360619 -> ListClassesBackend1754754932[arrowhead=none];
RoomPicturesBackend1526360619 -> ListCoursesBackend1754754932[arrowhead=none];
RoomPicturesBackend1526360619 -> ListCurriculaBackend1754754932[arrowhead=none];
RoomPicturesBackend1526360619 -> ListSolutionsBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> LoadAllScriptsBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> LoadDataBackend1850307226[arrowhead=none];
RoomPicturesBackend1526360619 -> LoadDataBackend330628327[arrowhead=none];
RoomPicturesBackend1526360619 -> LoadRecordBackend330628327[arrowhead=none];
RoomPicturesBackend1526360619 -> MakeAssignmentBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> MapPropertiesBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> MenuBackend1058982626[arrowhead=none];
RoomPicturesBackend1526360619 -> NonUniversityLocationPicture629358305[label="execute() -> clonePicture()"];
RoomPicturesBackend1526360619 -> NotAssignedClassesBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> NotAssignedClassesFilterBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> PITDExecuteBackend1633576887[arrowhead=none];
RoomPicturesBackend1526360619 -> PITDParametersBackend1633576887[arrowhead=none];
RoomPicturesBackend1526360619 -> PITDQueriesBackend1633576887[arrowhead=none];
RoomPicturesBackend1526360619 -> PITDSetBackBackend1633576887[arrowhead=none];
RoomPicturesBackend1526360619 -> PageNameBackend1850307226[arrowhead=none];
RoomPicturesBackend1526360619 -> PageNameBackend330628327[arrowhead=none];
RoomPicturesBackend1526360619 -> PasswordChangeBackend1801756021[arrowhead=none];
RoomPicturesBackend1526360619 -> PeopleLookupBackend244315587[arrowhead=none];
RoomPicturesBackend1526360619 -> PeriodPreferencesBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> PublishedSectioningSolutionsBackend373406240[arrowhead=none];
RoomPicturesBackend1526360619 -> QueryEncoderBackend2107708513[arrowhead=none];
RoomPicturesBackend1526360619 -> RemoveAllClassInstructorsDataBackend1850307226[arrowhead=none];
RoomPicturesBackend1526360619 -> RequestInstructorSurveyBackend1948231384[arrowhead=none];
RoomPicturesBackend1526360619 -> ReservationDefaultExpirationDatesBackend847111401[arrowhead=none];
RoomPicturesBackend1526360619 -> ReservationFilterBackend847111401[label="execute() -> execute()", arrowhead=none];
RoomPicturesBackend1526360619 -> RetrieveCourseDetailBackend1754754932[arrowhead=none];
RoomPicturesBackend1526360619 -> RoomFeaturesBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> RoomGroupsBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> RoomHintBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> RoomPicture629358305[label="execute() -> clonePicture()"];
RoomPicturesBackend1526360619 -> RoomPropertiesBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> RoomSharingBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> RoomUpdateBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> SaveDataBackend1850307226[arrowhead=none];
RoomPicturesBackend1526360619 -> SaveDataBackend330628327[arrowhead=none];
RoomPicturesBackend1526360619 -> SaveDataGoToNextRpcRequest1850307226[arrowhead=none];
RoomPicturesBackend1526360619 -> SaveDataGoToPreviousRpcRequest1850307226[arrowhead=none];
RoomPicturesBackend1526360619 -> SaveFilterDefaultBackend2107708513[arrowhead=none];
RoomPicturesBackend1526360619 -> SaveInstructorSurveyBackend1948231384[arrowhead=none];
RoomPicturesBackend1526360619 -> SaveOrUpdateScriptBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> SaveRecordBackend330628327[arrowhead=none];
RoomPicturesBackend1526360619 -> SaveTaskBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> SaveTeachingRequestsBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> ScriptOptionsBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> SectioningReportTypesBackend373406240[arrowhead=none];
RoomPicturesBackend1526360619 -> SectioningReportsBackend373406240[arrowhead=none];
RoomPicturesBackend1526360619 -> SectioningStatusFilterBackend373406240[arrowhead=none];
RoomPicturesBackend1526360619 -> SelectedAssignmentBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> ServerTimeZoneBackend1801756021[arrowhead=none];
RoomPicturesBackend1526360619 -> SessionInfoBackend1058982626[arrowhead=none];
RoomPicturesBackend1526360619 -> SetLastDepartmentBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> SetUserDataBackend1058982626[arrowhead=none];
RoomPicturesBackend1526360619 -> SolutionChangesBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> SolutionChangesFilterBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> SolverAllocatedMemoryBackend1801756021[arrowhead=none];
RoomPicturesBackend1526360619 -> SolverInfoBackend1058982626[arrowhead=none];
RoomPicturesBackend1526360619 -> SolverLogPageBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> SolverPageBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> SolverPageMessagesBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> SolverReportsBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> SuggestionPropertiesBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> SuggestionsFilterBackend43990826[label="execute() -> execute()", arrowhead=none];
RoomPicturesBackend1526360619 -> TaskOptionsBackend54906482[arrowhead=none];
RoomPicturesBackend1526360619 -> TeachingAssignmentsBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> TeachingAssignmentsDetailBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> TeachingRequestDetailBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> TeachingRequestsFilterBackend1334400992[label="execute() -> execute()", arrowhead=none];
RoomPicturesBackend1526360619 -> TeachingRequestsPageBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> TeachingRequestsPagePropertiesBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> TimeHintBackend1801756021[arrowhead=none];
RoomPicturesBackend1526360619 -> TimetableGridBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> TimetableGridFilterBackend43990826[arrowhead=none];
RoomPicturesBackend1526360619 -> TravelTimesBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> UpdateBuildingBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> UpdateCourseOfferingBackend1624300373[arrowhead=none];
RoomPicturesBackend1526360619 -> UpdateDepartmentBackend1360869250[arrowhead=none];
RoomPicturesBackend1526360619 -> UpdateInstructorAttributeBackend1334400992[arrowhead=none];
RoomPicturesBackend1526360619 -> UpdateRoomDepartmentsBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> UpdateRoomFeatureBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> UpdateRoomGroupBackend1526360619[arrowhead=none];
RoomPicturesBackend1526360619 -> UserInfoBackend1058982626[arrowhead=none];
RoomPicturesBackend1526360619 -> VersionInfoBackend1058982626[arrowhead=none];
RoomPicturesBackend1526360619 -> WeekSelectorBackend2107708513[arrowhead=none];
RoomPropertiesBackend1526360619 -> AttachmentType629358305[label="execute() -> listTypes()"];
RoomPropertiesBackend1526360619 -> Building629358305[label="execute() -> findAll()"];
RoomPropertiesBackend1526360619 -> EventServiceProvider629358305[label="execute() -> findAll()"];
RoomPropertiesBackend1526360619 -> ExamType629358305[label="execute() -> findAllApplicable()"];
RoomPropertiesBackend1526360619 -> RoomGroup629358305[label="execute() -> getAllRoomGroupsForSession()"];
RoomPropertiesBackend1526360619 -> RoomPicturesBackend1526360619[label="execute() -> getPictureType()"];
RoomPropertiesBackend1526360619 -> RoomType629358305[label="execute() -> findAll()"];
RoomPropertiesInterface759770151 -> AcademicSessionInterface759770151[label="iFutureSessions
[0..*]"];
RoomPropertiesInterface759770151 -> AcademicSessionInterface759770151[label="iSession
[0..1]"];
RoomPropertiesInterface759770151 -> AttachmentTypeInterface759770151[label="iPictureTypes
[0..*]"];
RoomPropertiesInterface759770151 -> BuildingInterface759770151[label="iBuildings
[0..*]"];
RoomPropertiesInterface759770151 -> DepartmentInterface759770151[label="iDepartments
[0..*]"];
RoomPropertiesInterface759770151 -> EventServiceProviderInterface4669270[label="iEventServiceProviders
[0..*]"];
RoomPropertiesInterface759770151 -> ExamTypeInterface759770151[label="iExamTypes
[0..*]"];
RoomPropertiesInterface759770151 -> FeatureInterface759770151[label="iFeatures
[0..*]"];
RoomPropertiesInterface759770151 -> FeatureTypeInterface759770151[label="iFeatureTypes
[0..*]"];
RoomPropertiesInterface759770151 -> GroupInterface759770151[label="iGroups
[0..*]"];
RoomPropertiesInterface759770151 -> PreferenceInterface759770151[label="iPreferences
[0..*]"];
RoomPropertiesInterface759770151 -> RoomSharingDisplayMode759770151[label="iModes
[0..*]"];
RoomPropertiesInterface759770151 -> RoomTypeInterface759770151[label="iRoomTypes
[0..*]"];
RoomPropertyInterface759770151 -> DepartmentInterface759770151[arrowhead=none, arrowtail=empty, dir=both];
RoomPropertyInterface759770151 -> FeatureInterface759770151[arrowhead=none, arrowtail=empty, dir=both];
RoomPropertyInterface759770151 -> GroupInterface759770151[arrowhead=none, arrowtail=empty, dir=both];
RoomSharingExport876794133 -> Location629358305[label="saveXml() -> findAll()"];
RoomSharingImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
RoomSharingImport876794133 -> Solution629358305[label="loadXml() -> hasTimetable()"];
RoomSharingRequest759770151 -> RoomSharingModel759770151[label="iModel
[0..1]"];
RoomUpdateBackend1526360619 -> Department629358305[label="lookuDepartment() -> findByDeptCode()"];
RoomUpdateBackend1526360619 -> PeriodPreferencesBackend1526360619[label="execute() -> loadPeriodPreferences()"];
RoomUpdateBackend1526360619 -> RoomDetailsBackend1526360619[label="execute() -> load()"];
RoomUpdateRpcRequest759770151 -> RoomDetailInterface759770151[label="iRoom
[0..1]"];
Rooms82359199 -> RoomFeatures82359199[arrowhead=none, arrowtail=empty, dir=both];
Rooms82359199 -> RoomGroups82359199[arrowhead=none, arrowtail=empty, dir=both];
Rooms82359199 -> RoomsExportCsv82359199[arrowhead=none, arrowtail=empty, dir=both];
Rooms82359199 -> RoomsExportJson82359199[arrowhead=none, arrowtail=empty, dir=both];
Rooms82359199 -> RoomsExportPdf82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomsConnector537604450 -> AttachmentType629358305[label="updatePicture() -> findByReference()"];
RoomsConnector537604450 -> FilterRpcRequest4669270[label="doGet() -> addOption()"];
RoomsConnector537604450 -> RoomDetailsBackend1526360619[label="doGet() -> enumarate()"];
RoomsExportPdf82359199 -> RoomFeaturesExportPdf82359199[arrowhead=none, arrowtail=empty, dir=both];
RoomsExportPdf82359199 -> RoomGroupsExportPdf82359199[arrowhead=none, arrowtail=empty, dir=both];
SaveDataBackend1850307226 -> AssignClassInstructorsBackend1270204417[label="execute() -> getTable()"];
SaveDataBackend1850307226 -> Debug1738245203[label="execute() -> info()"];
SaveDataBackend330628327 -> AdminBackend1542390228[label="execute() -> getTable()"];
SaveDataGoToNextRpcRequest1850307226 -> AssignClassInstructorsBackend1270204417[label="execute() -> getTable()"];
SaveDataGoToNextRpcRequest1850307226 -> Debug1738245203[label="execute() -> info()"];
SaveDataGoToNextRpcRequest2051236629 -> AssignClassInstructorsInterface1000739671[label="iData
[0..1]"];
SaveDataGoToPreviousRpcRequest1850307226 -> AssignClassInstructorsBackend1270204417[label="execute() -> getTable()"];
SaveDataGoToPreviousRpcRequest1850307226 -> Debug1738245203[label="execute() -> info()"];
SaveDataGoToPreviousRpcRequest2051236629 -> AssignClassInstructorsInterface1000739671[label="iData
[0..1]"];
SaveDataRpcRequest2051236629 -> AssignClassInstructorsInterface1000739671[label="iData
[0..1]"];
SaveDataRpcRequest745105542 -> SimpleEditInterface1000739671[label="iData
[0..1]"];
SaveInstructorSurveyBackend1948231384 -> Course21643374[label="execute() -> getCustomField()"];
SaveInstructorSurveyBackend1948231384 -> PreferenceLevel629358305[label="execute() -> getPreferenceLevel()"];
SaveOrApproveEventRpcRequest4669270 -> ApproveEventRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
SaveOrApproveEventRpcRequest4669270 -> EventInterface1000739671[label="iEvent
[0..1]"];
SaveOrApproveEventRpcRequest4669270 -> SaveEventRpcRequest4669270[arrowhead=none, arrowtail=empty, dir=both];
SaveOrApproveEventRpcResponse4669270 -> EventInterface1000739671[label="iEvent
[0..1]"];
SaveOrApproveEventRpcResponse4669270 -> EventServiceProviderInterface4669270[label="iAddedServices
[0..*]"];
SaveOrApproveEventRpcResponse4669270 -> EventServiceProviderInterface4669270[label="iRemovedServices
[0..*]"];
SaveOrApproveEventRpcResponse4669270 -> MeetingInterface4669270[label="iApprovedMeetings
[0..*]"];
SaveOrApproveEventRpcResponse4669270 -> MeetingInterface4669270[label="iCancelledMeetings
[0..*]"];
SaveOrApproveEventRpcResponse4669270 -> MeetingInterface4669270[label="iCreatedMeetings
[0..*]"];
SaveOrApproveEventRpcResponse4669270 -> MeetingInterface4669270[label="iDeletedMeetings
[0..*]"];
SaveOrApproveEventRpcResponse4669270 -> MeetingInterface4669270[label="iUpdatedMeetings
[0..*]"];
SaveOrApproveEventRpcResponse4669270 -> MessageInterface4669270[label="iMessages
[0..*]"];
SaveOrApproveEventRpcResponse4669270 -> NoteInterface4669270[label="iNotes
[0..*]"];
SaveOrUpdateScriptBackend54906482 -> LoadAllScriptsBackend54906482[label="execute() -> load()"];
SaveOrUpdateScriptBackend54906482 -> _BaseRootDAO595338686[label="execute() -> get()"];
SaveOrUpdateScriptRpcRequest15436791 -> ScriptInterface1000739671[label="iScript
[0..1]"];
SaveRecordBackend330628327 -> AcademicAreas1542390228[arrowhead=none];
SaveRecordBackend330628327 -> AcademicClassifications1542390228[arrowhead=none];
SaveRecordBackend330628327 -> Advisors1542390228[arrowhead=none];
SaveRecordBackend330628327 -> AttachmentTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> Campuses1542390228[arrowhead=none];
SaveRecordBackend330628327 -> Concentrations1542390228[arrowhead=none];
SaveRecordBackend330628327 -> ContactCategories1542390228[arrowhead=none];
SaveRecordBackend330628327 -> CourseCreditFormats1542390228[arrowhead=none];
SaveRecordBackend330628327 -> CourseCreditTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> CourseCreditUnits1542390228[arrowhead=none];
SaveRecordBackend330628327 -> CourseTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> DefaultSettings1542390228[arrowhead=none];
SaveRecordBackend330628327 -> Degrees1542390228[arrowhead=none];
SaveRecordBackend330628327 -> DurationTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> EventDateMappings1542390228[arrowhead=none];
SaveRecordBackend330628327 -> EventDefaults1542390228[arrowhead=none];
SaveRecordBackend330628327 -> EventStatuses1542390228[arrowhead=none];
SaveRecordBackend330628327 -> ExaminationStatuses1542390228[arrowhead=none];
SaveRecordBackend330628327 -> ExaminationTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> InstructionalMethods1542390228[arrowhead=none];
SaveRecordBackend330628327 -> InstructorAttributeTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> InstructorRoles1542390228[arrowhead=none];
SaveRecordBackend330628327 -> InstructorSurveyNoteTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> LearningManagementSystemInfos1542390228[arrowhead=none];
SaveRecordBackend330628327 -> Loggers1542390228[arrowhead=none];
SaveRecordBackend330628327 -> Majors1542390228[arrowhead=none];
SaveRecordBackend330628327 -> Minors1542390228[arrowhead=none];
SaveRecordBackend330628327 -> OfferingConsentTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> OverrideTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> Permissions1542390228[arrowhead=none];
SaveRecordBackend330628327 -> PointInTimeDataSnapshots1542390228[arrowhead=none];
SaveRecordBackend330628327 -> PositionTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> PreferenceLevels1542390228[arrowhead=none];
SaveRecordBackend330628327 -> Programs1542390228[arrowhead=none];
SaveRecordBackend330628327 -> RoomFeatureTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> RoomTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> ServiceProviders1542390228[arrowhead=none];
SaveRecordBackend330628327 -> SolverInfoDefs1542390228[arrowhead=none];
SaveRecordBackend330628327 -> SolverParameterDefs1542390228[arrowhead=none];
SaveRecordBackend330628327 -> SolverParameterGroups1542390228[arrowhead=none];
SaveRecordBackend330628327 -> SponsoringOrganizations1542390228[arrowhead=none];
SaveRecordBackend330628327 -> StandardEventNotes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> StudentAccommodations1542390228[arrowhead=none];
SaveRecordBackend330628327 -> StudentGroupTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> StudentGroups1542390228[arrowhead=none];
SaveRecordBackend330628327 -> StudentSchedulingStatusTypes1542390228[arrowhead=none];
SaveRecordBackend330628327 -> SubjectAreas1542390228[arrowhead=none];
SaveRecordBackend330628327 -> TeachingResponsibilities1542390228[arrowhead=none];
SaveRecordBackend330628327 -> UserRoles1542390228[arrowhead=none];
SaveRecordRpcRequest745105542 -> DeleteRecordRpcRequest745105542[arrowhead=none, arrowtail=empty, dir=both];
SaveRecordRpcRequest745105542 -> Record745105542[label="iRecord
[0..1]"];
SaveRequestsRpcRequest1458658222 -> Request1458658222[label="iRequests
[0..*]"];
SaveTaskBackend54906482 -> CalendarUtils1821660490[label="execute() -> date2dayOfYear()"];
SaveTaskBackend54906482 -> GetTasksBackend54906482[label="execute() -> getTask()"];
SaveTaskBackend54906482 -> TaskInterface1000739671[label="execute() -> getParameter()"];
SaveTaskBackend54906482 -> TimetableManager629358305[label="execute() -> findByExternalId()"];
SaveTaskDetailsRpcRequest160962237 -> TaskInterface1000739671[label="iTask
[0..1]"];
SaveTeachingRequestsBackend1334400992 -> Department629358305[label="execute() -> isInstructorSchedulingCommitted()"];
SavedHqlExportToCSV1255872879 -> AdminExportToCSV1542390228[arrowhead=none];
SavedHqlExportToCSV1255872879 -> AdvisorConfirmationExporter589151447[arrowhead=none];
SavedHqlExportToCSV1255872879 -> BufferedPrinter2109884156[arrowhead=none];
SavedHqlExportToCSV1255872879 -> CSVPrinter2109884156[arrowhead=none];
SavedHqlExportToCSV1255872879 -> EventEnrollmentExport330191797[arrowhead=none];
SavedHqlExportToCSV1255872879 -> EventsExportEventsToCSV330191797[label="reference() -> reference()", arrowhead=none];
SavedHqlExportToCSV1255872879 -> EventsExportEventsToICal330191797[label="reference() -> reference()", arrowhead=none];
SavedHqlExportToCSV1255872879 -> EventsExportEventsToJSON330191797[label="reference() -> reference()", arrowhead=none];
SavedHqlExportToCSV1255872879 -> EventsExportEventsToPDF330191797[label="reference() -> reference()", arrowhead=none];
SavedHqlExportToCSV1255872879 -> EventsExportMeetingsToCSV330191797[label="reference() -> reference()", arrowhead=none];
SavedHqlExportToCSV1255872879 -> EventsExportMeetingsToPDF330191797[label="reference() -> reference()", arrowhead=none];
SavedHqlExportToCSV1255872879 -> EventsExporter330191797[arrowhead=none];
SavedHqlExportToCSV1255872879 -> ExportBuildingsPDF1526360619[arrowhead=none];
SavedHqlExportToCSV1255872879 -> ExportDepartmentsPDF1360869250[arrowhead=none];
SavedHqlExportToCSV1255872879 -> ExportPublishedSectioningSolutionXML64367429[arrowhead=none];
SavedHqlExportToCSV1255872879 -> ExportServletHelper2109884156[arrowhead=none];
SavedHqlExportToCSV1255872879 -> ExportSolutionXML64367429[arrowhead=none];
SavedHqlExportToCSV1255872879 -> HQLExportXML1003987616[arrowhead=none];
SavedHqlExportToCSV1255872879 -> HibernateUtil2052906881[label="execute() -> escapeSql()"];
SavedHqlExportToCSV1255872879 -> HttpParams814171373[arrowhead=none];
SavedHqlExportToCSV1255872879 -> InstructorSurveysXLS77043836[arrowhead=none];
SavedHqlExportToCSV1255872879 -> JSONPrinter2109884156[arrowhead=none];
SavedHqlExportToCSV1255872879 -> PDFPrinter2109884156[arrowhead=none];
SavedHqlExportToCSV1255872879 -> PointInTimeDataReportsExportToCSV1618705082[arrowhead=none];
SavedHqlExportToCSV1255872879 -> QParams814171373[arrowhead=none];
SavedHqlExportToCSV1255872879 -> RoomFeaturesExportCSV1155462[arrowhead=none];
SavedHqlExportToCSV1255872879 -> RoomGroupsExportCSV1155462[arrowhead=none];
SavedHqlExportToCSV1255872879 -> RoomsExportCSV1155462[label="reference() -> reference()", arrowhead=none];
SavedHqlExportToCSV1255872879 -> RoomsExportJSON1155462[label="reference() -> reference()", arrowhead=none];
SavedHqlExportToCSV1255872879 -> RoomsExportPDF1155462[label="reference() -> reference()", arrowhead=none];
SavedHqlExportToCSV1255872879 -> RoomsExporter1155462[arrowhead=none];
SavedHqlExportToCSV1255872879 -> SavedHQL629358305[label="export() -> isSet()"];
SavedHqlExportToCSV1255872879 -> SavedHqlExportToJSON1255872879[arrowhead=none, arrowtail=empty, dir=both];
SavedHqlExportToCSV1255872879 -> SavedHqlExportToXLS1255872879[arrowhead=none, arrowtail=empty, dir=both];
SavedHqlExportToCSV1255872879 -> ScriptExportXML54906482[arrowhead=none];
SavedHqlExportToCSV1255872879 -> SectioningReportsExporter373406240[arrowhead=none];
SavedHqlExportToCSV1255872879 -> StudentSchedulingDashboardExportCSV2111147082[arrowhead=none];
SavedHqlExportToCSV1255872879 -> TableExporter64367429[arrowhead=none];
SavedHqlExportToCSV1255872879 -> TeachingAssignmentsExportCSV77043836[arrowhead=none];
SavedHqlExportToCSV1255872879 -> TeachingRequestsExportCSV77043836[arrowhead=none];
SavedHqlExportToCSV1255872879 -> TestHqlExportToCSV1255872879[arrowhead=none];
SavedHqlExportToCSV1255872879 -> XLSPrinter2109884156[arrowhead=none];
Saver1944833282 -> QueryLog629358305[label="iQueries
[0..*]"];
Saver1944833282 -> _BaseRootDAO595338686[label="run() -> createNewSession()"];
SchedulingAssistant539497787 -> SchedulingDashboard539497787[arrowhead=none, arrowtail=empty, dir=both];
SchedulingAssistant539497787 -> SchedulingReports539497787[arrowhead=none, arrowtail=empty, dir=both];
SchedulingAssistant539497787 -> SolverServerService1058021598[label="solverServerService
[1]"];
SchedulingSubpart629358305 -> BaseClass_595338686[label="cloneDeep() -> addTochildClasses()"];
SchedulingSubpart629358305 -> BasePreferenceGroup595338686[label="cloneWithPreferences() -> addTopreferences()"];
SchedulingSubpart629358305 -> CourseCreditUnitConfig629358305[label="clone() -> clone()"];
SchedulingSubpart629358305 -> MeetingCountingDuration1488568904[arrowhead=none];
SchedulingSubpart629358305 -> MinutesPerWeek1488568904[arrowhead=none];
SchedulingSubpart629358305 -> SchedulingSubpartComparator1628636464[label="getSchedulingSubpartSuffix() -> compare()"];
SchedulingSubpart629358305 -> TeachingRequest629358305[label="effectivePreferences() -> canCombine()"];
SchedulingSubpart629358305 -> TimePref629358305[label="fixDurationInTimePreferences() -> clone()"];
SchedulingSubpartEdit317154439 -> DistributionPreferenceSubpart317154439[arrowhead=none, arrowtail=empty, dir=both];
SchedulingSubpartEdit317154439 -> InstrOfferingConfigEditSubpart317154439[arrowhead=none, arrowtail=empty, dir=both];
SchedulingSubpartEdit317154439 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
SchedulingSubpartEdit317154439 -> SchedulingSubpartDetailClearClassPreferences317154439[arrowhead=none, arrowtail=empty, dir=both];
SchedulingSubpartEdit317154439 -> SchedulingSubpartEditClearPreferences317154439[arrowhead=none, arrowtail=empty, dir=both];
ScriptConnector537604450 -> ScriptExecution54906482[label="doPost() -> executeItem()"];
ScriptConnector537604450 -> SolverServerService1058021598[label="solverServerService
[1]"];
ScriptConnector537604450 -> _BaseRootDAO595338686[label="doPost() -> get()"];
ScriptExecution54906482 -> TaskExecutionItem54906482[arrowhead=none, arrowtail=empty, dir=both];
SearchRoomFeaturesRequest759770151 -> RoomFilterRpcRequest4669270[label="iFilter
[0..1]"];
SearchRoomGroupsRequest759770151 -> RoomFilterRpcRequest4669270[label="iFilter
[0..1]"];
SectionMatcher2061009026 -> Formats1821660490[label="match() -> getDateFormat()"];
SectioningReportsBackend373406240 -> Constants1821660490[label="execute() -> getDayOfWeek()"];
SectioningReportsBackend373406240 -> DateUtils1821660490[label="execute() -> getDate()"];
SectioningReportsBackend373406240 -> Entity535535422[label="execute() -> newBuilder()"];
SectioningReportsBackend373406240 -> SolverServerService1058021598[label="solverServerService
[1]"];
SectioningReportsBackend373406240 -> _BaseRootDAO595338686[label="execute() -> get()"];
SectioningStatusFilterAction1580621848 -> AdvisorCourseRequestsSubmit589151447[arrowhead=none];
SectioningStatusFilterAction1580621848 -> AdvisorCourseRequestsValidate589151447[arrowhead=none];
SectioningStatusFilterAction1580621848 -> AdvisorGetCourseRequests589151447[arrowhead=none];
SectioningStatusFilterAction1580621848 -> ApproveEnrollmentsAction91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> CalendarExport91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> ChangeStudentGroup91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> ChangeStudentPreferences91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> ChangeStudentStatus91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> Check2045803708[arrowhead=none];
SectioningStatusFilterAction1580621848 -> CheckAssignmentAction1584910327[arrowhead=none];
SectioningStatusFilterAction1580621848 -> CheckCourses209857912[arrowhead=none];
SectioningStatusFilterAction1580621848 -> CheckCriticalCourses126119667[arrowhead=none];
SectioningStatusFilterAction1580621848 -> CheckEligibility209857912[arrowhead=none];
SectioningStatusFilterAction1580621848 -> CheckEnrollmentConsistencyAction91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> ClassAssignmentChanged91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> EnrollStudent91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> FilterRpcRequest4669270[label="iRequest
[0..1]"];
SectioningStatusFilterAction1580621848 -> FindAssignmentAction1584910327[arrowhead=none];
SectioningStatusFilterAction1580621848 -> FindEnrollmentInfoAction1580621848[arrowhead=none];
SectioningStatusFilterAction1580621848 -> FindOnlineSectioningLogAction1580621848[arrowhead=none];
SectioningStatusFilterAction1580621848 -> FindStudentInfoAction1580621848[arrowhead=none];
SectioningStatusFilterAction1580621848 -> GenerateSectioningReport209857912[arrowhead=none];
SectioningStatusFilterAction1580621848 -> GetDegreePlans209857912[arrowhead=none];
SectioningStatusFilterAction1580621848 -> GetInfo209857912[arrowhead=none];
SectioningStatusFilterAction1580621848 -> GetReservationsAction1580621848[arrowhead=none];
SectioningStatusFilterAction1580621848 -> GetStudentPreferences209857912[arrowhead=none];
SectioningStatusFilterAction1580621848 -> HibernateUtil2052906881[label="suggestions() -> addDate()"];
SectioningStatusFilterAction1580621848 -> InstructionalMethod629358305[label="load() -> findAll()"];
SectioningStatusFilterAction1580621848 -> ListClasses209857912[arrowhead=none];
SectioningStatusFilterAction1580621848 -> ListCourseOfferings209857912[arrowhead=none];
SectioningStatusFilterAction1580621848 -> MassCancelAction91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> NotifyStudentAction91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> PersistExpectedSpacesAction91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> RejectEnrollmentsAction91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> ReloadAllData91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> RequestStudentUpdates2037228697[arrowhead=none];
SectioningStatusFilterAction1580621848 -> SaveStudentRequests91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> SpecialRegistrationCancel1865969213[arrowhead=none];
SectioningStatusFilterAction1580621848 -> SpecialRegistrationChangeGradeModes1865969213[arrowhead=none];
SectioningStatusFilterAction1580621848 -> SpecialRegistrationEligibility1865969213[arrowhead=none];
SectioningStatusFilterAction1580621848 -> SpecialRegistrationRequestVariableTitleCourse1865969213[arrowhead=none];
SectioningStatusFilterAction1580621848 -> SpecialRegistrationRetrieveAll1865969213[arrowhead=none];
SectioningStatusFilterAction1580621848 -> SpecialRegistrationRetrieveGradeModes1865969213[arrowhead=none];
SectioningStatusFilterAction1580621848 -> SpecialRegistrationSubmit1865969213[arrowhead=none];
SectioningStatusFilterAction1580621848 -> SpecialRegistrationUpdate1865969213[arrowhead=none];
SectioningStatusFilterAction1580621848 -> StatusPageSuggestionsAction1580621848[arrowhead=none];
SectioningStatusFilterAction1580621848 -> StudentEmail91943020[arrowhead=none];
SectioningStatusFilterAction1580621848 -> Update2045803708[arrowhead=none];
SectioningStatusFilterAction1580621848 -> Validate2045803708[arrowhead=none];
SectioningStatusFilterAction1580621848 -> WaitListCheckValidation1865969213[arrowhead=none];
SectioningStatusFilterAction1580621848 -> WaitListSubmitOverrides1865969213[arrowhead=none];
SectioningStatusFilterAction1580621848 -> WaitlistedOnlineSectioningAction91943020[arrowhead=none];
SectioningStatusFilterBackend373406240 -> FilterRpcRequest4669270[label="execute() -> getOption()"];
SectioningStatusFilterBackend373406240 -> ProxyHolder1058021598[label="execute() -> isValid()"];
SectioningStatusFilterBackend373406240 -> SolverServerService1058021598[label="solverServerService
[1]"];
SectioningStatusFilterBackend373406240 -> _BaseRootDAO595338686[label="execute() -> get()"];
SelectedAssignmentsRequest1582234977 -> SelectedAssignment1582234977[label="iAssignments
[0..*]"];
ServerTimeZoneBackend1801756021 -> _BaseRootDAO595338686[label="execute() -> findAll()"];
SessionConfig629358305 -> _BaseRootDAO595338686[label="toProperties() -> createNewSession()"];
SessionImport876794133 -> DepartmentStatusType629358305[label="loadXml() -> findByRef()"];
SessionInfoBackend1058982626 -> _BaseRootDAO595338686[label="execute() -> get()"];
SimpleEditInterface1000739671 -> Field745105542[label="iFields
[0..*]"];
SimpleEditInterface1000739671 -> PageName745105542[label="iPageName
[0..1]"];
SimpleEditInterface1000739671 -> Record745105542[label="iRecords
[0..*]"];
SimpleEditRpcRequest2051236629 -> GetPageNameRpcRequest2051236629[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest2051236629 -> LoadDataRpcRequest2051236629[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest2051236629 -> RemoveAllClassInstructorsDataRpcRequest2051236629[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest2051236629 -> SaveDataGoToNextRpcRequest2051236629[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest2051236629 -> SaveDataGoToPreviousRpcRequest2051236629[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest2051236629 -> SaveDataRpcRequest2051236629[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest745105542 -> GetFilterRpcRequest745105542[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest745105542 -> GetPageNameRpcRequest745105542[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest745105542 -> LoadDataRpcRequest745105542[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest745105542 -> LoadRecordRpcRequest745105542[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest745105542 -> SaveDataRpcRequest745105542[arrowhead=none, arrowtail=empty, dir=both];
SimpleEditRpcRequest745105542 -> SaveRecordRpcRequest745105542[arrowhead=none, arrowtail=empty, dir=both];
SimpleExaminationPermission493742050 -> ExamType629358305[label="check() -> findAllUsed()"];
SingleRequest1458658222 -> IncludeLine1458658222[label="iClasses
[0..*]"];
SolutionChangesBackend43990826 -> BackTracker779606258[label="execute() -> markForBack()"];
SolutionChangesBackend43990826 -> SolverPageBackend43990826[label="execute() -> fillSolverWarnings()"];
SolutionChangesBackend43990826 -> TableCellItems442142882[label="execute() -> add()"];
SolutionChangesFilterBackend43990826 -> AssignedClassesFilterResponse926228794[label="execute() -> addPreference()"];
SolutionChangesRequest926228794 -> FilterInterface1000739671[label="iFilter
[0..1]"];
SolutionLog366849455 -> ProgressMessage366849455[label="iLog
[0..*]"];
SolverAllocatedMemoryBackend1801756021 -> SolverServerService1058021598[label="solverServerService
[1]"];
SolverContainerWrapper398558421 -> noqualifiedname1905501234[label="iContainer
[0..1]"];
SolverInfoBackend1058982626 -> ManageSolversAction1976086910[label="getInfo() -> getSolverOwner()"];
SolverInfoBackend1058982626 -> StudentSectioningSolverService1058021598[label="studentSectioningSolverService
[1]"];
SolverInfoBackend1058982626 -> _BaseRootDAO595338686[label="getInfo() -> get()"];
SolverLogPageBackend43990826 -> Solution629358305[label="execute() -> getInfo()"];
SolverLogPageBackend43990826 -> SolutionLog366849455[label="execute() -> addMessage()"];
SolverLogPageBackend43990826 -> _BaseRootDAO595338686[label="execute() -> get()"];
SolverLogPageResponse366849455 -> ProgressMessage366849455[label="iLog
[0..*]"];
SolverLogPageResponse366849455 -> SolutionLog366849455[label="iSolutionLogs
[0..*]"];
SolverPageBackend43990826 -> Exam629358305[label="fillAvailableOperations() -> hasTimetable()"];
SolverPageBackend43990826 -> ExamType629358305[label="fillOwners() -> findAllUsedApplicable()"];
SolverPageBackend43990826 -> Formats1821660490[label="fillSolverWarnings() -> getDateFormat()"];
SolverPageBackend43990826 -> Session629358305[label="fillAvailableOperations() -> hasStudentSchedule()"];
SolverPageBackend43990826 -> SolverServerService1058021598[label="solverServerService
[1]"];
SolverPageBackend43990826 -> TimetableManager629358305[label="executeOperation() -> findByExternalId()"];
SolverPageMessages366849455 -> AssignedClassesResponse926228794[arrowhead=none];
SolverPageMessages366849455 -> ConflictStatisticsFilterResponse926228794[arrowhead=none];
SolverPageMessages366849455 -> ListSolutionsResponse926228794[arrowhead=none];
SolverPageMessages366849455 -> PageMessage366849455[label="iPageMessages
[0..*]"];
SolverPageMessages366849455 -> SolverPageResponse366849455[arrowhead=none];
SolverPageMessages366849455 -> SolverReportsResponse926228794[arrowhead=none];
SolverPageMessages366849455 -> TimetableGridResponse602157687[arrowhead=none];
SolverPageMessagesBackend43990826 -> SolverPageBackend43990826[label="execute() -> fillSolverWarnings()"];
SolverParameterGroups1542390228 -> SolverParameterDefs1542390228[arrowhead=none];
SolverParameterGroups1542390228 -> StudentGroups1542390228[arrowhead=none];
SolverReportsBackend43990826 -> RoomType629358305[label="execute() -> findAll()"];
SolverReportsBackend43990826 -> _BaseRootDAO595338686[label="execute() -> get()"];
SolverServerImplementation398558421 -> ApplicationConfig629358305[label="main() -> configureLogging()"];
SolverServerImplementation398558421 -> ApplicationProperties1829907366[label="main() -> getProperty()"];
SolverServerImplementation398558421 -> CourseSolverContainerRemote398558421[label="iCourseSolverContainer
[0..1]"];
SolverServerImplementation398558421 -> ExaminationSolverContainerRemote398558421[label="iExamSolverContainer
[0..1]"];
SolverServerImplementation398558421 -> InstructorSchedulingContainerRemote398558421[label="iInstructorSchedulingContainer
[0..1]"];
SolverServerImplementation398558421 -> MessageLogAppender1821660490[label="main() -> stop()"];
SolverServerImplementation398558421 -> OnlineStudentSchedulingContainer398558421[label="reset() -> getSolver()"];
SolverServerImplementation398558421 -> OnlineStudentSchedulingContainerRemote398558421[label="iOnlineStudentSchedulingContainer
[0..1]"];
SolverServerImplementation398558421 -> OnlineStudentSchedulingGenericUpdater398558421[label="iUpdater
[0..1]"];
SolverServerImplementation398558421 -> RemoteQueueProcessor1094993043[label="iRemoteQueueProcessor
[0..1]"];
SolverServerImplementation398558421 -> RemoteRoomAvailability398558421[label="iRemoteRoomAvailability
[0..1]"];
SolverServerImplementation398558421 -> StudentSectioningPref629358305[label="main() -> updateStudentSectioningPreferences()"];
SolverServerImplementation398558421 -> StudentSolverContainerRemote398558421[label="iStudentSolverContainer
[0..1]"];
SolverServerImplementation398558421 -> UniTimeChannelLookup1342239101[label="main() -> getJGroupsChannel()"];
SolverServerService1058021598 -> AbstractSolverServer398558421[arrowhead=none];
SolverServerService1058021598 -> UniTimeChannelLookup1342239101[label="afterPropertiesSet() -> getJGroupsChannel()"];
SolverSolutionSave676728335 -> SolverSolutionExportCsv676728335[arrowhead=none, arrowtail=empty, dir=both];
SolverSolutionSave676728335 -> SolverSolutionExportXml676728335[arrowhead=none, arrowtail=empty, dir=both];
SpecialRegistrationEligibilityRequest836856674 -> ClassAssignment779165909[label="iClassAssignments
[0..*]"];
SpecialRegistrationEligibilityRequest836856674 -> ErrorMessage779165909[label="iErrors
[0..*]"];
SponsoringOrganizationEdit1530278742 -> Session629358305[label="permissionSession
[1]"];
SponsoringOrganizationEdit1530278742 -> SponsoringOrganizationDelete1530278742[arrowhead=none, arrowtail=empty, dir=both];
Staff629358305 -> Department629358305[label="getDeptName() -> findByDeptCode()"];
StaffImport876794133 -> ChangeLog629358305[label="loadXml() -> addChange()"];
StaffImport876794133 -> PositionType629358305[label="loadXml() -> findByRef()"];
StaffImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
Student629358305 -> AbstractServer1593966791[arrowhead=none];
Student629358305 -> AbstractSolver1792699557[arrowhead=none];
Student629358305 -> CachedClassAssignmentProxy1792699557[arrowhead=none];
Student629358305 -> CommitedClassAssignmentProxy1792699557[arrowhead=none];
Student629358305 -> CourseDemand629358305[label="resetWaitLists() -> isEnrolled()"];
Student629358305 -> InstructorSchedulingSolver68650256[arrowhead=none];
Student629358305 -> Solution629358305[arrowhead=none];
Student629358305 -> StudentSectioningStatus629358305[label="hasSectioningStatusOption() -> hasOption()"];
StudentAccomodationImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
StudentAdvisorsImport876794133 -> BaseStudentDAO595338686[label="loadXml() -> findBySession()"];
StudentAdvisorsImport876794133 -> Roles629358305[label="loadXml() -> findAll()"];
StudentAdvisorsImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
StudentAdvisorsImport876794133 -> StudentSectioningQueue629358305[label="loadXml() -> studentChanged()"];
StudentEnrollmentExport876794133 -> Class_629358305[label="saveXml() -> getExternalId()"];
StudentEnrollmentImport876794133 -> ChangeLog629358305[label="loadXml() -> addChange()"];
StudentEnrollmentImport876794133 -> Class_629358305[label="loadXml() -> getExternalId()"];
StudentEnrollmentImport876794133 -> DepartmentStatusType629358305[label="loadXml() -> canPreRegisterStudents()"];
StudentEnrollmentImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
StudentEnrollmentImport876794133 -> StudentSectioningQueue629358305[label="loadXml() -> studentChanged()"];
StudentGroupImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
StudentGroupImport876794133 -> StudentGroupType629358305[label="loadXml() -> findByReference()"];
StudentImport876794133 -> BaseAcademicArea595338686[label="updateStudentMajors() -> addToposMajors()"];
StudentImport876794133 -> BasePosMajor595338686[label="updateStudentMajors() -> addToacademicAreas()"];
StudentImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
StudentImport876794133 -> StudentSectioningQueue629358305[label="loadXml() -> studentChanged()"];
StudentMatcher1932076738 -> XSection220419187[label="match() -> isToIgnoreStudentConflictsWith()"];
StudentMatcher1932076738 -> XStudent220419187[label="iStudent
[0..1]"];
StudentMatcher1932076738 -> XSubpart220419187[label="match() -> getCreditValue()"];
StudentMatcher83644043 -> AcademicSessionInfo1032738488[label="iSession
[0..1]"];
StudentSchedulingCanEnroll539497787 -> DepartmentStatusType629358305[label="check() -> can()"];
StudentSchedulingCanRegister539497787 -> DepartmentStatusType629358305[label="check() -> can()"];
StudentSchedulingCanRequirePreferences539497787 -> StudentSectioningStatus629358305[label="check() -> hasOption()"];
StudentSchedulingStatusExport876794133 -> StudentSectioningStatus629358305[label="saveXml() -> hasOption()"];
StudentSchedulingStatusImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
StudentSchedulingStatusImport876794133 -> _BaseRootDAO595338686[label="loadXml() -> findAll()"];
StudentSectioningContext1896556946 -> CancelSpecialRegistrationRequest836856674[arrowhead=none, arrowtail=empty, dir=both];
StudentSectioningContext1896556946 -> ChangeGradeModesRequest836856674[arrowhead=none, arrowtail=empty, dir=both];
StudentSectioningContext1896556946 -> CourseRequestInterface1000739671[arrowhead=none, arrowtail=empty, dir=both];
StudentSectioningContext1896556946 -> RetrieveAllSpecialRegistrationsRequest836856674[arrowhead=none, arrowtail=empty, dir=both];
StudentSectioningContext1896556946 -> RetrieveAvailableGradeModesRequest836856674[arrowhead=none, arrowtail=empty, dir=both];
StudentSectioningContext1896556946 -> SpecialRegistrationEligibilityRequest836856674[arrowhead=none, arrowtail=empty, dir=both];
StudentSectioningContext1896556946 -> SubmitSpecialRegistrationRequest836856674[arrowhead=none, arrowtail=empty, dir=both];
StudentSectioningContext1896556946 -> UpdateSpecialRegistrationRequest836856674[arrowhead=none, arrowtail=empty, dir=both];
StudentSectioningContext1896556946 -> VariableTitleCourseRequest836856674[arrowhead=none, arrowtail=empty, dir=both];
StudentSectioningImport876794133 -> BaseAcademicArea595338686[label="loadXml() -> addToposMajors()"];
StudentSectioningImport876794133 -> BasePosMajor595338686[label="loadXml() -> addToacademicAreas()"];
StudentSectioningImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
StudentSectioningImport876794133 -> Student629358305[label="loadXml() -> resetWaitLists()"];
StudentSectioningImport876794133 -> StudentSectioningQueue629358305[label="loadXml() -> studentChanged()"];
StudentSectioningImport876794133 -> StudentSectioningStatus629358305[label="loadXml() -> findAll()"];
StudentSectioningImport876794133 -> _BaseRootDAO595338686[label="loadXml() -> findAll()"];
StudentSectioningSolverDashboard539497787 -> StudentSectioningSolverReports539497787[arrowhead=none, arrowtail=empty, dir=both];
StudentSectioningSolverService1058021598 -> ApplicationProperties1829907366[label="createConfig() -> getProperty()"];
StudentSectioningSolverService1058021598 -> SolverServerService1058021598[label="solverServerService
[1]"];
StudentSectioningSolverService1058021598 -> _BaseRootDAO595338686[label="createConfig() -> get()"];
StudentSectioningStatusDAO573395717 -> _BaseRootDAO595338686[label="findAll() -> findAll()"];
StudentSolverContainer398558421 -> StudentSolverContainerRemote398558421[arrowhead=none, arrowtail=empty, dir=both];
StudentSolverContainerRemote398558421 -> _BaseRootDAO595338686[label="invoke() -> closeCurrentThreadSessions()"];
SubjectArea629358305 -> DefaultAcademicSessionLookup1821660490[arrowhead=none];
SubjectArea629358305 -> Department629358305[label="getUserSubjectAreas() -> getUserDepartments()"];
SubjectArea629358305 -> NaturalOrderComparator1738245203[label="compareTo() -> compare()"];
SubjectArea629358305 -> Session629358305[label="findUsingCampusYearTermExternalSubjectAbbreviation() -> getSessionUsingInitiativeYearTerm()"];
SubjectArea629358305 -> _BaseRootDAO595338686[label="getAllSubjectAreas() -> getQuery()"];
SubjectAreaEdit1530278742 -> Department629358305[label="permissionDepartment
[1]"];
SubjectAreaEdit1530278742 -> SubjectAreaChangeDepartment1530278742[arrowhead=none, arrowtail=empty, dir=both];
SubjectAreaEdit1530278742 -> SubjectAreaDelete1530278742[arrowhead=none, arrowtail=empty, dir=both];
SubjectAreaImport876794133 -> ChangeLog629358305[label="loadXml() -> addChange()"];
SubjectAreaImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
SubjectAreas1542390228 -> BaseDepartmentDAO595338686[label="load() -> findBySession()"];
SubjectAreas1542390228 -> Department629358305[label="load() -> getUserDepartments()"];
SubjectAreas1542390228 -> DepartmentalInstructor629358305[label="update() -> findByPuidDepartmentId()"];
SubmitSpecialRegistrationRequest836856674 -> ClassAssignment779165909[label="iClassAssignments
[0..*]"];
SubmitSpecialRegistrationRequest836856674 -> CourseRequestInterface1000739671[label="iCourses
[0..1]"];
SubmitSpecialRegistrationRequest836856674 -> ErrorMessage779165909[label="iErrors
[0..*]"];
Suggestion1582234977 -> BtbInstructorInfo1582234977[label="iBtbInstructorConflicts
[0..*]"];
Suggestion1582234977 -> ClassAssignmentDetails1582234977[label="iDifferentAssignments
[0..*]"];
Suggestion1582234977 -> ClassAssignmentDetails1582234977[label="iPlacement
[0..1]"];
Suggestion1582234977 -> ClassAssignmentDetails1582234977[label="iSelectedPlacement
[0..1]"];
Suggestion1582234977 -> ClassAssignmentDetails1582234977[label="iUnresolvedConflicts
[0..*]"];
Suggestion1582234977 -> DistributionInfo1582234977[label="iDistributionConflicts
[0..*]"];
Suggestion1582234977 -> NaturalOrderComparator442142882[label="compareTo() -> compare()"];
Suggestion1582234977 -> StudentConflictInfo1582234977[label="iStudentConflicts
[0..*]"];
Suggestion1582234977 -> TableCellMulti442142882[label="iStudentConflictSummary
[0..1]"];
Suggestion402768419 -> InstructorAssignment402768419[label="iAssignments
[0..*]"];
Suggestion402768419 -> InstructorSchedulingBackendHelper1334400992[label="getAssignments() -> getInstructorAssignments()"];
SuggestionProperties1582234977 -> PreferenceInterface1582234977[label="iPreferences
[0..*]"];
SuggestionProperties1582234977 -> SelectedAssignment1582234977[label="iSelectedAssignments
[0..*]"];
Suggestions1582234977 -> Suggestion1582234977[label="iBaseSuggestion
[0..1]"];
Suggestions1582234977 -> Suggestion1582234977[label="iSuggestions
[0..*]"];
SuggestionsFilterBackend43990826 -> FilterRpcResponse4669270[label="load() -> add()"];
SuggestionsResponse1591923739 -> SuggestionInfo1591923739[label="iAssignment
[0..1]"];
SuggestionsResponse1591923739 -> SuggestionInfo1591923739[label="iDomain
[0..*]"];
SuggestionsResponse1591923739 -> SuggestionInfo1591923739[label="iSuggestions
[0..*]"];
TableCellClassName442142882 -> TableCellClickableClassName442142882[arrowhead=none, arrowtail=empty, dir=both];
TableCellInterface442142882 -> NaturalOrderComparator442142882[label="compareTo() -> compare()"];
TableCellInterface442142882 -> TableCellBoolean442142882[arrowhead=none, arrowtail=empty, dir=both];
TableCellInterface442142882 -> TableCellText442142882[arrowhead=none, arrowtail=empty, dir=both];
TableCellInterface442142882 -> noqualifiedname1905501234[label="iValue
[0..1]"];
TableCellText442142882 -> TableCellClassName442142882[arrowhead=none, arrowtail=empty, dir=both];
TableCellText442142882 -> TableCellItems442142882[arrowhead=none, arrowtail=empty, dir=both];
TableCellText442142882 -> TableCellRooms442142882[arrowhead=none, arrowtail=empty, dir=both];
TableCellText442142882 -> TableCellTime442142882[arrowhead=none, arrowtail=empty, dir=both];
TableInterface1000739671 -> AssignedClassesResponse926228794[arrowhead=none, arrowtail=empty, dir=both];
TableInterface1000739671 -> ListSolutionsResponse926228794[arrowhead=none, arrowtail=empty, dir=both];
TableInterface1000739671 -> TableHeaderIterface442142882[label="iHeader
[0..*]"];
TableInterface1000739671 -> TableRowInterface442142882[label="iRows
[0..*]"];
TaskInterface1000739671 -> ContactInterface4669270[label="iOwner
[0..1]"];
TaskInterface1000739671 -> ScriptInterface1000739671[label="iScript
[0..1]"];
TaskInterface1000739671 -> TaskExecutionInterface160962237[label="iExecutions
[0..*]"];
TaskOptionsBackend54906482 -> DateSelectorBackend2107708513[label="execute() -> listMonths()"];
TaskOptionsBackend54906482 -> LoadAllScriptsBackend54906482[label="execute() -> load()"];
TaskOptionsBackend54906482 -> TaskOptionsInterface160962237[label="execute() -> addScript()"];
TaskOptionsInterface160962237 -> AcademicSessionInfo1924258583[label="iSession
[0..1]"];
TaskOptionsInterface160962237 -> ContactInterface4669270[label="iManager
[0..1]"];
TaskOptionsInterface160962237 -> ScriptInterface1000739671[label="iScripts
[0..*]"];
TaskOptionsInterface160962237 -> SessionMonth4669270[label="iMonths
[0..*]"];
TeachingAssignmentsBackend1334400992 -> Department629358305[label="execute() -> findByDeptCode()"];
TeachingAssignmentsBackend1334400992 -> InstructorQuery586265501[label="execute() -> select()"];
TeachingAssignmentsBackend1334400992 -> QueryInstance1219977658[label="execute() -> query()"];
TeachingAssignmentsBackend1334400992 -> SpringApplicationContextHolder1791609515[label="execute() -> getBean()"];
TeachingAssignmentsDetailBackend1334400992 -> _BaseRootDAO595338686[label="execute() -> get()"];
TeachingAssignmentsPageRequest1591923739 -> TeachingRequestsFilterRpcRequest1591923739[label="iRequest
[0..1]"];
TeachingRequest629358305 -> CourseOffering629358305[label="compareTo() -> compareTo()"];
TeachingRequest629358305 -> Preference629358305[label="canCombine() -> isSame()"];
TeachingRequestDetailBackend1334400992 -> _BaseRootDAO595338686[label="execute() -> get()"];
TeachingRequestInfo1591923739 -> CourseInfo1591923739[label="iCourse
[0..1]"];
TeachingRequestInfo1591923739 -> InstructorInfo1591923739[label="iInstructors
[0..*]"];
TeachingRequestInfo1591923739 -> PreferenceInfo1591923739[label="iAttributePreferences
[0..*]"];
TeachingRequestInfo1591923739 -> PreferenceInfo1591923739[label="iInstructorPreferences
[0..*]"];
TeachingRequestInfo1591923739 -> SectionInfo1591923739[label="iSections
[0..*]"];
TeachingRequestMatcher586265501 -> FilterRpcRequest4669270[label="iFilter
[0..1]"];
TeachingRequestMatcher586265501 -> InstructorInfo1591923739[label="iInstructor
[0..1]"];
TeachingRequestMatcher586265501 -> TeachingRequestInfo1591923739[label="iRequest
[0..1]"];
TeachingRequestsFilterBackend1334400992 -> _BaseRootDAO595338686[label="fixAttributeTypes() -> findAll()"];
TeachingRequestsPageBackend1334400992 -> QueryInstance1209152950[label="execute() -> query()"];
TeachingRequestsPageBackend1334400992 -> RequestQuery586265501[label="execute() -> select()"];
TeachingRequestsPageBackend1334400992 -> SpringApplicationContextHolder1791609515[label="execute() -> getBean()"];
TeachingRequestsPageBackend1334400992 -> SubjectArea629358305[label="execute() -> findByAbbv()"];
TeachingRequestsPagePropertiesBackend1334400992 -> Department629358305[label="execute() -> getUserDepartments()"];
TeachingRequestsPagePropertiesBackend1334400992 -> InstructorAvailabilityModel65396580[label="execute() -> char2id()"];
TeachingRequestsPagePropertiesBackend1334400992 -> RequiredTimeTable779606258[label="execute() -> getTimeGridSize()"];
TeachingRequestsPagePropertiesBackend1334400992 -> SubjectArea629358305[label="execute() -> getUserSubjectAreas()"];
TeachingRequestsPagePropertiesResponse1591923739 -> AttributeTypeInterface1591923739[label="iAttributeTypes
[0..*]"];
TeachingRequestsPagePropertiesResponse1591923739 -> DepartmentInterface1591923739[label="iDepartments
[0..*]"];
TeachingRequestsPagePropertiesResponse1591923739 -> InstructorAvailabilityModel65396580[label="iAvailabilityModel
[0..1]"];
TeachingRequestsPagePropertiesResponse1591923739 -> PreferenceInterface1591923739[label="iPreferences
[0..*]"];
TeachingRequestsPagePropertiesResponse1591923739 -> RoomSharingDisplayMode759770151[label="iModes
[0..*]"];
TeachingRequestsPagePropertiesResponse1591923739 -> SubjectAreaInterface1591923739[label="iSubjecAreas
[0..*]"];
TeachingRequestsPageRequest1591923739 -> TeachingRequestsFilterRpcRequest1591923739[label="iRequest
[0..1]"];
TimeHintBackend1801756021 -> MidtermPeriodPreferenceModel629358305[label="execute() -> load()"];
TimeHintBackend1801756021 -> PeriodPreferenceModel629358305[label="execute() -> load()"];
TimeHintBackend1801756021 -> PreferenceGroup629358305[label="execute() -> effectivePreferences()"];
TimeHintBackend1801756021 -> TimePref629358305[label="execute() -> getRequiredTimeTable()"];
TimePatternModel629358305 -> AvgPrefMix380494733[arrowhead=none];
TimePatternModel629358305 -> FullCoverPrefMix380494733[arrowhead=none];
TimePatternModel629358305 -> MaxUsagePrefMix380494733[arrowhead=none];
TimePatternModel629358305 -> MinMaxPrefMix380494733[arrowhead=none];
TimePatternModel629358305 -> PeriodPreferenceModel629358305[arrowhead=none];
TimePatternModel629358305 -> RoomSharingDisplayMode759770151[label="iModes
[0..*]"];
TimePatternModel629358305 -> RoomSharingModel629358305[arrowhead=none];
TimePatternModel629358305 -> SumPrefMix380494733[arrowhead=none];
TimePatternModel629358305 -> TimePattern629358305[label="iTimePattern
[0..1]"];
TimePref629358305 -> Preference629358305[label="compareTo() -> compareTo()"];
TimePref629358305 -> TimePattern629358305[label="compareTo() -> compareTo()"];
TimetableGridBackend43990826 -> DefaultRoomAvailabilityService1821660490[arrowhead=none];
TimetableGridBackend43990826 -> DepartmentalInstructor629358305[label="execute() -> getName()"];
TimetableGridBackend43990826 -> RoomAvailabilityService1821660490[arrowhead=none];
TimetableGridBackend43990826 -> SolverGroup629358305[label="execute() -> getUserSolverGroups()"];
TimetableGridBackend43990826 -> SolverPageBackend43990826[label="execute() -> fillSolverWarnings()"];
TimetableGridBackend43990826 -> TimetableGridContext43990826[label="execute() -> getInstructionalTypeColor()"];
TimetableGridBackend43990826 -> _BaseRootDAO595338686[label="execute() -> get()"];
TimetableGridFilterBackend43990826 -> _BaseRootDAO595338686[label="execute() -> get()"];
TimetableGridHelper43990826 -> TimetableGridSolutionHelper43990826[arrowhead=none, arrowtail=empty, dir=both];
TimetableGridHelper43990826 -> TimetableGridSolverHelper43990826[arrowhead=none, arrowtail=empty, dir=both];
TimetableGridRequest602157687 -> FilterInterface1000739671[label="iFilter
[0..1]"];
TimetableGridSolutionHelper43990826 -> ClassInfo1355163399[label="createModel() -> countStudentsWeight()"];
TimetableGridSolutionHelper43990826 -> DateUtils1821660490[label="formatDatePattern() -> getDate()"];
TimetableGridSolutionHelper43990826 -> ExactTimeMins629358305[label="createCell() -> getNrSlotsPerMtg()"];
TimetableGridSolutionHelper43990826 -> PreferenceLevel629358305[label="createCell() -> prolog2int()"];
TimetableGridSolutionHelper43990826 -> Query998479413[label="match() -> match()"];
TimetableGridSolutionHelper43990826 -> TimetableGridContext43990826[label="createCell() -> getInstructionalTypeColor()"];
TimetableGridSolverHelper43990826 -> Query998479413[label="match() -> match()"];
TimetableGridSolverHelper43990826 -> StudentGroupInfo1605871111[label="createModel() -> value()"];
TimetableManager629358305 -> Advisor629358305[arrowhead=none];
TimetableManager629358305 -> Department629358305[label="getNotAssignedClasses() -> getNotAssignedClasses()"];
TimetableManager629358305 -> DepartmentalInstructor629358305[arrowhead=none];
TimetableManager629358305 -> EventContact629358305[arrowhead=none];
TimetableManager629358305 -> PitDepartmentalInstructor629358305[arrowhead=none];
TimetableManager629358305 -> Staff629358305[arrowhead=none];
TimetableManager629358305 -> Student629358305[arrowhead=none];
TimetableManager629358305 -> _BaseRootDAO595338686[label="getWithUniqueId() -> get()"];
TimetableManagerEdit1530278742 -> Session629358305[label="permissionSession
[1]"];
TimetableManagerEdit1530278742 -> TimetableManagerDelete1530278742[arrowhead=none, arrowtail=empty, dir=both];
Timetables676728335 -> TimetableGrid676728335[arrowhead=none, arrowtail=empty, dir=both];
TimetablesSolutionCommit676728335 -> CourseSolverContainer398558421[arrowhead=none];
TimetablesSolutionCommit676728335 -> ExaminationSolverContainer398558421[arrowhead=none];
TimetablesSolutionCommit676728335 -> InstructorSchedulingContainer398558421[arrowhead=none];
TimetablesSolutionCommit676728335 -> OnlineStudentSchedulingContainer398558421[arrowhead=none];
TimetablesSolutionCommit676728335 -> SolverContainerWrapper398558421[arrowhead=none];
TimetablesSolutionCommit676728335 -> SolverServerService1058021598[label="solverServerService
[1]"];
TimetablesSolutionCommit676728335 -> StudentSolverContainer398558421[arrowhead=none];
TimetablesSolutionLoad676728335 -> TimetablesSolutionChangeNote676728335[arrowhead=none, arrowtail=empty, dir=both];
TimetablesSolutionLoad676728335 -> TimetablesSolutionDelete676728335[arrowhead=none, arrowtail=empty, dir=both];
TimetablesSolutionLoad676728335 -> TimetablesSolutionExportCsv676728335[arrowhead=none, arrowtail=empty, dir=both];
Tracker1875904956 -> Counter1875904956[label="iCounters
[0..*]"];
TravelTimeResponse1687807301 -> Room1687807301[label="iRooms
[0..*]"];
TravelTimesBackend1526360619 -> Room1687807301[label="save() -> getTravelTime()"];
TravelTimesBackend1526360619 -> TravelTime629358305[label="load() -> populateTravelTimes()"];
TravelTimesBackend1526360619 -> TravelTimeResponse1687807301[label="load() -> addRoom()"];
TravelTimesExport876794133 -> Location629358305[label="saveXml() -> findAll()"];
TravelTimesImport876794133 -> Session629358305[label="loadXml() -> getSessionUsingInitiativeYearTerm()"];
TravelTimesRequest1687807301 -> Room1687807301[label="iRooms
[0..*]"];
UnassignedClassesModel1605871111 -> SolutionUnassignedClassesModel1605871111[arrowhead=none, arrowtail=empty, dir=both];
UnassignedClassesModel1605871111 -> SolverUnassignedClassesModel1605871111[arrowhead=none, arrowtail=empty, dir=both];
UnassignedClassesModel1605871111 -> UnassignedClassRow1605871111[label="iRows
[0..*]"];
UniTimeAction1976086910 -> ManageSolversAction1976086910[arrowhead=none, arrowtail=empty, dir=both];
UniTimeAction1976086910 -> PersonalizedExamReportAction1976086910[arrowhead=none, arrowtail=empty, dir=both];
UniTimeChannelLookup1342239101 -> Debug1738245203[label="getJGroupsChannel() -> error()"];
UniTimeChannelLookup1342239101 -> JGroupsUtils1342239101[label="getJGroupsChannel() -> getConfigurator()"];
UniTimeChannelLookup1342239101 -> SectioningChannelLookup1342239101[arrowhead=none, arrowtail=empty, dir=both];
UniTimePermissionCheck944572514 -> AcademicSessionDelete1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> AddCourseOffering317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> AddExamination1474622403[arrowhead=none];
UniTimePermissionCheck944572514 -> AddNonUnivLocation82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> AddRoom82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> AddSpecialUseRoom82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> AddSpecialUseRoomExternalRoom82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> AdvisorCourseRequests539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> AssignInstructors2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> AssignInstructorsClass2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> BuildingDelete82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> BuildingEdit82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> BuildingList82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> CanUseHardDistributionPrefs317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> CanUseHardPeriodPrefs317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> CanUseHardRoomPrefs317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> CanUseHardTimePrefs317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> ChangePassword1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> ClassAssignment676728335[arrowhead=none];
UniTimePermissionCheck944572514 -> ClassAssignments676728335[arrowhead=none];
UniTimePermissionCheck944572514 -> ClassCancel317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> ClassDeleteNoEnrollmentCheck317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> ClassDetail317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> ClassEdit317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> ConsentApproval539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> CourseOfferingDeleteFromCrossListNoEnrollmentCheck317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> CourseRequests539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> CourseTimetabling676728335[arrowhead=none];
UniTimePermissionCheck944572514 -> CurriculumAdd814515033[arrowhead=none];
UniTimePermissionCheck944572514 -> CurriculumAdmin814515033[arrowhead=none];
UniTimePermissionCheck944572514 -> CurriculumDetail814515033[arrowhead=none];
UniTimePermissionCheck944572514 -> CurriculumEdit814515033[arrowhead=none];
UniTimePermissionCheck944572514 -> CurriculumView814515033[arrowhead=none];
UniTimePermissionCheck944572514 -> DepartmenalRoomFeatureEdit82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> DepartmenalRoomGroupEdit82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> DepartmentDelete1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> DepartmentEditChangeExternalManager1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> DepartmentRoomFeatureAdd82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> DepartmentRoomGroupAdd82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> DistributionPreferenceAdd317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> DistributionPreferenceDelete317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> DistributionPreferenceDetail317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> DistributionPreferenceEdit317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> DistributionPreferences317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> EditCourseOffering317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> EditCourseOfferingCoordinators317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> EditCourseOfferingNote317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> EditExamination1474622403[arrowhead=none];
UniTimePermissionCheck944572514 -> EditInstructor2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> EditRoomDepartments82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> EditRoomDepartmentsExams82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> EventDateMappingEdit1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> EventDateMappings1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> EventDetail2084304250[arrowhead=none];
UniTimePermissionCheck944572514 -> EventDetailArrangeHourClass2084304250[arrowhead=none];
UniTimePermissionCheck944572514 -> EventPermission2084304250[arrowhead=none];
UniTimePermissionCheck944572514 -> EventStatuses1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> ExaminationAssignment1474622403[arrowhead=none];
UniTimePermissionCheck944572514 -> ExaminationDetail1474622403[arrowhead=none];
UniTimePermissionCheck944572514 -> ExaminationDistributionPreferenceDetail1474622403[arrowhead=none];
UniTimePermissionCheck944572514 -> ExaminationDistributionPreferenceEdit1474622403[arrowhead=none];
UniTimePermissionCheck944572514 -> ExaminationPdfReports1066428263[arrowhead=none];
UniTimePermissionCheck944572514 -> ExaminationSchedule1474622403[arrowhead=none];
UniTimePermissionCheck944572514 -> ExaminationTimetabling1066428263[arrowhead=none];
UniTimePermissionCheck944572514 -> ExaminationView1474622403[arrowhead=none];
UniTimePermissionCheck944572514 -> Examinations1474622403[arrowhead=none];
UniTimePermissionCheck944572514 -> Filter876918435[arrowhead=none];
UniTimePermissionCheck944572514 -> GlobalRoomFeatureAdd82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> GlobalRoomFeatureEdit82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> GlobalRoomGroupAdd82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> GlobalRoomGroupEdit82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> HQLReportEdit1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> InstrOfferingConfigAdd317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> InstrOfferingConfigDelete317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> InstrOfferingConfigEdit317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> InstrOfferingConfigEditDepartment317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructionalOfferingCrossLists317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructionalOfferingDetail317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructionalOfferings317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructionalTypeEdit1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorAdd2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorAssignmentPreferences2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorAttributeAssign2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorAttributeEdit2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorDetail2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorGlobalAttributeEdit2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorPreferences2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorRoles1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorScheduling1635055555[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorSurvey2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> InstructorSurveyAdmin2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> Instructors2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> ManageInstructors2091179447[arrowhead=none];
UniTimePermissionCheck944572514 -> ManageSolvers676728335[arrowhead=none];
UniTimePermissionCheck944572514 -> MultipleClassSetup317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> MultipleClassSetupClassEdit317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> NonUniversityLocationDelete82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> NonUniversityLocationEdit82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> OfferingCanLock317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> OfferingCanUnlock317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> OfferingDelete317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> OfferingEdit317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> OfferingEnrollments539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> OfferingLockNeeded317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> OfferingLockNeededLimitedEdit317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> OfferingMakeNotOfferedNoEnrollmentCheck317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> OfferingMakeOffered317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> OtherAuthorityWithFilter1549462339[arrowhead=none];
UniTimePermissionCheck944572514 -> PersonalSchedule2084304250[arrowhead=none];
UniTimePermissionCheck944572514 -> ReservationAdd2016207608[arrowhead=none];
UniTimePermissionCheck944572514 -> ReservationEdit2016207608[arrowhead=none];
UniTimePermissionCheck944572514 -> ReservationOffering2016207608[arrowhead=none];
UniTimePermissionCheck944572514 -> Reservations2016207608[arrowhead=none];
UniTimePermissionCheck944572514 -> RoleFilter876918435[arrowhead=none];
UniTimePermissionCheck944572514 -> RoomAvailability82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> RoomDelete82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> RoomDetail82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> RoomDetailEventAvailability82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> RoomEdit82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> RoomEditAvailability82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> RoomEditChangeCapacity82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> RoomEditChangeControll82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> Rooms82359199[arrowhead=none];
UniTimePermissionCheck944572514 -> SchedulingAssistant539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> SchedulingSubpartDetail317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> SchedulingSubpartEdit317154439[arrowhead=none];
UniTimePermissionCheck944572514 -> SolverSolutionSave676728335[arrowhead=none];
UniTimePermissionCheck944572514 -> SponsoringOrganizationEdit1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> StudentAuthority723888399[arrowhead=none];
UniTimePermissionCheck944572514 -> StudentEnrollments539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> StudentSchedulingCanEnroll539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> StudentSchedulingCanRegister539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> StudentSchedulingCanRequirePreferences539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> StudentSchedulingChangeCriticalOverride539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> StudentSectioningSolverDashboard539497787[arrowhead=none];
UniTimePermissionCheck944572514 -> SubjectAreaEdit1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> TimetableManagerEdit1530278742[arrowhead=none];
UniTimePermissionCheck944572514 -> Timetables676728335[arrowhead=none];
UniTimePermissionCheck944572514 -> TimetablesSolutionCommit676728335[arrowhead=none];
UniTimePermissionCheck944572514 -> TimetablesSolutionLoad676728335[arrowhead=none];
UniTimePermissionCheck944572514 -> TimetablesSolutionLoadEmpty676728335[arrowhead=none];
UniTimeUserContext641976759 -> ChameleonUserContext641976759[arrowhead=none, arrowtail=empty, dir=both];
UniTimeUserContext641976759 -> DepartmentStatusType629358305[label="defaultSession() -> canNoRoleReportExamFinal()"];
UpdateBuildingBackend1526360619 -> Room629358305[label="updateRooms() -> addNewExternalRoomsToSession()"];
UpdateBuildingRequest759770151 -> BuildingInterface759770151[label="iBuilding
[0..1]"];
UpdateCourseOfferingBackend1624300373 -> BaseInstructionalOffering595338686[label="save() -> addTocourseOfferings()"];
UpdateCourseOfferingBackend1624300373 -> Department629358305[label="update() -> isInstructorSchedulingCommitted()"];
UpdateCourseOfferingBackend1624300373 -> HibernateUtil2052906881[label="save() -> clearCache()"];
UpdateCourseOfferingBackend1624300373 -> InstructionalOffering629358305[label="permissionOfferingLockNeeded
[1]"];
UpdateCourseOfferingBackend1624300373 -> OverrideType629358305[label="execute() -> findByReference()"];
UpdateCourseOfferingBackend1624300373 -> Session629358305[label="save() -> lockOffering()"];
UpdateCourseOfferingRequest1912414017 -> CourseOfferingInterface1000739671[label="iCourseOffering
[0..1]"];
UpdateDepartmentBackend1360869250 -> BaseSession595338686[label="saveOrUpdate() -> addTodepartments()"];
UpdateDepartmentBackend1360869250 -> Class_629358305[label="delete() -> deleteAllDistributionPreferences()"];
UpdateDepartmentBackend1360869250 -> HibernateUtil2052906881[label="delete() -> clearCache()"];
UpdateDepartmentBackend1360869250 -> SchedulingSubpart629358305[label="delete() -> deleteAllDistributionPreferences()"];
UpdateDepartmentRequest1559014573 -> DepartmentInterface1000739671[label="iDepartment
[0..1]"];
UpdateInstructorAttributeBackend1334400992 -> AttributeInterface1591923739[label="execute() -> addInstructor()"];
UpdateInstructorAttributeBackend1334400992 -> Department629358305[label="lookuDepartment() -> findByDeptCode()"];
UpdateInstructorAttributeBackend1334400992 -> DepartmentalInstructor629358305[label="execute() -> nameLastNameFirst()"];
UpdateInstructorAttributeRequest1591923739 -> AttributeInterface1591923739[label="iAttribute
[0..1]"];
UpdateRoomDepartmentsBackend1526360619 -> Location629358305[label="execute() -> removedFromDepartment()"];
UpdateRoomDepartmentsRequest759770151 -> DepartmentInterface759770151[label="iDepartment
[0..1]"];
UpdateRoomDepartmentsRequest759770151 -> ExamTypeInterface759770151[label="iExamType
[0..1]"];
UpdateRoomFeatureBackend1526360619 -> Department629358305[label="lookuDepartment() -> findByDeptCode()"];
UpdateRoomFeatureBackend1526360619 -> Location629358305[label="lookupLocations() -> lookupFutureLocations()"];
UpdateRoomFeatureBackend1526360619 -> RoomDetailsBackend1526360619[label="execute() -> wrap()"];
UpdateRoomFeatureRequest759770151 -> FeatureInterface759770151[label="iFeature
[0..1]"];
UpdateRoomGroupBackend1526360619 -> Department629358305[label="lookuDepartment() -> findByDeptCode()"];
UpdateRoomGroupBackend1526360619 -> Location629358305[label="lookupLocations() -> lookupFutureLocations()"];
UpdateRoomGroupBackend1526360619 -> RoomDetailsBackend1526360619[label="execute() -> wrap()"];
UpdateRoomGroupRequest759770151 -> GroupInterface759770151[label="iGroup
[0..1]"];
UserContextWrapper2054707704 -> AbstractAuthority876918435[arrowhead=none];
UserDataInterface1000739671 -> SetUserDataRpcRequest1044312147[arrowhead=none, arrowtail=empty, dir=both];
UserRoles1542390228 -> Roles629358305[label="load() -> findAll()"];
UsersApiToken79803438 -> _BaseRootDAO595338686[label="getContext() -> createNewSession()"];
VariableTitleCourseConnector537604450 -> BaseClass_595338686[label="createClass() -> addToclassInstructors()"];
VariableTitleCourseConnector537604450 -> BaseCourseOffering595338686[label="createOffering() -> addTocreditConfigs()"];
VariableTitleCourseConnector537604450 -> BaseSchedulingSubpart595338686[label="createClass() -> addToclasses()"];
VariableTitleCourseConnector537604450 -> BaseSubjectArea595338686[label="createOffering() -> addTocourseOfferings()"];
VariableTitleCourseConnector537604450 -> ChangeLog629358305[label="findOrCreateVariableTitleSection() -> addChange()"];
VariableTitleCourseConnector537604450 -> CourseCreditType629358305[label="createOffering() -> getCourseCreditTypeForReference()"];
VariableTitleCourseConnector537604450 -> CourseCreditUnitConfig629358305[label="createOffering() -> createCreditUnitConfigOfFormat()"];
VariableTitleCourseConnector537604450 -> CourseCreditUnitType629358305[label="createOffering() -> getCourseCreditUnitTypeForReference()"];
VariableTitleCourseConnector537604450 -> InstrOfferingConfig629358305[label="createSubpart() -> addToschedulingSubparts()"];
VariableTitleCourseConnector537604450 -> OfferingConsentType629358305[label="createOffering() -> getOfferingConsentTypeForReference()"];
VariableTitleCourseConnector537604450 -> ReloadOfferingAction91943020[label="findOrCreateVariableTitleSection() -> forOfferings()"];
VariableTitleCourseConnector537604450 -> Session629358305[label="getAcadSession() -> getSessionUsingCampusYearTerm()"];
VariableTitleCourseConnector537604450 -> SolverServerService1058021598[label="solverServerService
[1]"];
VariableTitleCourseConnector537604450 -> StudentSectioningQueue629358305[label="findOrCreateVariableTitleSection() -> offeringChanged()"];
VariableTitleCourseConnector537604450 -> SubjectArea629358305[label="getSubjectObject() -> findUsingCampusYearTermExternalSubjectAbbreviation()"];
VariableTitleCourseRequest836856674 -> InstructorInfo836856674[label="iInstructor
[0..1]"];
VariableTitleCourseRequest836856674 -> VariableTitleCourseInfo836856674[label="iCourse
[0..1]"];
WeekSelectorBackend2107708513 -> Formats1821660490[label="execute() -> getDateFormat()"];
WeekSelectorBackend2107708513 -> WeekInterface4669270[label="execute() -> addDayName()"];
WeekSelectorBackend2107708513 -> _BaseRootDAO595338686[label="execute() -> get()"];
WeightedStudentId389194987 -> AreaClasfMajor389194987[label="iMajors
[0..*]"];
WeightedStudentId389194987 -> AreaClasfMajor389194987[label="iMinors
[0..*]"];
WeightedStudentId389194987 -> Group389194987[label="iGroups
[0..*]"];
WeightedStudentId389194987 -> Student629358305[label="iStudent
[0..1]"];
XCourse220419187 -> AGHCourseDetailsProvider2037228697[arrowhead=none];
XCourse220419187 -> DefaultCourseDetailsProvider2037228697[arrowhead=none];
XCourse220419187 -> DummyCourseDetailsProvider2037228697[arrowhead=none];
XCourse220419187 -> PurdueCourseDetailsProvider1860031534[arrowhead=none];
XCourse220419187 -> XCredit220419187[label="iCredit
[0..1]"];
XCourseId220419187 -> XCourse220419187[arrowhead=none, arrowtail=empty, dir=both];
_BaseRootDAO595338686 -> DatabaseUpdate2052906881[label="initialize() -> update()"];
_BaseRootDAO595338686 -> StudentSectioningStatusDAO573395717[label="findAll() -> findAll()"];
_BaseRootDAO595338686 -> _RootDAO573395717[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAcademicAreaDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAcademicAreaHistoryDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAcademicClassificationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAdvisorClassPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAdvisorCourseRequestDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAdvisorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAdvisorInstrMthPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAdvisorSectioningPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseApplicationConfigDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseArrangeCreditUnitConfigDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAssignmentDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAssignmentInfoDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseAttachmentTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseBuildingAbbreviationHistoryDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseBuildingDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseBuildingPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCampusDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseChangeLogDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseClassDurationTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseClassEventDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseClassInstructorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseClassWaitListDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseClass_DAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseClusterDiscoveryDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseConstraintInfoDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseContactCategoryDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseCatalogDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseCreditFormatDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseCreditTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseCreditUnitConfigDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseCreditUnitTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseDemandDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseEventDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseHistoryDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseOfferingDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseRequestDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseRequestOptionDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseReservationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseSubpartCreditDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCourseTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCurriculumClassificationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCurriculumCourseDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCurriculumCourseGroupDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCurriculumDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCurriculumOverrideReservationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCurriculumProjectionRuleDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseCurriculumReservationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDatePatternDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDatePatternPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDegreeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDemandOfferingTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDepartmentDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDepartmentRoomFeatureDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDepartmentStatusTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDepartmentalInstructorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDistributionObjectDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDistributionPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseDistributionTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseEventContactDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseEventDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseEventDateMappingDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseEventNoteDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseEventServiceProviderDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExactTimeMinsDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExamConflictDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExamDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExamEventDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExamLocationPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExamOwnerDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExamPeriodDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExamPeriodPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExamStatusDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExamTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExternalBuildingDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExternalDepartmentStatusTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExternalRoomDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExternalRoomDepartmentDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseExternalRoomFeatureDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseFinalExamEventDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseFixedCreditUnitConfigDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseFreeTimeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseGlobalRoomFeatureDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseGroupOverrideReservationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseHashedQueryDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseHistoryDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseIndividualOverrideReservationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseIndividualReservationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstrOfferingConfigDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructionalMethodDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructionalOfferingDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructorAttributeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructorAttributePrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructorAttributeTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructorCoursePrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructorCourseRequirementDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructorCourseRequirementNoteDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructorCourseRequirementTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructorPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseInstructorSurveyDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseItypeDescDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseJointEnrollmentDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseLastLikeCourseDemandDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseLearningCommunityReservationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseLearningManagementSystemInfoDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseLocationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseLocationPictureDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseManagerRoleDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseManagerSettingsDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseMapTileCacheDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseMeetingDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseMessageLogDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseMidtermExamEventDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseNonUniversityLocationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseNonUniversityLocationPictureDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseOfferingConsentTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseOfferingCoordinatorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseOnlineSectioningLogDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseOverrideReservationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseOverrideTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePeriodicTaskDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitClassDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitClassEventDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitClassInstructorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitClassMeetingDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitClassMeetingUtilPeriodDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitCourseOfferingDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitDepartmentalInstructorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitInstrOfferingConfigDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitInstructionalOfferingDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitOfferingCoordinatorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitSchedulingSubpartDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitStudentAcadAreaMajorClassificationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitStudentAcadAreaMinorClassificationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitStudentClassEnrollmentDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePitStudentDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePointInTimeDataDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePosMajorConcentrationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePosMajorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePosMinorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePositionTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePreferenceDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePreferenceGroupDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BasePreferenceLevelDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseProgramDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseQueryLogDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRefTableEntryDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRelatedCourseInfoDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseReservationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRolesDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomDeptDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomFeatureDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomFeaturePrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomFeatureTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomGroupDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomGroupPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomPictureDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseRoomTypeOptionDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSavedHQLDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSavedHQLParameterDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSchedulingSubpartDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseScriptDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseScriptParameterDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSectioningInfoDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSectioningSolutionLogDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSessionConfigDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSessionDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSettingsDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSolutionDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSolutionInfoDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSolverGroupDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSolverInfoDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSolverInfoDefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSolverParameterDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSolverParameterDefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSolverParameterGroupDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSolverPredefinedSettingDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSpecialEventDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSponsoringOrganizationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStaffDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStandardEventNoteDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStandardEventNoteDepartmentDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStandardEventNoteGlobalDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStandardEventNoteSessionDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentAccomodationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentAreaClassificationMajorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentAreaClassificationMinorDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentClassEnrollmentDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentClassPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentEnrollmentDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentEnrollmentMessageDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentGroupDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentGroupReservationDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentGroupTypeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentInstrMthPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentNoteDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentSectHistoryDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentSectioningPrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentSectioningQueueDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseStudentSectioningStatusDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSubjectAreaDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseSubjectHistoryDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTaskExecutionDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTaskParameterDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTeachingClassRequestDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTeachingRequestDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTeachingResponsibilityDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTimePatternDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTimePatternDaysDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTimePatternTimeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTimePrefDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTimetableManagerDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseTravelTimeDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseUnavailableEventDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseUserDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseUserDataDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseVariableFixedCreditUnitConfigDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseVariableRangeCreditUnitConfigDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
_RootDAO573395717 -> BaseWaitListDAO595338686[arrowhead=none, arrowtail=empty, dir=both];
    
}
@enduml